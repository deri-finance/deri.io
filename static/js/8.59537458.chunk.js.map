{"version":3,"sources":["pages/Pool/img/staked.svg","hooks/useContractLp.ts","pages/Pool/Card.js"],"names":["r","contractdescribers","useContract","name","chainId","contractAddress","wallet","useWallet","getContract","address","abi","ethereum","useMemo","provider","getProvider","networkVersion","String","Web3Provider","Contract","account","getSigner","connectUnchecked","getProviderOrSigner","pollingInterval","require","keys","forEach","key","path","split","last","length","substring","indexOf","PairAddress","Card","lang","pool","history","useHistory","defaultList","useState","poolInfo","setPoolinfo","setAddress","isStaked","setIsStaked","xvsNum","setXvsNum","setShow","aTimeRewardInfo","setATimeRewardInfo","bTimeRewardInfo","setBTimeRewardInfo","totalYearDeri","setTotalYearDeri","accountEthTokenValue","setAccountEthTokenValue","apy","setApy","accountDeriToken","setAccountDeriToken","DeriforPairContract","EthforPairContract","PoolContract","BTokenContract","PairContract","getPoolInfo","useCallback","version","res","getLiquidity","balanceOf","DeriNumber","EthNumber","deriPath","process","fetch","resp","json","axios","get","eresp","ethPrice","data","deriPrice","price","deriAmount","BigNumber","from","_hex","toString","ethAmount","deriValue","bg","times","toNumber","ethValue","liquidity","console","log","getVenusEarned","getIsStaked","poolAddress","bTime","id","setTimeout","connect","contract","map","item","obj","getSecondsPerLiquidityInsideX128","timestamp","secondsPerLiquidityInsideX128","Promise","all","aTime","getBTokenValue","positions","tickLower","tickUpper","slot0","tickCurrent","tick","amount","getAmountETHAndDeri","total_amount0","total_amount1","deri","eth","deriSum","reduce","accumulator","currentValue","ethSum","getApy","sumValue","totalYearDeriValue","getTimeRewardInfo","rewards","find","secondsPerLiquidityInsideX128_a","getRewardInBetween","reward","Math","abs","totalScore","valuePerYear","onImgError","event","target","src","errorimg","useEffect","isConnected","detail","sess","sessionStorage","getItem","chainMap","url","type","className","onClick","push","staking","retired","new","alt","BSC","POLYGON","ETH","ARBITRUM","ZKSYNC","networkLogo","zone","chain","toUpperCase","isLp","bTokens","bTokenSymbol","index","onError","singleBtoken","TokenExplode","value","suffix","displayType","allowZero","decimalScale","thousandSeparator","stakedLogo","width","disabled","outline","label","TokenWrapper","styled","div","Token","props","rotate","angle","filter","t","i","token","curRotate"],"mappings":"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","file":"static/js/8.59537458.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/staked.45c27f0b.svg\";","import { Contract, ContractInterface } from \"@ethersproject/contracts\";\nimport {\n  JsonRpcProvider,\n  JsonRpcSigner,\n  Web3Provider,\n} from \"@ethersproject/providers\";\nimport { useMemo } from \"react\";\nimport { useWallet } from \"use-wallet\";\nimport { getProvider } from \"../utils/utils\";\n\nconst contractdescribers = {};\n\nfunction importAll(r) {\n  return r.keys().forEach((key) => {\n    const path = key.split(\"/\");\n    const last = path[path.length - 1];\n    contractdescribers[last.substring(0, last.indexOf(\".\"))] = r(key);\n  });\n}\n\nimportAll(require.context(`../abis/`, true, /\\.json$/));\n\nexport default function useContract(\n  name: string,\n  chainId: number,\n  contractAddress: string,\n): Contract {\n  const wallet = useWallet();\n  const { address, abi } = getContract(name);\n  const { ethereum } = wallet;\n  if (address) {\n    contractAddress = address;\n  }\n  return useMemo(() => {\n    let provider = getProvider(chainId);\n    if (ethereum && ethereum.networkVersion === String(chainId)) {\n      provider = new Web3Provider(ethereum, \"any\");\n    }\n    if (!provider) {\n      return null;\n    }\n    return new Contract(\n      contractAddress,\n      abi,\n      getProviderOrSigner(provider, wallet.account),\n      {pollingInterval: 500}\n    );\n  }, [contractAddress, abi, wallet]);\n}\n\n// account is not optional\nfunction getSigner(provider: JsonRpcProvider, account: string): JsonRpcSigner {\n  return provider.getSigner(account).connectUnchecked();\n}\n\n// account is optional\nfunction getProviderOrSigner(\n  provider: JsonRpcProvider,\n  account?: string\n): JsonRpcProvider | JsonRpcSigner {\n  return account ? getSigner(provider, account) : provider;\n}\n\nfunction getContract(name: string): ContractDescriber {\n  return contractdescribers[name];\n}\n\ninterface ContractDescriber {\n  address: string;\n  abi: ContractInterface;\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\"\nimport Button from '../../components/Button/Button'\nimport BSC from '../../assets/img/BNB.svg'\nimport ARBITRUM from '../../assets/img/arbitrum-logo.svg'\nimport POLYGON from '../../assets/img/polygon-logo.svg'\nimport ETH from '../../assets/img/ethereum.svg'\nimport ZKSYNC from '../../assets/img/zkSync-logo.svg'\nimport stakedLogo from './img/staked.svg'\nimport errorimg from '../../assets/img/ErrorImg.png'\nimport './card.less'\nimport styled, { StyleSheetManager } from 'styled-components';\nimport useContract from '../../hooks/useContractLp';\nimport { BigNumber } from 'ethers';\nimport { bg, getAmountETHAndDeri, getProvider } from '../../utils/utils';\nimport axios from 'axios';\nconst DeriAddress = \"0x21E60EE73F17AC0A411ae5D690f908c3ED66Fe12\"\nconst ETHAddress = \"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\"\nconst PairAddress = \"0x96C3966534b4377691e11e163A0409Ad01667343\"\nexport default function Card({ lang, pool, wallet }) {\n  const history = useHistory();\n  const defaultList = ['311860', '311904']\n  const [poolInfo, setPoolinfo] = useState({})\n  const [address, setAddress] = useState(pool.address)\n  const [isStaked, setIsStaked] = useState(false)\n  const [xvsNum, setXvsNum] = useState()\n  const [show, setShow] = useState(true)\n  const [aTimeRewardInfo, setATimeRewardInfo] = useState([])\n  const [bTimeRewardInfo, setBTimeRewardInfo] = useState([])\n  const [totalYearDeri, setTotalYearDeri] = useState(0)\n  const [accountEthTokenValue, setAccountEthTokenValue] = useState(0)\n  const [apy, setApy] = useState()\n  const [accountDeriToken, setAccountDeriToken] = useState(0)\n  const DeriforPairContract = useContract(\"ERC20\", 42161, DeriAddress)\n  const EthforPairContract = useContract(\"ERC20\", 42161, ETHAddress)\n  const PoolContract = useContract(\"arbitrumLp\", 42161)\n  const BTokenContract = useContract(\"LpTokenId\", 42161)\n  const PairContract = useContract(\"PairAbi\", 42161)\n  const getPoolInfo = useCallback(async () => {\n    setPoolinfo({})\n    let res = await pool.getPoolInfo(pool.address, pool.chainId, pool.version)\n\n    setAddress(pool.address)\n    setPoolinfo(res)\n\n  }, [pool])\n  const getLiquidity = useCallback(async () => {\n    setPoolinfo({})\n    let DeriNumber = await DeriforPairContract.balanceOf(PairAddress)\n    let EthNumber = await EthforPairContract.balanceOf(PairAddress)\n    let deriPath = `${process.env.REACT_APP_INFO_HTTP_URL}/stats_for_token`\n    let resp = await fetch(deriPath);\n    let res = await resp.json();\n    let ethPath = \"https://sig.oraclum.io/unsigned?symbols=ETHUSD\"\n    let eresp = await axios.get(ethPath);\n    let ethPrice = eresp.data[\"ETHUSD\"]\n    let deriPrice = res.data.price;\n    let deriAmount = BigNumber.from(DeriNumber._hex).toString() / (10 ** 18);\n    let ethAmount = BigNumber.from(EthNumber._hex).toString() / (10 ** 18);\n    let deriValue = bg(deriAmount).times(deriPrice).toNumber();\n    let ethValue = bg(ethAmount).times(ethPrice).toNumber();\n    let liquidity = deriValue + ethValue\n    console.log(\"getLiquidity\", liquidity)\n    setPoolinfo({\n      liquidity: liquidity,\n    })\n  }, [DeriforPairContract, EthforPairContract])\n  const getVenusEarned = async () => {\n    if (pool && (pool.version === 'v3' || pool.version === 'v3_lite')) {\n      let res = await pool.getVenusEarned(wallet, pool.address)\n      setXvsNum(res)\n    }\n  }\n  const getIsStaked = useCallback(async () => {\n    let res = await pool.getIsStaked(wallet, pool)\n    if (res) {\n      setIsStaked(res.isStaked)\n      setAddress(res.poolAddress)\n    }\n  }, [wallet, pool])\n\n  const bTime = useCallback(async (id) => {\n    let res;\n    await setTimeout(async () => {\n      let provider = getProvider(42161);\n      let contract = await PoolContract.connect(provider)\n      console.log(\"bTime\", contract)\n      let data = defaultList.map(async (item) => {\n        let obj = {}\n        let res = await contract.getSecondsPerLiquidityInsideX128(item)\n        if (res) {\n          obj[\"id\"] = item\n          obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\n          obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\n        }\n        return obj\n      })\n      data = await Promise.all(data)\n      setBTimeRewardInfo(data)\n    }, 1000);\n    return res\n  }, [PoolContract])\n\n  const aTime = useCallback(async () => {\n    let data = defaultList.map(async (item) => {\n      let obj = {}\n      let res = await PoolContract.getSecondsPerLiquidityInsideX128(item)\n      if (res) {\n        obj[\"id\"] = item\n        obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\n        obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\n      }\n      console.log(\"aTime res\", res)\n      return obj\n    })\n    data = await Promise.all(data)\n    bTime()\n    setATimeRewardInfo(data)\n  }, [PoolContract])\n\n  const getBTokenValue = useCallback(async () => {\n    let data = defaultList.map(async (item) => {\n      let obj = {}\n      let res = await BTokenContract.positions(item)\n      obj = {\n        tickLower: res.tickLower,\n        tickUpper: res.tickUpper,\n        liquidity: BigNumber.from(res.liquidity._hex).toString()\n      }\n      return obj\n    })\n    data = await Promise.all(data)\n    let tickCurrent = await PairContract.slot0()\n    tickCurrent = tickCurrent.tick\n    let amount = data.map((item) => {\n      let [total_amount0, total_amount1] = getAmountETHAndDeri(tickCurrent, item.tickLower, item.tickUpper, item.liquidity)\n      return {\n        deri: total_amount0 / 10 ** 18,\n        eth: total_amount1 / 10 ** 18\n      }\n    })\n    let deriSum = amount.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.deri;\n    }, 0)\n    let ethSum = amount.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.eth;\n    }, 0)\n    let ethPath = \"https://sig.oraclum.io/unsigned?symbols=ETHUSD\"\n    let eresp = await axios.get(ethPath);\n    console.log(\"ETHUSD\", eresp.data)\n    let ethPrice = eresp.data[\"ETHUSD\"]\n    let ethValue = bg(ethSum).times(ethPrice).toNumber();\n    setAccountEthTokenValue(ethValue)\n    setAccountDeriToken(deriSum)\n  }, [BTokenContract, defaultList, PairContract])\n\n  const getApy = useCallback(async () => {\n    if (totalYearDeri && accountDeriToken && accountEthTokenValue) {\n      let deriPath = `${process.env.REACT_APP_INFO_HTTP_URL}/stats_for_token`\n      let resp = await fetch(deriPath);\n      let res = await resp.json();\n      let deriPrice = res.data.price;\n      let deriValue = bg(accountDeriToken).times(deriPrice).toNumber();\n      let sumValue = deriValue + accountEthTokenValue\n      let totalYearDeriValue = bg(totalYearDeri).times(deriPrice).toNumber();\n      let apy = (totalYearDeriValue / sumValue) * 100\n      setApy(apy)\n    }\n  }, [totalYearDeri, accountDeriToken, accountEthTokenValue])\n\n  const getTimeRewardInfo = useCallback(async () => {\n    console.log(\"getTimeRewardInfo\", aTimeRewardInfo, bTimeRewardInfo)\n    let rewards = bTimeRewardInfo.map(async (item) => {\n      let aTime = aTimeRewardInfo.find(id => id.id === item.id)\n      let secondsPerLiquidityInsideX128_a = aTime.secondsPerLiquidityInsideX128\n      let reward = await PoolContract.getRewardInBetween(item.id, item.timestamp, secondsPerLiquidityInsideX128_a, item.secondsPerLiquidityInsideX128)\n      if (reward) {\n        let obj = {\n          reward: BigNumber.from(reward._hex).toString() / 10 ** 18,\n          id: item.id,\n          timestamp: Math.abs(item.timestamp - aTime.timestamp)\n        }\n        return obj\n      }\n    })\n    rewards = await Promise.all(rewards)\n    console.log(\"getTimeRewardInfo\", rewards)\n    if (rewards[0].timestamp !== 0) {\n      const totalScore = rewards.reduce((accumulator, currentValue) => {\n        return accumulator + currentValue.reward;\n      }, 0);\n      const oneYear = 1000 * 60 * 60 * 24 * 365;\n      const valuePerYear = (totalScore / (rewards[0].timestamp * 1000)) * oneYear;\n      setTotalYearDeri(valuePerYear)\n    }\n  }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\n  const onImgError = (event) => {\n    event.target.src = errorimg\n  }\n  const closeSymbol = (address) => {\n    sessionStorage.setItem(address, false)\n    setShow(false)\n  }\n  useEffect(() => {\n    if (pool.version === 'ulp' && DeriforPairContract) {\n      getLiquidity()\n    } else {\n      getPoolInfo()\n    }\n    if (wallet.isConnected()) {\n      getIsStaked()\n      getVenusEarned()\n    }\n  }, [pool, wallet.detail.account, DeriforPairContract, EthforPairContract])\n  useEffect(() => {\n    let sess = sessionStorage.getItem(pool.address)\n    if (sess !== null) {\n      if (sess) {\n        setShow(false)\n      }\n    }\n  }, [pool])\n  const networkLogo = (chainId) => {\n    let src;\n    if (chainId === \"56\" || chainId === \"97\") {\n      src = BSC\n    } else if (chainId === \"137\") {\n      src = POLYGON\n    } else if (chainId === \"1\") {\n      src = ETH\n    } else if (chainId === '42161' || chainId === '421611' || chainId === '421613') {\n      src = ARBITRUM\n    } else if (chainId === '324') {\n      src = ZKSYNC\n    }\n    return src\n  }\n  const staking = (url) => {\n    if (pool.version === 'v2_lite_open') {\n      return\n    }\n    history.push(url)\n  }\n\n  useEffect(() => {\n    if (pool.version === \"ulp\" && PoolContract) {\n      setATimeRewardInfo([])\n      setBTimeRewardInfo([])\n      setApy()\n      aTime()\n    }\n  }, [pool.version, PoolContract])\n  useEffect(() => {\n    if (pool.version === \"ulp\" && BTokenContract && PairContract) {\n      getBTokenValue()\n    }\n  }, [BTokenContract, pool.version, PairContract])\n\n  useEffect(() => {\n    if (totalYearDeri && accountDeriToken && accountEthTokenValue) {\n      getApy()\n    }\n  }, [totalYearDeri, accountDeriToken, accountEthTokenValue])\n\n  useEffect(() => {\n    if (aTimeRewardInfo.length && PoolContract && bTimeRewardInfo.length) {\n      getTimeRewardInfo()\n    }\n  }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\n  const chainMap = {\n    \"BSC\": \"BNB Chain\",\n    \"ZKSYNC\": \"zkSync Era\"\n  }\n  const url = pool.version === 'ulp' ? `/lppool/${pool.chainId}/${pool.address}` : `/pool/${pool.version || 'v1'}/${pool.chainId}/${pool.type}/${pool.address}`\n  return (\n    <div className={`${pool.address === '0x243681B8Cd79E3823fF574e07B2378B8Ab292c1E' ? 'showGuide' : ''} card-box`}>\n      <div className={pool.version === 'v2_lite_open' ? 'card-list open-list' : 'card-list'} onClick={() => { staking(url) }} >\n        <div className={`card-header ${pool.retired ? `${pool.version}` : \"\"} ${pool.new ? \"new\" : ''}`}>\n          <div className='pool-network-type'>\n            <div className='network-logo'>\n              <img alt='' src={networkLogo(pool.chainId)} />\n            </div>\n            <div className='pool-type-network-text'>\n              <div className='pool-type-text'>\n                {pool.address !== '0xD2D950e338478eF7FeB092F840920B3482FcaC40' && <>\n                  {lang[pool.type]} {lang[pool.zone]}\n                </>}\n                {pool.address === \"0x1eF92eDA3CFeefb8Dae0DB4507f860d3b73f29BA\" && <>\n                  DERI-based\n                </>}\n                {pool.address === '0xD2D950e338478eF7FeB092F840920B3482FcaC40' && <>\n                  {lang[pool.zone]}\n                </>}\n              </div>\n              <div className='pool-network-text'>\n                {chainMap[pool.chain.toUpperCase()] ? chainMap[pool.chain.toUpperCase()] : pool.chain.toUpperCase()}\n              </div>\n            </div>\n          </div>\n          <div className='base-token-logo'>\n            {pool.isLp && <>\n              <div className='lp-base-token-bg'>\n                <div className={`base-token-bg ${pool.bTokens[0].bTokenSymbol}`}></div>\n                <span className='lp-con'>+</span>\n                <div className={`base-token-bg ${pool.bTokens[1].bTokenSymbol}`}></div>\n              </div>\n            </>}\n            {!pool.isLp && pool.version !== 'v3' && pool.version !== \"v3_lite\" && <>\n              {pool.bTokens.map((item, index) => <div key={index} className='base-token-box-bg no-animation-tokens'>\n                <div className={`base-token-bg ${item.bTokenSymbol}`}>\n                  {pool.version === 'v2_lite_open' && <>\n                    <img alt='' onError={onImgError} src={`https://raw.githubusercontent.com/deri-finance/deri-open-zone/main/img/${item.bTokenSymbol}.png`} />\n                  </>}\n                </div>\n              </div>)}\n            </>}\n            {(pool.version === \"v3\" || pool.version === \"v3_lite\") && (!pool.singleBtoken) &&\n              <TokenExplode bTokens={pool.bTokens} />\n            }\n            {\n              (pool.version === \"v3\" || pool.version === \"v3_lite\") && (pool.singleBtoken) &&\n              <div className='base-token-box-bg no-animation-tokens'>\n                <div className={`base-token-bg ${pool.bTokens[0].bTokenSymbol}`}>\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n        <div className='card-content'>\n\n          <div className='max-apy'>\n            {pool.version !== 'v2_lite_open' && <>\n              <div className='max-apy-title'>\n                {(pool.version === 'v2' || pool.version === \"v3_lite\" || pool.version === \"v3\") ? lang['max-apy'] : lang['apy']}\n              </div>\n              <div className='max-apy-num'>\n                <DeriNumberFormat value={pool.version === \"ulp\" ? apy : poolInfo.apy} suffix='%' displayType='text' allowZero={true} decimalScale={2} />\n              </div>\n            </>}\n          </div>\n          <div className='total-pool-liquidity'>\n            <div className='total-liquidity-title'>\n              {lang['total-pool-liquidity']}\n            </div>\n            <div className='total-liquidity-num'>\n              <DeriNumberFormat value={poolInfo.liquidity} displayType='text' thousandSeparator={true} decimalScale={pool.type === 'lp' ? pool.version === \"ulp\" ? 0 : 7 : 0} />\n            </div>\n          </div>\n          <div className='your-deri-epoch'>\n            {isStaked && address === pool.address && <div className='staked-box'>\n              <img src={stakedLogo} alt='' />\n              {lang['staked']}\n            </div>}\n            {(+xvsNum > 0) && (pool.version === 'v3' || pool.version === 'v3_lite') && <span className='xvs-collectable'><div className='staked-box'><DeriNumberFormat width='50px' value={xvsNum} displayType='text' thousandSeparator={true} decimalScale={2} /> &nbsp; XVS  {lang['collectable']}</div></span>}\n          </div>\n          <div className='stake-button'>\n            <Button disabled={pool.version === 'v2_lite_open' ? true : false} className='button' outline label={pool.version === 'v2_lite_open' ? lang['operating'] : lang['stake']} />\n          </div>\n        </div>\n      </div>\n      {/* {pool.version === \"v3_lite\" && show &&\n        <div className='new-symbol'>\n          <div className='new-symbol-text'>\n            New Listing : <a rel=\"noreferrer\" href='https://deri.io/#/trade/futures/FITFIUSDT' target=\"_blank\" >FITFIUSDT</a> <a href='https://deri.io/#/trade/futures/AVAXUSDT' rel=\"noreferrer\" target=\"_blank\">AVAXUSDT</a>\n          </div>\n          <div className='close-symbol'>\n            <img src={close} alt='close' onClick={() => closeSymbol(pool.address)} />\n          </div>\n        </div>\n      } */}\n    </div>\n  )\n}\n\n\nconst TokenWrapper = styled.div`\n  @-webkit-keyframes explode {\n    0% {\n        transform: translateX(0px);\n        -moz-transform : translateX(0px);\n    }\n    100% {\n        transform: translateX(100px);\n        -moz-transform : translateX(100px);\n    }\n  }\n\n  @keyframes explode {\n    0% {\n        transform: translateX(0px);\n        -moz-transform : translateX(0px);\n    }\n    100% {\n        transform: translateX(100px) ;\n        -moz-transform : translateX(100px) ;\n    }\n  }\n  .base-token{\n    margin-left: 0px !important;\n    z-index : -2;\n    visibility: hidden;\n    background-color: #111e34;\n    border : 1px solid #fff;\n  }\n  @media only screen and (max-width: 760px) {\n    .base-token{\n      display:none;\n    }\n  }\n  .base-token-box-bg.explode:hover .move  {\n    -webkit-animation : explode .4s .0s linear;\n    -moz-animation :  explode .4s .0s linear;\n    animation: explode .4s .0s linear;\n    visibility: visible;    \n  }\n  \n  .base-token-box-bg.explode:hover .base-token {\n    z-index : 2 !important;\n  } \n\n`\nconst Token = styled.div`\n  position: absolute;\n  transform : ${props => `rotate(${-props.rotate}deg)`};\n  width: 48px;\n  height: 48px;\n  display: inline-block;\n  border-radius: 50%;\n  .move {\n    transform : translateX(100px) ${props => `rotate(${props.rotate}deg)`};\n  }\n`\n\nconst TokenExplode = ({ bTokens = [] }) => {\n  const angle = 360 / bTokens.length\n  return (\n    <TokenWrapper className='v3-tokens'>\n      <div className='tokens'>\n        {bTokens.filter((t, i) => i < 3).map((token, index) => (\n          <div className='base-token-box-bg' key={index}>\n            <div className={`base-token-bg ${token.bTokenSymbol}`}>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className='base-token-box-bg explode'>\n        <div className={'base-token-bg num-token'}>\n          {bTokens.length - 3} +\n        </div>\n        {bTokens.map((token, index) => {\n          const curRotate = angle * index\n          return (\n            <Token className='base-token' rotate={curRotate} width='100' key={index}>\n              <div width='100' rotate={curRotate} className={`base-token-bg move ${token.bTokenSymbol}`} >\n              </div>\n            </Token>\n          )\n        })}\n      </div>\n    </TokenWrapper>\n  )\n}"],"sourceRoot":""}