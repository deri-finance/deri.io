{"version":3,"sources":["utils/DeriNumberFormat.js","utils/graph_api.js","pages/Leaderboard/Leaderboard.tsx"],"names":["Wrapper","styled","NumberFormat","props","width","LoadLine","span","test","height","DeriNumberFormat","useState","className","renderablity","setRenderablity","firstTime","setFirstTime","isValidate","allowZero","value","undefined","isNaN","Math","abs","renderText","replace","useEffect","closeShowLoadingEffectAfterLoaded","wallet","defaultValue","others","decimalScale","bg","toFixed","countDecimal","toNonExponential","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","clearTimeout","suffix","graphQLClient","GraphQLClient","require","graph_request_test","mutation","variables","request","inject","observer","rankingsList","setRankingsList","graphqlList","setGraphqlList","accountDays","setAccountDays","listDays","setListDays","accountInfo","setAccountInfo","loadList","a","query","gql","chainId","data","accountDailyPnl","length","list","filterList","Days","timestamp","timestampNow","Date","timestampBegin","parseInt","String","getTime","timeArr","filter","item","accountArr","map","account","Set","obj","fee","notional","pnl","fItem","plus","toNumber","sort","b","splice","find","classnames","active","onClick","prefix","index","Icon","token","secondary","formatAddress","up","down"],"mappings":"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","file":"static/js/31.4029f580.chunk.js","sourcesContent":["import React,{useState,useEffect,useRef} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport NumberFormat from 'react-number-format'\r\nimport { inject, observer } from 'mobx-react';\r\nimport styled from 'styled-components';\r\nimport { toNonExponential,countDecimal } from './utils';\r\nimport { bg } from '../lib/web3js';\r\nconst Wrapper = styled(NumberFormat)`\r\n  width : ${props => props.width}px;\r\n`\r\nconst LoadLine = styled.span`\r\n  width : ${props => /px$/.test(props.width) ? props.width : `${props.width}px`};\r\n  height : ${props => /px$/.test(props.height) ? props.height : `${props.height}px`};\r\n`\r\nfunction DeriNumberFormat(props){\r\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\r\n  const [firstTime, setFirstTime] = useState(true)\r\n  const isValidate = () => {\r\n    const {allowZero} = props \r\n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== ''  && !isNaN(props.value) && props.value !== 'NaN') \r\n          || ((Math.abs(props.value)) === 0 && allowZero === true )\r\n  }\r\n  const renderText = value => value && value.replace(/\\.$/,'')\r\n\r\n  useEffect(() => {\r\n    const {allowZero,wallet,closeShowLoadingEffectAfterLoaded,defaultValue = '--',...others} = props \r\n\r\n    if(isValidate()) {\r\n      //如果精度截取之后为0，则动态获取精度，取到不为0为止\r\n      if(others.decimalScale > 0 && others.value && /\\d+\\.0*[1-9]+/.test(others.value) && !allowZero && (+bg(others.value).toFixed((+others.decimalScale || 2))) === 0){\r\n        others.decimalScale = countDecimal(Math.abs(others.value)) + 2\r\n      } \r\n\r\n      if(others.decimalScale === -1 || ((+others.value) === 0 && allowZero)){\r\n        delete others.decimalScale\r\n      }\r\n\r\n      //科学计数法\r\n      others.value = /e(\\+|=)?/.test(others.value) ? toNonExponential(others.value) : ''+others.value\r\n      if(others.value && /\\d+.9{6}/.test(others.value)){\r\n        others.value = (+others.value).toFixed(5)\r\n      }\r\n      setRenderablity(<Wrapper {...others}  renderText={renderText}\r\n      displayType = 'text'  fixedDecimalScale={true} thousandSeparator={true}/>)\r\n    } else if(firstTime){\r\n      const {width,height} = props\r\n      setRenderablity(<LoadLine className='loading-line' width={width} height={height}></LoadLine>)\r\n      if(closeShowLoadingEffectAfterLoaded){\r\n        setFirstTime(false)\r\n      }\r\n    } \r\n    const timeout = window.setTimeout(() => {\r\n      // && wallet && (!wallet.isConnected() || !wallet.supportChain)\r\n      if(!isValidate()){\r\n        setRenderablity(defaultValue)\r\n      }\r\n    },defaultValue === others.value ? 0 : 60000)\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    };\r\n  }, [props.value,props.decimalScale,props.suffix]);\r\n\r\n  return renderablity;\r\n}\r\nexport default DeriNumberFormat\r\n// export default inject('wallet')(observer(DeriNumberFormat))","const {GraphQLClient } = require('graphql-request')\r\nconst graphQLClient = new GraphQLClient(\"https://graph.deri.io/graphql\", {})\r\nexport function graph_request_test(mutation,variables) {\r\n    return graphQLClient.request(mutation,variables)\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\";\r\nimport \"./leaderboard.less\";\r\nimport Icon from \"../../components/Icon/Icon\";\r\nimport { gql } from \"graphql-request\";\r\nimport { graph_request_test } from \"../../utils/graph_api\";\r\nimport { bg, formatAddress } from \"../../utils/utils\";\r\n\r\nexport interface Props {\r\n  wallet: any;\r\n}\r\nfunction Leaderboard({ wallet = {} }: Props) {\r\n  const [rankingsList, setRankingsList] = useState<any>([]);\r\n  const [graphqlList, setGraphqlList] = useState<any>([]);\r\n  const [accountDays, setAccountDays] = useState(30);\r\n  const [listDays, setListDays] = useState(30);\r\n  const [accountInfo,setAccountInfo] = useState<any>({})\r\n  const timeDay: number = 86400;\r\n  const loadList = async () => {\r\n    let query = gql`\r\n      query ($chainId: Int!) {\r\n        accountDailyPnl(where: { chainId: $chainId }) {\r\n          chainId\r\n          account\r\n          fee\r\n          notional\r\n          pnl\r\n          timestamp\r\n        }\r\n      }\r\n    `;\r\n    let variables = { chainId: 56 };\r\n    let data = await graph_request_test(query, variables);\r\n    if (data.accountDailyPnl.length) {\r\n      let list = data.accountDailyPnl;\r\n      setGraphqlList(list);\r\n    }\r\n  };\r\n\r\n  const filterList = (graphqlList,Days)=>{\r\n    const timestamp = timeDay * Days;\r\n      let timestampNow = new Date();\r\n      let timestampBegin = parseInt(\r\n        String(timestampNow.getTime() / 1000 - timestamp - 1)\r\n      );\r\n      let timeArr = graphqlList.filter(\r\n        (item) => item.timestamp > timestampBegin\r\n      );\r\n      let accountArr = timeArr.map((item) => {\r\n        return item.account;\r\n      });\r\n      let account = [...new Set(accountArr)];\r\n      let pnlList = account.map((item) => {\r\n        let obj = {\r\n          account: item,\r\n          fee: 0,\r\n          notional: 0,\r\n          pnl: 0,\r\n        };\r\n        let accountPnlArr = timeArr.filter((fItem) => fItem.account === item);\r\n        let pnl = accountPnlArr.map((item) => {\r\n          obj[\"pnl\"] = bg(obj[\"pnl\"]).plus(item.pnl).toNumber();\r\n          obj[\"fee\"] = bg(obj[\"fee\"]).plus(item.fee).toNumber();\r\n          obj[\"notional\"] = bg(obj[\"notional\"]).plus(item.notional).toNumber();\r\n        });\r\n        return obj;\r\n      });\r\n      return pnlList\r\n  }\r\n  useEffect(() => {\r\n    loadList();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (graphqlList.length) {\r\n      let pnlList = filterList(graphqlList,listDays)\r\n      let list = pnlList.sort((a, b) => b.pnl - a.pnl);\r\n      list = list.splice(0,50)\r\n      setRankingsList(list);\r\n    }\r\n  }, [listDays, graphqlList]);\r\n  useEffect(() => {\r\n    if (graphqlList.length && wallet.account) {\r\n      let pnlList = filterList(graphqlList,accountDays)\r\n      let account = pnlList.find((item)=> item.account === wallet.account)\r\n      if(account){\r\n        setAccountInfo(account)\r\n      }\r\n    }\r\n  }, [accountDays, graphqlList,wallet.chainId, wallet.account]);\r\n  return (\r\n    <div className=\"Leaderboard\">\r\n      <div className=\"Leaderboard-box\">\r\n        <div className=\"my-historical-trading\">\r\n          <div className=\"title-tab-day\">\r\n            <div className=\"title-leaderboard\">\r\n              My Historical Trading Performance\r\n            </div>\r\n            <div className=\"tab-day\">\r\n              <div\r\n                className={classnames(\"day-btn\", {\r\n                  active: accountDays === 7,\r\n                })}\r\n                onClick={() => {\r\n                  setAccountDays(7);\r\n                }}\r\n              >\r\n                7 DAYS\r\n              </div>\r\n              <div\r\n                className={classnames(\"day-btn\", {\r\n                  active: accountDays === 30,\r\n                })}\r\n                onClick={() => {\r\n                  setAccountDays(30);\r\n                }}\r\n              >\r\n                30 DAYS\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"my-info-list\">\r\n            <div className=\"info-box\">\r\n              <div className=\"info-num\"> <DeriNumberFormat prefix=\"$ \"  value={accountInfo.notional} decimalScale={2} /></div>\r\n              <div className=\"info-title\"> Notional </div>\r\n            </div>\r\n            <div className=\"info-box\">\r\n              <div className=\"info-num\"><DeriNumberFormat prefix=\"$ \" value={accountInfo.fee} decimalScale={2} /></div>\r\n              <div className=\"info-title\"> Transaction Fee </div>\r\n            </div>\r\n            <div className=\"info-box\">\r\n              <div className=\"info-num\"> <DeriNumberFormat prefix=\"$ \" value={accountInfo.pnl} decimalScale={2} /></div>\r\n              <div className=\"info-title\"> PNL </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"rankings\">\r\n          <div className=\"rankings-title-tab-day\">\r\n            <div className=\"rankings-title\">Rankings</div>\r\n            <div className=\"tab-day\">\r\n              <div\r\n                className={classnames(\"day-btn\", { active: listDays === 7 })}\r\n                onClick={() => {\r\n                  setListDays(7);\r\n                }}\r\n              >\r\n                7 DAYS\r\n              </div>\r\n              <div\r\n                className={classnames(\"day-btn\", { active: listDays === 30 })}\r\n                onClick={() => {\r\n                  setListDays(30);\r\n                }}\r\n              >\r\n                30 DAYS\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"rankings-list-title\">\r\n            <div className=\"rank\">Rank</div>\r\n            <div className=\"trade\">Trade</div>\r\n            <div className=\"notional\">Notional</div>\r\n            <div className=\"transaction-fee\">Transaction Fee</div>\r\n            <div className=\"pnl\">PNL</div>\r\n          </div>\r\n          <div className=\"rankings-list-num\">\r\n            {rankingsList.map((item, index) => {\r\n              return (\r\n                <div className=\"rankings-list-num-box\" key={index}>\r\n                  <div className=\"rank\">\r\n                    {index + 1 === 1 && (\r\n                      <Icon\r\n                        token=\"topOne\"\r\n                        width={undefined}\r\n                        height={undefined}\r\n                        secondary={undefined}\r\n                        className={undefined}\r\n                        onClick={undefined}\r\n                      />\r\n                    )}\r\n                    {index + 1 === 2 && (\r\n                      <Icon\r\n                        token=\"topTwo\"\r\n                        width={undefined}\r\n                        height={undefined}\r\n                        secondary={undefined}\r\n                        className={undefined}\r\n                        onClick={undefined}\r\n                      />\r\n                    )}\r\n                    {index + 1 === 3 && (\r\n                      <Icon\r\n                        token=\"topThree\"\r\n                        width={undefined}\r\n                        height={undefined}\r\n                        secondary={undefined}\r\n                        className={undefined}\r\n                        onClick={undefined}\r\n                      />\r\n                    )}\r\n                    {index + 1 > 3 && (\r\n                      <span className=\"top-num\">{index + 1}</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"trade\">{formatAddress(item.account)}</div>\r\n                  <div className=\"notional\">\r\n                    ${\" \"}\r\n                    <DeriNumberFormat\r\n                      value={item.notional}\r\n                      displayType=\"text\"\r\n                      decimalScale={2}\r\n                    />\r\n                  </div>\r\n                  <div className=\"transaction-fee\">\r\n                    ${\" \"}\r\n                    <DeriNumberFormat\r\n                      value={item.fee}\r\n                      displayType=\"text\"\r\n                      decimalScale={2}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className={classnames(\"pnl\", {\r\n                      up: +item.pnl > 0,\r\n                      down: +item.pnl < 0,\r\n                    })}\r\n                  >\r\n                    {+item.pnl > 0 ? \"+\" : \"\"} \r\n                    <DeriNumberFormat\r\n                      value={item.pnl}\r\n                      displayType=\"text\"\r\n                      decimalScale={2}\r\n                      prefix=\"$ \"\r\n                      // allowZero={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default inject(\"wallet\")(observer(Leaderboard));"],"sourceRoot":""}