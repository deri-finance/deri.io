{"version":3,"sources":["components/Pagination/IPagination.js","pages/Practice/img/logo-deri.svg","pages/Practice/Practice.js"],"names":["IPagination","page","count","onPage","pageSize","onShowSizeChange","className","selectComponentClass","Select","onChange","current","total","prevIcon","token","nextIcon","showSizeChanger","locale","localeInfo","pageSizeOptions","inject","observer","lang","wallet","useState","yourPnl","setYourPnl","setPage","pnlList","setPnlList","showPnlList","setShowPnlList","getYourPnl","apiProxy","request","detail","account","res","pnl","Math","abs","getEarnTopUsers","arr","map","item","formatAddress","useEffect","slice","isConnected","src","deirLogo","alt","UnderlineText","text","tip","multiline","DeriNumberFormat","value","suffix","decimalScale","index","length","target","href","rel"],"mappings":"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","file":"static/js/27.84d2c45b.chunk.js","sourcesContent":["import Pagination from 'rc-pagination'\nimport localeInfo from 'rc-pagination/lib/locale/en_US';\nimport Select from 'rc-select';\nimport 'rc-select/assets/index.less';\nimport Icon from '../Icon/Icon';\nimport './pagination.less'\nexport default function IPagination({page,count,onPage,pageSize,onShowSizeChange}){\n  return (\n    <div className='pagination' >\n      <Pagination \n        selectComponentClass={Select}\n        onChange={onPage}\n        current={page}\n        total={count}\n        pageSize={pageSize}\n        prevIcon={() => <Icon token='arrow-left'/>}\n        nextIcon={() => <Icon token='arrow-right'/>}\n        showSizeChanger\n        onShowSizeChange={onShowSizeChange}\n        locale={localeInfo}\n        pageSizeOptions={['10', '20','30', '50']}\n        />\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/logo-deri.d4c8b6a2.svg\";","import { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react';\nimport apiProxy from '../../model/ApiProxy'\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\nimport UnderlineText from '../../components/UnderlineText/UnderlineText'\nimport { formatAddress } from '../../utils/utils'\nimport {bg} from '../../lib/web3js/index'\nimport 'rc-pagination/assets/index.less';\nimport 'rc-select/assets/index.less';\nimport deirLogo from './img/logo-deri.svg'\nimport IPagination from '../../components/Pagination/IPagination'\nimport './practice.less'\nfunction Practice({ lang, wallet }) {\n  const [yourPnl, setYourPnl] = useState();\n  const [page, setPage] = useState(1)\n  const [pnlList, setPnlList] = useState([])\n  const [showPnlList, setShowPnlList] = useState([])\n  const onPage = (page) => {\n    setPage(page)\n  }\n  const getYourPnl = async () => {\n    let res = await apiProxy.request(\"getUserEarnInfo\", [wallet.detail.account, 2])\n    if (res) {\n      let pnl = Math.abs(res.pnl)  < 10**-10 ? 0 : (res.pnl - 1) * 100\n      setYourPnl(pnl)\n    }\n  }\n  const getEarnTopUsers = async () => {\n    let res = await apiProxy.request('getEarnTop50Users', [2])\n    if (res) {\n      let arr = res.map(item => {\n        item.pnl =  Math.abs(item.pnl)  < 10**-10 ? 0 : (item.pnl - 1) * 100;\n        item.account = formatAddress(item.account)\n        return item\n      })\n      setPnlList(arr)\n    }\n  }\n  useEffect(() => {\n    let arr\n    if (page === 1) {\n      arr = pnlList.slice(0, page * 10)\n    } else {\n      arr = pnlList.slice((page - 1) * 10, page * 10)\n    }\n    setShowPnlList(arr)\n  }, [pnlList, page])\n  useEffect(() => {\n    if (wallet.isConnected()) {\n      getYourPnl()\n    }\n    getEarnTopUsers()\n  }, [wallet.detail, wallet])\n  return (\n    <div className='testnet-practice'>\n      <div className='practice-info'>\n        <div className='practice-title'>\n          {lang['practice-to-earn']}\n        </div>\n        <div className='practice-time'>\n          {/* {lang['time']} */}\n          Mar. 1st 09:00 AM (UTC) â€” Mar. 8th 09:00 AM (UTC)\n        </div>\n        <div className='practice-info-box'>\n          <div className='practice-info-left'>\n            <div className='total-rewards-pool'>\n              <div className='total-rewards-box'>\n                <div className='deri-logo'>\n                  <img src={deirLogo} alt='deri' />\n                </div>\n                <div className='total-rewards-num'>\n                  <div className='total-rewards-pool-title'>\n                    {lang['total-rewards-pool']}\n                  </div>\n                  <div className='toatl-rewards-deri'>\n                    <span>\n                      10,000\n                    </span>\n                    <span className='deri-text'>\n                      DERI\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='your-pnl'>\n              <span>\n                <UnderlineText text={lang['your-pnl']} tip={lang['your-pnl-tip']} multiline={true} />\n              </span>\n              <span className='your-pnl-pen'>\n                <DeriNumberFormat value={yourPnl} suffix='%' decimalScale={2} />\n              </span>\n            </div>\n          </div>\n          <div className='practice-info-right'>\n            <div className='top-pnl-list-box'>\n              <div className='top-pnl-list-box-title'>\n                {/* {lang['top-pnl']} */}\n                Leaderboard\n              </div>\n              <div className='top-pnl-list'>\n                <div className='top-pnl-list-title'>\n                  <span>{lang['no']}</span>\n                  <span>{lang['user-addr']}</span>\n                  <span>{lang['pnl']}</span>\n                </div>\n                <div className='top-pnl-list-info'>\n                  {showPnlList.map((item, index) => {\n                    return (\n                      <div className='top-pnl-list-info-box' key={index}>\n                        <div className='no'>{item.index}</div>\n                        <div className='address'>{item.account}</div>\n                        <div className='pnl'>\n                          <DeriNumberFormat value={item.pnl} suffix='%' decimalScale={2} />\n                        </div>\n                      </div>\n                    )\n                  })}\n                </div>\n              </div>\n            </div>\n            <div className='page-box'>\n              <IPagination page={page} onPage={onPage} count={pnlList.length} pageSize={10} />\n                <div className='remind'>* {lang['update-every-hour']}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='detailed-rules'>\n        <a target=\"_blank\" href=\"https://theontoteam.medium.com/1b958bc5228a\" rel='noreferrer' >\n          {lang['detailed-rules']}\n        </a>\n      </div>\n    </div>\n  )\n}\nexport default inject('wallet')(observer(Practice))"],"sourceRoot":""}