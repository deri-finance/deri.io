{"version":3,"sources":["pages/Pool/img/staked.svg","hooks/useContractLp.ts","pages/Pool/Card.js"],"names":["r","contractdescribers","useContract","name","chainId","contractAddress","wallet","useWallet","getContract","address","abi","ethereum","useMemo","provider","getProvider","networkVersion","String","Web3Provider","Contract","account","getSigner","connectUnchecked","getProviderOrSigner","require","keys","forEach","key","path","split","last","length","substring","indexOf","PairAddress","Card","lang","pool","history","useHistory","defaultList","useState","poolInfo","setPoolinfo","setAddress","isStaked","setIsStaked","xvsNum","setXvsNum","setShow","aTimeRewardInfo","setATimeRewardInfo","bTimeRewardInfo","setBTimeRewardInfo","totalYearDeri","setTotalYearDeri","accountEthTokenValue","setAccountEthTokenValue","apy","setApy","accountDeriToken","setAccountDeriToken","DeriforPairContract","EthforPairContract","PoolContract","BTokenContract","PairContract","getPoolInfo","useCallback","a","version","res","getLiquidity","balanceOf","DeriNumber","EthNumber","deriPath","process","ethPath","fetch","resp","json","eresp","eres","deriPrice","data","price","ethPrice","usd","deriAmount","BigNumber","from","_hex","toString","ethAmount","deriValue","bg","times","toNumber","ethValue","liquidity","console","log","getVenusEarned","getIsStaked","poolAddress","bTime","id","setTimeout","map","item","obj","getSecondsPerLiquidityInsideX128","timestamp","secondsPerLiquidityInsideX128","Promise","all","onImgError","positions","tickLower","tickUpper","slot0","tickCurrent","tick","amount","getAmountETHAndDeri","total_amount0","total_amount1","deri","eth","deriSum","reduce","accumulator","currentValue","ethSum","sumValue","totalYearDeriValue","rewards","aTime","find","secondsPerLiquidityInsideX128_a","getRewardInBetween","reward","totalScore","valuePerYear","event","target","src","errorimg","useEffect","isConnected","detail","sess","sessionStorage","getItem","url","type","className","onClick","push","staking","retired","new","alt","BSC","POLYGON","ETH","ARBITRUM","networkLogo","zone","chain","toUpperCase","isLp","bTokens","bTokenSymbol","index","onError","singleBtoken","TokenExplode","value","suffix","displayType","allowZero","decimalScale","thousandSeparator","stakedLogo","width","disabled","outline","label","TokenWrapper","styled","div","Token","props","rotate","angle","filter","t","i","token","curRotate"],"mappings":"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","file":"static/js/8.fd2ac532.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/staked.46571832.svg\";","import { Contract, ContractInterface } from \"@ethersproject/contracts\";\r\nimport {\r\n  JsonRpcProvider,\r\n  JsonRpcSigner,\r\n  Web3Provider,\r\n} from \"@ethersproject/providers\";\r\nimport { useMemo } from \"react\";\r\nimport { useWallet } from \"use-wallet\";\r\nimport { getProvider } from \"../utils/utils\";\r\n\r\nconst contractdescribers = {};\r\n\r\nfunction importAll(r) {\r\n  return r.keys().forEach((key) => {\r\n    const path = key.split(\"/\");\r\n    const last = path[path.length - 1];\r\n    contractdescribers[last.substring(0, last.indexOf(\".\"))] = r(key);\r\n  });\r\n}\r\n\r\nimportAll(require.context(`../abis/`, true, /\\.json$/));\r\n\r\nexport default function useContract(\r\n  name: string,\r\n  chainId: number,\r\n  contractAddress: string,\r\n): Contract {\r\n  const wallet = useWallet();\r\n  const { address, abi } = getContract(name);\r\n  const { ethereum } = wallet;\r\n  if (address) {\r\n    contractAddress = address;\r\n  }\r\n  return useMemo(() => {\r\n    let provider = getProvider(chainId);\r\n    if (ethereum && ethereum.networkVersion === String(chainId)) {\r\n      provider = new Web3Provider(ethereum, \"any\");\r\n    }\r\n    if (!provider) {\r\n      return null;\r\n    }\r\n    return new Contract(\r\n      contractAddress,\r\n      abi,\r\n      getProviderOrSigner(provider, wallet.account)\r\n    );\r\n  }, [contractAddress, abi, wallet]);\r\n}\r\n\r\n// account is not optional\r\nfunction getSigner(provider: JsonRpcProvider, account: string): JsonRpcSigner {\r\n  return provider.getSigner(account).connectUnchecked();\r\n}\r\n\r\n// account is optional\r\nfunction getProviderOrSigner(\r\n  provider: JsonRpcProvider,\r\n  account?: string\r\n): JsonRpcProvider | JsonRpcSigner {\r\n  return account ? getSigner(provider, account) : provider;\r\n}\r\n\r\nfunction getContract(name: string): ContractDescriber {\r\n  return contractdescribers[name];\r\n}\r\n\r\ninterface ContractDescriber {\r\n  address: string;\r\n  abi: ContractInterface;\r\n}\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\"\r\nimport Button from '../../components/Button/Button'\r\nimport BSC from '../../assets/img/BNB.svg'\r\nimport ARBITRUM from '../../assets/img/arbitrum-logo.svg'\r\nimport POLYGON from '../../assets/img/polygon-logo.svg'\r\nimport ETH from '../../assets/img/ethereum.svg'\r\nimport stakedLogo from './img/staked.svg'\r\nimport errorimg from '../../assets/img/ErrorImg.png'\r\nimport './card.less'\r\nimport styled, { StyleSheetManager } from 'styled-components';\r\nimport useContract from '../../hooks/useContractLp';\r\nimport { BigNumber } from 'ethers';\r\nimport { bg, getAmountETHAndDeri } from '../../utils/utils';\r\nconst DeriAddress = \"0x21E60EE73F17AC0A411ae5D690f908c3ED66Fe12\"\r\nconst ETHAddress = \"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\"\r\nconst PairAddress = \"0x96C3966534b4377691e11e163A0409Ad01667343\"\r\nexport default function Card({ lang, pool, wallet }) {\r\n  const history = useHistory();\r\n  const defaultList = ['311860', '311904']\r\n  const [poolInfo, setPoolinfo] = useState({})\r\n  const [address, setAddress] = useState(pool.address)\r\n  const [isStaked, setIsStaked] = useState(false)\r\n  const [xvsNum, setXvsNum] = useState()\r\n  const [show, setShow] = useState(true)\r\n  const [aTimeRewardInfo, setATimeRewardInfo] = useState([])\r\n  const [bTimeRewardInfo, setBTimeRewardInfo] = useState([])\r\n  const [totalYearDeri, setTotalYearDeri] = useState(0)\r\n  const [accountEthTokenValue, setAccountEthTokenValue] = useState(0)\r\n  const [apy, setApy] = useState()\r\n  const [accountDeriToken, setAccountDeriToken] = useState(0)\r\n  const DeriforPairContract = useContract(\"ERC20\", 42161, DeriAddress)\r\n  const EthforPairContract = useContract(\"ERC20\", 42161, ETHAddress)\r\n  const PoolContract = useContract(\"arbitrumLp\", 42161)\r\n  const BTokenContract = useContract(\"LpTokenId\", 42161)\r\n  const PairContract = useContract(\"PairAbi\", 42161)\r\n  const getPoolInfo = useCallback(async () => {\r\n    setPoolinfo({})\r\n    let res = await pool.getPoolInfo(pool.address, pool.chainId, pool.version)\r\n    setAddress(pool.address)\r\n    setPoolinfo(res)\r\n\r\n  }, [pool])\r\n  const getLiquidity = useCallback(async () => {\r\n    setPoolinfo({})\r\n    let DeriNumber = await DeriforPairContract.balanceOf(PairAddress)\r\n    let EthNumber = await EthforPairContract.balanceOf(PairAddress)\r\n    let deriPath = `${process.env.REACT_APP_INFO_HTTP_URL}/stats_for_token`\r\n    let ethPath = \"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=USD\"\r\n    let resp = await fetch(deriPath);\r\n    let res = await resp.json();\r\n    let eresp = await fetch(ethPath);\r\n    let eres = await eresp.json();\r\n    let deriPrice = res.data.price;\r\n    let ethPrice = eres.ethereum.usd\r\n    let deriAmount = BigNumber.from(DeriNumber._hex).toString() / (10 ** 18);\r\n    let ethAmount = BigNumber.from(EthNumber._hex).toString() / (10 ** 18);\r\n    let deriValue = bg(deriAmount).times(deriPrice).toNumber();\r\n    let ethValue = bg(ethAmount).times(ethPrice).toNumber();\r\n    let liquidity = deriValue + ethValue\r\n    console.log(\"getLiquidity\", liquidity)\r\n    setPoolinfo({\r\n      liquidity: liquidity,\r\n    })\r\n  }, [DeriforPairContract, EthforPairContract])\r\n  const getVenusEarned = async () => {\r\n    if (pool && (pool.version === 'v3' || pool.version === 'v3_lite')) {\r\n      let res = await pool.getVenusEarned(wallet, pool.address)\r\n      setXvsNum(res)\r\n    }\r\n  }\r\n  const getIsStaked = useCallback(async () => {\r\n    let res = await pool.getIsStaked(wallet, pool)\r\n    if (res) {\r\n      setIsStaked(res.isStaked)\r\n      setAddress(res.poolAddress)\r\n    }\r\n  }, [wallet, pool])\r\n\r\n  const bTime = useCallback(async (id) => {\r\n    let res;\r\n    await setTimeout(async () => {\r\n      let data = defaultList.map(async (item) => {\r\n        let obj = {}\r\n        let res = await PoolContract.getSecondsPerLiquidityInsideX128(item)\r\n        if (res) {\r\n          obj[\"id\"] = item\r\n          obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\r\n          obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\r\n        }\r\n        return obj\r\n      })\r\n      data = await Promise.all(data)\r\n      setBTimeRewardInfo(data)\r\n    }, 5000);\r\n    return res\r\n  }, [PoolContract])\r\n\r\n  const aTime = useCallback(async () => {\r\n    let data = defaultList.map(async (item) => {\r\n      let obj = {}\r\n      console.log(PoolContract)\r\n      let res = await PoolContract.getSecondsPerLiquidityInsideX128(item)\r\n      if (res) {\r\n        obj[\"id\"] = item\r\n        obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\r\n        obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\r\n      }\r\n      return obj\r\n    })\r\n    data = await Promise.all(data)\r\n    bTime()\r\n    setATimeRewardInfo(data)\r\n  }, [PoolContract])\r\n\r\n  const getBTokenValue = useCallback(async () => {\r\n    let data = defaultList.map(async (item) => {\r\n      let obj = {}\r\n      let res = await BTokenContract.positions(item)\r\n      obj = {\r\n        tickLower: res.tickLower,\r\n        tickUpper: res.tickUpper,\r\n        liquidity: BigNumber.from(res.liquidity._hex).toString()\r\n      }\r\n      return obj\r\n    })\r\n    data = await Promise.all(data)\r\n    let tickCurrent = await PairContract.slot0()\r\n    tickCurrent = tickCurrent.tick\r\n    let amount = data.map((item) => {\r\n      let [total_amount0, total_amount1] = getAmountETHAndDeri(tickCurrent, item.tickLower, item.tickUpper, item.liquidity)\r\n      return {\r\n        deri: total_amount0 / 10 ** 18,\r\n        eth: total_amount1 / 10 ** 18\r\n      }\r\n    })\r\n    let deriSum = amount.reduce((accumulator, currentValue) => {\r\n      return accumulator + currentValue.deri;\r\n    }, 0)\r\n    let ethSum = amount.reduce((accumulator, currentValue) => {\r\n      return accumulator + currentValue.eth;\r\n    }, 0)\r\n    let ethPath = \"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=USD\"\r\n    let eresp = await fetch(ethPath);\r\n    let eres = await eresp.json();\r\n    let ethPrice = eres.ethereum.usd\r\n    let ethValue = bg(ethSum).times(ethPrice).toNumber();\r\n    setAccountEthTokenValue(ethValue)\r\n    setAccountDeriToken(deriSum)\r\n  }, [BTokenContract, defaultList, PairContract])\r\n\r\n  const getApy = useCallback(async () => {\r\n    if (totalYearDeri && accountDeriToken && accountEthTokenValue) {\r\n      let deriPath = `${process.env.REACT_APP_INFO_HTTP_URL}/stats_for_token`\r\n      let resp = await fetch(deriPath);\r\n      let res = await resp.json();\r\n      let deriPrice = res.data.price;\r\n      let deriValue = bg(accountDeriToken).times(deriPrice).toNumber();\r\n      let sumValue = deriValue + accountEthTokenValue\r\n      let totalYearDeriValue = bg(totalYearDeri).times(deriPrice).toNumber();\r\n      let apy = (totalYearDeriValue / sumValue) * 100\r\n      setApy(apy)\r\n    }\r\n  }, [totalYearDeri, accountDeriToken, accountEthTokenValue])\r\n\r\n  const getTimeRewardInfo = useCallback(async () => {\r\n    let rewards = bTimeRewardInfo.map(async (item) => {\r\n      let aTime = aTimeRewardInfo.find(id => id.id === item.id)\r\n      let secondsPerLiquidityInsideX128_a = aTime.secondsPerLiquidityInsideX128\r\n      let reward = await PoolContract.getRewardInBetween(item.id, item.timestamp, secondsPerLiquidityInsideX128_a, item.secondsPerLiquidityInsideX128)\r\n      if (reward) {\r\n        let obj = {\r\n          reward: BigNumber.from(reward._hex).toString() / 10 ** 18,\r\n          id: item.id,\r\n          timestamp: item.timestamp - aTime.timestamp\r\n        }\r\n        return obj\r\n      }\r\n    })\r\n    rewards = await Promise.all(rewards)\r\n    if (rewards[0].timestamp !== 0) {\r\n      const totalScore = rewards.reduce((accumulator, currentValue) => {\r\n        return accumulator + currentValue.reward;\r\n      }, 0);\r\n      const oneYear = 1000 * 60 * 60 * 24 * 365;\r\n      const valuePerYear = (totalScore / (rewards[0].timestamp * 1000)) * oneYear;\r\n      setTotalYearDeri(valuePerYear)\r\n    }\r\n  }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\r\n  const onImgError = (event) => {\r\n    event.target.src = errorimg\r\n  }\r\n  const closeSymbol = (address) => {\r\n    sessionStorage.setItem(address, false)\r\n    setShow(false)\r\n  }\r\n  useEffect(() => {\r\n    if (pool.version === 'ulp' && DeriforPairContract) {\r\n      getLiquidity()\r\n    } else {\r\n      getPoolInfo()\r\n    }\r\n    if (wallet.isConnected()) {\r\n      getIsStaked()\r\n      getVenusEarned()\r\n    }\r\n  }, [pool, wallet.detail.account, DeriforPairContract, EthforPairContract])\r\n  useEffect(() => {\r\n    let sess = sessionStorage.getItem(pool.address)\r\n    if (sess !== null) {\r\n      if (sess) {\r\n        setShow(false)\r\n      }\r\n    }\r\n  }, [pool])\r\n  const networkLogo = (chainId) => {\r\n    let src;\r\n    if (chainId === \"56\" || chainId === \"97\") {\r\n      src = BSC\r\n    } else if (chainId === \"137\") {\r\n      src = POLYGON\r\n    } else if (chainId === \"1\") {\r\n      src = ETH\r\n    } else if (chainId === '42161' || chainId === '421611') {\r\n      src = ARBITRUM\r\n    }\r\n    return src\r\n  }\r\n  const staking = (url) => {\r\n    if (pool.version === 'v2_lite_open') {\r\n      return\r\n    }\r\n    history.push(url)\r\n  }\r\n  // useEffect(() => {\r\n  //   if (pool.version === \"ulp\" && PoolContract) {\r\n  //     aTime()\r\n  //   }\r\n  // }, [pool.version, PoolContract, wallet])\r\n\r\n  // useEffect(() => {\r\n  //   if (pool.version === \"ulp\" && BTokenContract && PairContract) {\r\n  //     getBTokenValue()\r\n  //   }\r\n  // }, [BTokenContract, pool.version, PairContract, wallet])\r\n\r\n  // useEffect(() => {\r\n  //   if (totalYearDeri && accountDeriToken && accountEthTokenValue) {\r\n  //     getApy()\r\n  //   }\r\n  // }, [totalYearDeri, accountDeriToken, accountEthTokenValue])\r\n\r\n  // useEffect(() => {\r\n  //   if (aTimeRewardInfo.length && PoolContract && bTimeRewardInfo.length) {\r\n  //     getTimeRewardInfo()\r\n  //   }\r\n  // }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\r\n  const url = pool.version === 'ulp' ? `/lppool/${pool.chainId}/${pool.address}` : `/pool/${pool.version || 'v1'}/${pool.chainId}/${pool.type}/${pool.address}`\r\n  return (\r\n    <div className={`${pool.address === '0x243681B8Cd79E3823fF574e07B2378B8Ab292c1E' ? 'showGuide' : ''} card-box`}>\r\n      <div className={pool.version === 'v2_lite_open' ? 'card-list open-list' : 'card-list'} onClick={() => { staking(url) }} >\r\n        <div className={`card-header ${pool.retired ? `${pool.version}` : \"\"} ${pool.new ? \"new\" : ''}`}>\r\n          <div className='pool-network-type'>\r\n            <div className='network-logo'>\r\n              <img alt='' src={networkLogo(pool.chainId)} />\r\n            </div>\r\n            <div className='pool-type-network-text'>\r\n              <div className='pool-type-text'>\r\n                {pool.address !== '0xD2D950e338478eF7FeB092F840920B3482FcaC40' && <>\r\n                  {lang[pool.type]} {lang[pool.zone]}\r\n                </>}\r\n                {pool.address === \"0x1eF92eDA3CFeefb8Dae0DB4507f860d3b73f29BA\" && <>\r\n                  DERI-based\r\n                </>}\r\n                {pool.address === '0xD2D950e338478eF7FeB092F840920B3482FcaC40' && <>\r\n                  {lang[pool.zone]}\r\n                </>}\r\n              </div>\r\n              <div className='pool-network-text'>\r\n                {pool.chain.toUpperCase() === 'BSC' ? \"BNB Chain\" : pool.chain.toUpperCase()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='base-token-logo'>\r\n            {pool.isLp && <>\r\n              <div className='lp-base-token-bg'>\r\n                <div className={`base-token-bg ${pool.bTokens[0].bTokenSymbol}`}></div>\r\n                <span className='lp-con'>+</span>\r\n                <div className={`base-token-bg ${pool.bTokens[1].bTokenSymbol}`}></div>\r\n              </div>\r\n            </>}\r\n            {!pool.isLp && pool.version !== 'v3' && pool.version !== \"v3_lite\" && <>\r\n              {pool.bTokens.map((item, index) => <div key={index} className='base-token-box-bg no-animation-tokens'>\r\n                <div className={`base-token-bg ${item.bTokenSymbol}`}>\r\n                  {pool.version === 'v2_lite_open' && <>\r\n                    <img alt='' onError={onImgError} src={`https://raw.githubusercontent.com/deri-finance/deri-open-zone/main/img/${item.bTokenSymbol}.png`} />\r\n                  </>}\r\n                </div>\r\n              </div>)}\r\n            </>}\r\n            {(pool.version === \"v3\" || pool.version === \"v3_lite\") && (!pool.singleBtoken) &&\r\n              <TokenExplode bTokens={pool.bTokens} />\r\n            }\r\n            {\r\n              (pool.version === \"v3\" || pool.version === \"v3_lite\") && (pool.singleBtoken) &&\r\n              <div className='base-token-box-bg no-animation-tokens'>\r\n                <div className={`base-token-bg ${pool.bTokens[0].bTokenSymbol}`}>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className='card-content'>\r\n\r\n          <div className='max-apy'>\r\n            {pool.version !== 'v2_lite_open' && <>\r\n              <div className='max-apy-title'>\r\n                {(pool.version === 'v2' || pool.version === \"v3_lite\" || pool.version === \"v3\") ? lang['max-apy'] : lang['apy']}\r\n              </div>\r\n              <div className='max-apy-num'>\r\n                <DeriNumberFormat value={pool.version === \"ulp\" ? apy : poolInfo.apy} suffix='%' displayType='text' allowZero={true} decimalScale={2} />\r\n              </div>\r\n            </>}\r\n          </div>\r\n          <div className='total-pool-liquidity'>\r\n            <div className='total-liquidity-title'>\r\n              {lang['total-pool-liquidity']}\r\n            </div>\r\n            <div className='total-liquidity-num'>\r\n              <DeriNumberFormat value={poolInfo.liquidity} displayType='text' thousandSeparator={true} decimalScale={pool.type === 'lp' ? pool.version === \"ulp\" ? 0 : 7 : 0} />\r\n            </div>\r\n          </div>\r\n          <div className='your-deri-epoch'>\r\n            {isStaked && address === pool.address && <div className='staked-box'>\r\n              <img src={stakedLogo} alt='' />\r\n              {lang['staked']}\r\n            </div>}\r\n            {(+xvsNum > 0) && (pool.version === 'v3' || pool.version === 'v3_lite') && <span className='xvs-collectable'><div className='staked-box'><DeriNumberFormat width='50px' value={xvsNum} displayType='text' thousandSeparator={true} decimalScale={2} /> &nbsp; XVS  {lang['collectable']}</div></span>}\r\n          </div>\r\n          <div className='stake-button'>\r\n            <Button disabled={pool.version === 'v2_lite_open' ? true : false} className='button' outline label={pool.version === 'v2_lite_open' ? lang['operating'] : lang['stake']} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {pool.version === \"v3_lite\" && show &&\r\n        <div className='new-symbol'>\r\n          <div className='new-symbol-text'>\r\n            New Listing : <a rel=\"noreferrer\" href='https://deri.io/#/trade/futures/FITFIUSDT' target=\"_blank\" >FITFIUSDT</a> <a href='https://deri.io/#/trade/futures/AVAXUSDT' rel=\"noreferrer\" target=\"_blank\">AVAXUSDT</a>\r\n          </div>\r\n          <div className='close-symbol'>\r\n            <img src={close} alt='close' onClick={() => closeSymbol(pool.address)} />\r\n          </div>\r\n        </div>\r\n      } */}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst TokenWrapper = styled.div`\r\n  @-webkit-keyframes explode {\r\n    0% {\r\n        transform: translateX(0px);\r\n        -moz-transform : translateX(0px);\r\n    }\r\n    100% {\r\n        transform: translateX(100px);\r\n        -moz-transform : translateX(100px);\r\n    }\r\n  }\r\n\r\n  @keyframes explode {\r\n    0% {\r\n        transform: translateX(0px);\r\n        -moz-transform : translateX(0px);\r\n    }\r\n    100% {\r\n        transform: translateX(100px) ;\r\n        -moz-transform : translateX(100px) ;\r\n    }\r\n  }\r\n  .base-token{\r\n    margin-left: 0px !important;\r\n    z-index : -2;\r\n    visibility: hidden;\r\n    background-color: #111e34;\r\n    border : 1px solid #fff;\r\n  }\r\n  @media only screen and (max-width: 760px) {\r\n    .base-token{\r\n      display:none;\r\n    }\r\n  }\r\n  .base-token-box-bg.explode:hover .move  {\r\n    -webkit-animation : explode .4s .0s linear;\r\n    -moz-animation :  explode .4s .0s linear;\r\n    animation: explode .4s .0s linear;\r\n    visibility: visible;    \r\n  }\r\n  \r\n  .base-token-box-bg.explode:hover .base-token {\r\n    z-index : 2 !important;\r\n  } \r\n\r\n`\r\nconst Token = styled.div`\r\n  position: absolute;\r\n  transform : ${props => `rotate(${-props.rotate}deg)`};\r\n  width: 48px;\r\n  height: 48px;\r\n  display: inline-block;\r\n  border-radius: 50%;\r\n  .move {\r\n    transform : translateX(100px) ${props => `rotate(${props.rotate}deg)`};\r\n  }\r\n`\r\n\r\nconst TokenExplode = ({ bTokens = [] }) => {\r\n  const angle = 360 / bTokens.length\r\n  return (\r\n    <TokenWrapper className='v3-tokens'>\r\n      <div className='tokens'>\r\n        {bTokens.filter((t, i) => i < 3).map((token, index) => (\r\n          <div className='base-token-box-bg' key={index}>\r\n            <div className={`base-token-bg ${token.bTokenSymbol}`}>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className='base-token-box-bg explode'>\r\n        <div className={'base-token-bg num-token'}>\r\n          {bTokens.length - 3} +\r\n        </div>\r\n        {bTokens.map((token, index) => {\r\n          const curRotate = angle * index\r\n          return (\r\n            <Token className='base-token' rotate={curRotate} width='100' key={index}>\r\n              <div width='100' rotate={curRotate} className={`base-token-bg move ${token.bTokenSymbol}`} >\r\n              </div>\r\n            </Token>\r\n          )\r\n        })}\r\n      </div>\r\n    </TokenWrapper>\r\n  )\r\n}"],"sourceRoot":""}