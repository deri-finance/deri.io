{"version":3,"sources":["pages/Pool/img/no-nft.svg","pages/Pool/LpDetail.js","hooks/useContractCall.ts"],"names":["chainInfo","config","DeriEnv","get","chainConfig","PairAddress","Operate","wallet","contract","type","lang","getLang","afterTransaction","tokenIdList","setActiveIndex","alert","NFTContract","PoolContract","address","useState","disabled","setDisabled","isApproveList","setIsApproveList","isApproved","setIsApproved","approveBtnText","setApproveBtnText","NFTcontractCall","useMemo","method","params","options","colors","isApprove","useCallback","list","index","length","getApproved","approve","console","log","obj","toLocaleLowerCase","id","push","transactionTitle","text","icon","transactionContent","success","error","getGasLimit","gasLimit","res","hash","Emitter","emit","EVENT_TRANS_BEGIN","title","content","wait","receipt","transactionHash","status","EVENT_TRANS_END","context","clickApprove","find","item","addLiquidity","connect","baseToken","removeLiquidity","useEffect","className","map","style","backgroundColor","src","noNFT","alt","Button","width","fontSize","label","PRIMARY","onClick","inject","observer","poolManager","useParams","chainId","isShowInfo","setIsShowInfo","useAlert","nowToken","poolConfig","setPoolConfig","bTokenList","setBTokenList","liquidity","setLiquidity","poolDeri","setPoolDeri","useConfig","claimPending","setClaimPending","unStakedTokenIdList","setUnStakedTokenIdList","stakedTokenIdList","setStakedTokenIdList","aTimeRewardInfo","setATimeRewardInfo","bTimeRewardInfo","setBTimeRewardInfo","totalYearDeri","setTotalYearDeri","accountEthTokenValue","setAccountEthTokenValue","accountDeriToken","setAccountDeriToken","activeIndex","apy","setApy","networkText","name","DeriforPairContract","useContract","EthforPairContract","BTokenContract","PairContract","unTokenIdListRef","useRef","tokenIdListRef","getPendingReward","detail","account","deriNumber","BigNumber","from","_hex","toString","bTime","setTimeout","provider","getProvider","data","getSecondsPerLiquidityInsideX128","timestamp","secondsPerLiquidityInsideX128","Promise","all","aTime","getBTokenValue","positions","tickLower","tickUpper","slot0","tickCurrent","tick","amount","getAmountETHAndDeri","total_amount0","total_amount1","deri","eth","deriSum","reduce","accumulator","currentValue","ethSum","axios","eresp","ethPrice","ethValue","bg","times","toNumber","getApy","deriPath","process","fetch","resp","json","deriPrice","price","deriValue","sumValue","totalYearDeriValue","getTimeRewardInfo","rewards","secondsPerLiquidityInsideX128_a","getRewardInBetween","reward","Math","abs","totalScore","valuePerYear","getunStakedTokenIdList","getStakedTokenIdList","getLiquidity","tabSet","background","borderColor","iconWidth","iconHeight","inicon","direction","iconMarginRight","load","loadDoubleMingingPool","pool","lpPools","filter","p","symbols","arr","symbol","join","bTokens","claimDeri","claim","balanceOf","NFTNumber","tokenId","tokenOfOwnerByIndex","deriTokenId","getPositionInfo","getUserTokenIds","DeriNumber","EthNumber","deriAmount","ethAmount","switchNetwork","isConnected","interval","window","setInterval","clearInterval","current","history","back","backIcon","ARBITRUM","zone","rel","target","href","Search","searchName","onChange","Icon","token","height","bTokenSymbol","DeriNumberFormat","value","suffix","decimalScale","Spinner","firstTime","downIcon","displayType","thousandSeparator","formatAddress","Tab","size","inactiveBgColor","borderBottom","divider"],"mappings":"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","file":"static/js/46.bec7d404.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/no-nft.47097e0e.svg\";","/* eslint-disable react/jsx-no-target-blank */\nimport { useState, useEffect, useMemo, useRef, useCallback } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { inject, observer } from 'mobx-react'\nimport { useAlert } from 'react-alert'\nimport Tab from '../../components/Tab/Tab'\nimport { bg, formatAddress, getAmountETHAndDeri, getGasLimit, getProvider } from \"../../utils/utils\"\nimport config from '../../config.json'\nimport downIcon from '../../assets/img/arrow-down.svg'\nimport useConfig from '../../hooks/useConfig'\nimport { DeriEnv } from '../../lib/web3js/index'\nimport './detail.less'\nimport './claim.less'\nimport backIcon from '../../assets/img/back.svg'\nimport ARBITRUM from '../../assets/img/arbitrum-logo.svg'\nimport deri from './img/deri.svg'\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\nimport noNFT from './img/no-nft.svg'\nimport Spinner from '../../components/Spinner/Spinner'\nimport Icon from '../../components/Icon/Icon'\nimport Search from '../../components/Search/Search'\nimport Button from '../../components/Button/Button'\nimport { EVENT_TRANS_BEGIN, EVENT_TRANS_END, PRIMARY } from '../../utils/Constants'\nimport useContract from '../../hooks/useContractLp'\nimport { BigNumber } from 'ethers'\nimport './Detail/operateLiquidity.less'\nimport useContractCall from '../../hooks/useContractCall'\nimport Emitter from '../../utils/Emitter'\nimport axios from 'axios'\n\nconst env = DeriEnv.get();\nconst { chainInfo } = config[env]\nconst chainConfig = config[DeriEnv.get()]['chainInfo']\nconst DeriAddress = \"0x21E60EE73F17AC0A411ae5D690f908c3ED66Fe12\"\nconst ETHAddress = \"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\"\nconst PairAddress = \"0x96C3966534b4377691e11e163A0409Ad01667343\"\nfunction LpDetail({ lang, wallet = {}, poolManager, getLang }) {\n  const { chainId, address } = useParams();\n  const [isShowInfo, setIsShowInfo] = useState('show')\n  const alert = useAlert();\n  const nowToken = \"UNISWAP-LP\"\n  const [poolConfig, setPoolConfig] = useState('')\n  const [bTokenList, setBTokenList] = useState([])\n  const [liquidity, setLiquidity] = useState(\"\")\n  const [poolDeri, setPoolDeri] = useState(0)\n  const config = useConfig();\n  const [claimPending, setClaimPending] = useState(false)\n  const [unStakedTokenIdList, setUnStakedTokenIdList] = useState([])\n  const [stakedTokenIdList, setStakedTokenIdList] = useState([])\n  const [aTimeRewardInfo, setATimeRewardInfo] = useState([])\n  const [bTimeRewardInfo, setBTimeRewardInfo] = useState([])\n  const [totalYearDeri, setTotalYearDeri] = useState(0)\n  const [accountEthTokenValue, setAccountEthTokenValue] = useState(0)\n  const [accountDeriToken, setAccountDeriToken] = useState(0)\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [apy, setApy] = useState()\n  const networkText = chainInfo[chainId] && chainInfo[chainId].name;\n\n  const DeriforPairContract = useContract(\"ERC20\", chainId, DeriAddress)\n  const EthforPairContract = useContract(\"ERC20\", chainId, ETHAddress)\n  const NFTContract = useContract(\"IERC721\", chainId)\n  const PoolContract = useContract(\"arbitrumLp\", chainId)\n  const BTokenContract = useContract(\"LpTokenId\", chainId)\n  const PairContract = useContract(\"PairAbi\", chainId)\n\n  const unTokenIdListRef = useRef()\n  const tokenIdListRef = useRef()\n\n  const getPendingReward = async () => {\n    let res = await PoolContract[\"getRewardInfo(address)\"](wallet.detail.account)\n    if (res) {\n      let deriNumber = BigNumber.from(res._hex).toString() / (10 ** 18)\n      setPoolDeri(deriNumber)\n    }\n  }\n\n  const bTime = useCallback(async (id) => {\n    let res;\n    await setTimeout(async () => {\n      let provider = getProvider(chainId);\n      let contract = await PoolContract.connect(provider)\n      let data = stakedTokenIdList.map(async (item) => {\n        let obj = {}\n        let res = await contract.getSecondsPerLiquidityInsideX128(item)\n        if (res) {\n          obj[\"id\"] = item\n          obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\n          obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\n        }\n        return obj\n      })\n      data = await Promise.all(data)\n      setBTimeRewardInfo(data)\n    }, 1000);\n    return res\n  }, [stakedTokenIdList, PoolContract])\n\n  const aTime = useCallback(async () => {\n    let data = stakedTokenIdList.map(async (item) => {\n      let obj = {}\n      let res = await PoolContract.getSecondsPerLiquidityInsideX128(item)\n      if (res) {\n        obj[\"id\"] = item\n        obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\n        obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\n      }\n      return obj\n    })\n    data = await Promise.all(data)\n    bTime()\n    setATimeRewardInfo(data)\n  }, [stakedTokenIdList, PoolContract])\n\n  const getBTokenValue = useCallback(async () => {\n    let data = stakedTokenIdList.map(async (item) => {\n      let obj = {}\n      let res = await BTokenContract.positions(item)\n      obj = {\n        tickLower: res.tickLower,\n        tickUpper: res.tickUpper,\n        liquidity: BigNumber.from(res.liquidity._hex).toString()\n      }\n      return obj\n    })\n    data = await Promise.all(data)\n    let tickCurrent = await PairContract.slot0()\n    tickCurrent = tickCurrent.tick\n    let amount = data.map((item) => {\n      let [total_amount0, total_amount1] = getAmountETHAndDeri(tickCurrent, item.tickLower, item.tickUpper, item.liquidity)\n      return {\n        deri: total_amount0 / 10 ** 18,\n        eth: total_amount1 / 10 ** 18\n      }\n    })\n    let deriSum = amount.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.deri;\n    }, 0)\n    let ethSum = amount.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.eth;\n    }, 0)\n    let ethPath = \"https://sig.oraclum.io/unsigned?symbols=ETHUSD\"\n    let eresp = await axios.get(ethPath);\n    let ethPrice = eresp.data[\"ETHUSD\"]\n    let ethValue = bg(ethSum).times(ethPrice).toNumber();\n    setAccountEthTokenValue(ethValue)\n    setAccountDeriToken(deriSum)\n  }, [BTokenContract, stakedTokenIdList, PairContract])\n\n  const getApy = useCallback(async () => {\n    if (totalYearDeri && accountDeriToken && accountEthTokenValue) {\n      let deriPath = `${process.env.REACT_APP_INFO_HTTP_URL}/stats_for_token`\n      let resp = await fetch(deriPath);\n      let res = await resp.json();\n      let deriPrice = res.data.price;\n      let deriValue = bg(accountDeriToken).times(deriPrice).toNumber();\n      let sumValue = deriValue + accountEthTokenValue\n      let totalYearDeriValue = bg(totalYearDeri).times(deriPrice).toNumber();\n      let apy = (totalYearDeriValue / sumValue) * 100\n      setApy(apy)\n    }\n  }, [totalYearDeri, accountDeriToken, accountEthTokenValue])\n\n  const getTimeRewardInfo = useCallback(async () => {\n    console.log(\"bTimeRewardInfo aTimeRewardInfo\", bTimeRewardInfo, aTimeRewardInfo)\n    let rewards = bTimeRewardInfo.map(async (item) => {\n      let aTime = aTimeRewardInfo.find(id => id.id === item.id)\n      let secondsPerLiquidityInsideX128_a = aTime.secondsPerLiquidityInsideX128\n      let reward = await PoolContract.getRewardInBetween(item.id, item.timestamp, secondsPerLiquidityInsideX128_a, item.secondsPerLiquidityInsideX128)\n      if (reward) {\n        let obj = {\n          reward: BigNumber.from(reward._hex).toString() / 10 ** 18,\n          id: item.id,\n          timestamp: Math.abs(item.timestamp - aTime.timestamp)\n        }\n        return obj\n      }\n    })\n    rewards = await Promise.all(rewards)\n    if (rewards[0].timestamp !== 0) {\n      const totalScore = rewards.reduce((accumulator, currentValue) => {\n        return accumulator + currentValue.reward;\n      }, 0);\n      const oneYear = 1000 * 60 * 60 * 24 * 365;\n      const valuePerYear = (totalScore / (rewards[0].timestamp * 1000)) * oneYear;\n      setTotalYearDeri(valuePerYear)\n    }\n  }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\n  const afterTransaction = (activeIndex) => {\n    getPendingReward()\n    getunStakedTokenIdList()\n    getStakedTokenIdList()\n    getLiquidity()\n    setActiveIndex(activeIndex)\n  }\n  const tabSet = useMemo(() => ({\n    [lang['add']]: {\n      content: <Operate type='add' getLang={getLang} setActiveIndex={setActiveIndex} afterTransaction={afterTransaction} wallet={wallet} alert={alert} address={address} lang={lang} NFTContract={NFTContract} PoolContract={PoolContract} tokenIdList={unStakedTokenIdList} />,\n      style: { background: \"linear-gradient(200.74deg, rgba(97, 122, 255, 0.1) -4.65%, rgba(223, 229, 255, 0) 50.94%, rgba(85, 91, 237, 0.05) 105.4%)\" },\n      borderColor: \"#203B60\",\n      icon: 'add-icon',\n      iconWidth: '25',\n      iconHeight: '25',\n      inicon: 'inactive-add',\n      direction: \"tab-left\"\n    },\n    [lang['remove']]: {\n      content: <Operate type='remove' getLang={getLang} setActiveIndex={setActiveIndex} afterTransaction={afterTransaction} wallet={wallet} alert={alert} address={address} lang={lang} PoolContract={PoolContract} NFTContract={NFTContract} tokenIdList={stakedTokenIdList} />,\n      style: { background: \"linear-gradient(200.74deg, rgba(97, 122, 255, 0.1) -4.65%, rgba(223, 229, 255, 0) 50.94%, rgba(85, 91, 237, 0.05) 105.4%)\" },\n      borderColor: \"#203B60\",\n      icon: 'remove-icon',\n      iconWidth: '25',\n      iconHeight: '25',\n      iconMarginRight: '20',\n      inicon: 'inactive-remove',\n      direction: \"tab-right\",\n    },\n  }), [lang, wallet, getLang, afterTransaction,setActiveIndex, unStakedTokenIdList, alert, stakedTokenIdList, NFTContract, PoolContract, address])\n\n  const load = async () => {\n    await poolManager.loadDoubleMingingPool();\n    let pool = poolManager.lpPools\n    pool = pool.filter(p => p.address === address)\n    pool = pool[0]\n    let symbols = pool.symbols.map(item => {\n      let arr = [];\n      arr.push(item.symbol)\n      return arr\n    })\n    symbols = symbols.join(',')\n    setPoolConfig(pool)\n    setBTokenList(pool.bTokens)\n  }\n  const claimDeri = async () => {\n    if (+poolDeri === 0) {\n      alert.error(lang['no-deri-to-claim-yet']);\n      return;\n    }\n    setClaimPending(true)\n    const title = {\n      text: \"Claim Deri\",\n      icon: \"DERI\",\n    }\n    const content = {\n      success: lang['claim-deri-reward'],\n      error: lang['transaction-failed'],\n    }\n    try {\n      let params = [address]\n      let gasLimit = await getGasLimit(PoolContract, \"claim\", params)\n      let res = await PoolContract.claim({ gasLimit: gasLimit });\n      console.log(\"claim\", res)\n      if (res && res.hash) {\n        Emitter.emit(EVENT_TRANS_BEGIN, {\n          title: title, content: content, hash: res.hash\n        })\n      } else {\n        getPendingReward()\n        setClaimPending(false)\n        return false\n      }\n      const receipt = await res.wait()\n      console.log(\"receipt\", receipt)\n      if (receipt) {\n        console.log(\"receipt\", receipt)\n        if (receipt && receipt.transactionHash) {\n          const hash = receipt.transactionHash\n          if (receipt.status) {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: content, context: { success: true, hash: hash, error: \"error\" } })\n            if (res.success) {\n              setPoolDeri(0)\n            }\n          } else {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: content, context: { success: false.success, hash: hash, error: \"error\" } })\n          }\n        }\n      }\n    } catch (error) {\n      console.error(error)\n    }\n    getPendingReward()\n    setClaimPending(false)\n  }\n\n  const getunStakedTokenIdList = useCallback(async () => {\n    if (wallet.detail.account) {\n      let NFTNumber = await NFTContract.balanceOf(wallet.detail.account)\n      NFTNumber = BigNumber.from(NFTNumber._hex).toString()\n      let tokenId = []\n      for (let index = 0; index < NFTNumber; index++) {\n        let id = await NFTContract.tokenOfOwnerByIndex(wallet.detail.account, index)\n        id = BigNumber.from(id._hex).toString()\n        tokenId.push(id)\n      }\n      let deriTokenId = [];\n      for (let index = 0; index < tokenId.length; index++) {\n        let id = await PoolContract.getPositionInfo(tokenId[index])\n        if (id[0].toLocaleLowerCase() === PairAddress.toLocaleLowerCase()) {\n          deriTokenId.push(tokenId[index])\n        }\n      }\n      setUnStakedTokenIdList(deriTokenId)\n    }\n  }, [NFTContract, wallet.detail.account, PoolContract])\n\n  const getStakedTokenIdList = useCallback(async () => {\n    if (wallet.detail.account) {\n      let res = await PoolContract.getUserTokenIds(wallet.detail.account)\n      res = res.map(item => {\n        return BigNumber.from(item._hex).toString()\n      })\n      console.log(\"getStakedTokenIdList\", res)\n      setStakedTokenIdList(res)\n    }\n  }, [PoolContract, wallet.detail.account])\n\n  const getLiquidity = useCallback(async () => {\n    let DeriNumber = await DeriforPairContract.balanceOf(PairAddress)\n    let EthNumber = await EthforPairContract.balanceOf(PairAddress)\n    let deriPath = `${process.env.REACT_APP_INFO_HTTP_URL}/stats_for_token`\n    let ethPath = \"https://sig.oraclum.io/unsigned?symbols=ETHUSD\"\n    let eresp = await axios.get(ethPath);\n    let ethPrice = eresp.data[\"ETHUSD\"]\n    let resp = await fetch(deriPath);\n    let res = await resp.json();\n    let deriPrice = res.data.price;\n    let deriAmount = BigNumber.from(DeriNumber._hex).toString() / (10 ** 18);\n    let ethAmount = BigNumber.from(EthNumber._hex).toString() / (10 ** 18);\n    let deriValue = bg(deriAmount).times(deriPrice).toNumber();\n    let ethValue = bg(ethAmount).times(ethPrice).toNumber();\n    let liquidity = deriValue + ethValue\n    setLiquidity(liquidity)\n  }, [DeriforPairContract, EthforPairContract])\n\n  useEffect(() => {\n    if (wallet.detail.chainId && wallet.detail.chainId !== chainId) {\n      wallet.switchNetwork(config[chainId])\n    }\n    if (wallet.isConnected() && PoolContract) {\n      let interval = window.setInterval(getPendingReward, 1000 * 10 * 3);\n      getPendingReward()\n      return () => clearInterval(interval);\n    }\n  }, [wallet.detail.chainId, wallet.detail.account, PoolContract])\n\n\n  useEffect(() => {\n    if (stakedTokenIdList.length && PoolContract) {\n      aTime()\n    }\n  }, [stakedTokenIdList, PoolContract, wallet])\n\n  useEffect(() => {\n    if (stakedTokenIdList.length && BTokenContract && PairContract) {\n      getBTokenValue()\n    }\n  }, [BTokenContract, stakedTokenIdList, PairContract, wallet])\n\n  useEffect(() => {\n    if (totalYearDeri && accountDeriToken && accountEthTokenValue) {\n      getApy()\n    }\n  }, [totalYearDeri, accountDeriToken, accountEthTokenValue])\n\n  useEffect(() => {\n    if (aTimeRewardInfo.length && PoolContract && bTimeRewardInfo.length) {\n      getTimeRewardInfo()\n    }\n  }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\n\n  useEffect(() => {\n    load()\n  }, [])\n\n  useEffect(() => {\n    if (!wallet.isConnected() && liquidity && !stakedTokenIdList) {\n      setApy(12.43)\n    }\n  }, [liquidity, wallet && stakedTokenIdList])\n\n  useEffect(() => {\n    if (PoolContract && !tokenIdListRef.current && wallet.detail.account) {\n      getStakedTokenIdList()\n      tokenIdListRef.current = true\n    }\n  }, [PoolContract, wallet.detail.account])\n\n  useEffect(() => {\n    if (NFTContract && wallet.detail.account && PoolContract && !unTokenIdListRef.current) {\n      getunStakedTokenIdList()\n      tokenIdListRef.current = true\n    }\n  }, [NFTContract, wallet.detail.account, PoolContract])\n\n  useEffect(() => {\n    if (DeriforPairContract && EthforPairContract) {\n      getLiquidity()\n    }\n  }, [DeriforPairContract, EthforPairContract])\n\n\n  return (\n    <div className='pool-detail'>\n      <div className='back-pool'>\n        <div className='icon-back' onClick={() => { window.history.back(-1) }}>\n          <img alt='' src={backIcon} />\n          <span>{lang['back']}</span>\n        </div>\n      </div>\n      <div className='pool-deatail-info'>\n        <div className='pool-detail-basetoken-info'>\n          <div className='pool-info-text'>\n            <div className='pool-network-type'>\n              <div className='network-logo'>\n                <img alt='' src={ARBITRUM} />\n              </div>\n              <div className='pool-type-network-text'>\n                <div className='pool-type-text'>\n                  {lang[poolConfig.type]} {lang[poolConfig.zone]}\n                </div>\n                <div className='pool-network-text'>\n                  {networkText}\n                </div>\n              </div>\n            </div>\n            <div className='pool-des'>\n              Stake Uniswap <a rel='norelerror' target='_blank' href=\"https://app.uniswap.org/#/add/ETH/0x21E60EE73F17AC0A411ae5D690f908c3ED66Fe12/3000\" >DERI-ETH </a> LP NFTs to earn $DERI rewards.\n              <br></br>\n              <a rel='norelerror' target='_blank' href='https://docs.deri.io/library/faqs/mining-faq#is-dex-liquidity-mining-on-sushiswap-sushiswap-onsen-and-pancakeswap-deri-risk-free'><span className='learn-more'> {lang['learn-more']}</span></a>\n            </div>\n          </div>\n          <div className='select-basetoken-info'>\n            <div className='select-coin-title-search'>\n              <div className='select-coin-title'> {lang['select-the-coin']}</div>\n              <div className='search-box'>\n                <Search list={bTokenList} searchName='bTokenSymbol' onChange={() => { }} />\n              </div>\n            </div>\n            <div className='coin-search'>\n              <div className='slide-icon left'>\n                <Icon token='arrow-left' width='24' height='24' />\n              </div>\n              <div className=\"coin-list\">\n                {bTokenList.length ? <>\n                  <div className='coin-box checked-base'>\n                    <div className='base-apy-info'>\n                      <div className='lp-btoken-logo'>\n                        <div className={`btoken-logo ${bTokenList[0].bTokenSymbol}`}></div>\n                        <span className='conect-logo'>+</span>\n                        <div className={`btoken-logo ${bTokenList[1].bTokenSymbol}`}></div>\n                      </div>\n                      <div className='apy-base-staked'>\n                        <div className='base-name'>{nowToken}</div>\n                        <div className='base-apy'>\n                          {lang['apy']} &nbsp; <DeriNumberFormat value={apy} suffix='%' decimalScale={2} />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </> : null}\n              </div>\n              <div className='slide-icon right'>\n                <Icon token='arrow-right' width='24' height='24' />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='pool-detail-add-remove-info'>\n          <div className='mining-deri-liquidity'>\n            <div className='btoken-liquidity'>\n              {bTokenList.length && <>\n                <div className='lp-btoken-logo'>\n                  <div className={`btoken-logo ${bTokenList[0].bTokenSymbol}`}></div>\n                  <span className='conect-logo'>+</span>\n                  <div className={`btoken-logo ${bTokenList[1].bTokenSymbol}`}></div>\n                </div>\n                <div className='manage-stake'>\n                  <div className='manage'>\n                    {lang['manage']} {nowToken} {lang['liquidity']}\n                  </div>\n                </div>\n              </>}\n            </div>\n            <div className='deri-current-epoch'>\n              <div className={'mining-pool-claim'}>\n                <div className='mining-claim-info'>\n                  <span> {lang['you-have']}</span>\n                  <span className={`${+poolDeri === 0 ? 'no-deri' : \"\"} mining-pool-num`} onClick={claimDeri}>\n                    {claimPending && <Spinner />}\n                    <DeriNumberFormat firstTime={false} value={poolDeri} decimalScale={2} />\n                    <img src={deri} alt=\"deri\" />\n                  </span>\n                  <span>{lang['claim-in-pool']}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='mining-add-remove-liquidity'>\n            <div className='pool-info'>\n              <div className='pool-info-title'>\n                <div className='pool-info-title-text'>\n                  {lang['pool-info']}\n                </div>\n                <div className='down-up'>\n                  {isShowInfo === 'show' && <span onClick={() => setIsShowInfo('hide')}>\n                    <img className='up-icon' alt='' src={downIcon} />\n                  </span>}\n                  {isShowInfo === 'hide' && <span onClick={() => setIsShowInfo('show')}>\n                    <img alt='' src={downIcon} />\n                  </span>}\n                </div>\n              </div>\n              <div className={`'pool-info-text' ${isShowInfo}`}>\n                <div className='pool-info-text-one'>\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['apy']}</div>\n                    <div className='info-box-num'>\n                      <DeriNumberFormat value={apy} suffix='%' decimalScale={2} />\n                    </div>\n                  </div>\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['pool-liquidity']}</div>\n                    <div className='info-box-num'>\n                      $ <DeriNumberFormat value={liquidity} displayType='text' decimalScale={0} thousandSeparator={true} />\n                    </div>\n                  </div>\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['staked-balance']}</div>\n                    <div className='info-box-num'>\n                      {stakedTokenIdList.length}{\" \"}\n                      <a href='https://arbiscan.io/address/0xC36442b4a4522E871399CD717aBDD847Ab11FE88'>DERI/ETH LP NFTs</a>\n                    </div>\n                  </div>\n                </div>\n                <div className='pool-info-text-two'>\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['contract-address']}</div>\n                    <div className='info-box-num'>\n                      <a target='_blank' rel='noreferrer' href={`${chainConfig[chainId] && chainConfig[chainId]['viewUrl']}/address/${address}`}>\n                        {formatAddress(address)}\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='add-remove-liquidity'>\n              <Tab tabSet={tabSet} iconMarginRight='20' width={379} size={18} inactiveBgColor='#0c192d' icon='' borderBottom={true} divider={true} activeIndex={activeIndex} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nconst Operate = ({ wallet, type, lang, getLang, afterTransaction, tokenIdList, alert,setActiveIndex, NFTContract, PoolContract, address }) => {\n  const [disabled, setDisabled] = useState(false)\n  const [isApproveList, setIsApproveList] = useState([])\n  const [isApproved, setIsApproved] = useState(false)\n  const [approveBtnText, setApproveBtnText] = useState(lang[\"approve\"])\n  const NFTcontractCall = useContractCall(NFTContract);\n  // const PoolcontractCall = useContractCall(PoolContract);\n  const colors = ['#824A4A', '#69985E', '#93A1B8', '#377DFF', '#59AE99'];\n  const isApprove = useCallback(async () => {\n    let list = []\n    for (let index = 0; index < tokenIdList.length; index++) {\n      let approve = await NFTContract.getApproved(tokenIdList[index])\n      console.log(\"getApproved\", approve)\n      let obj = {}\n      if (approve && approve.toLocaleLowerCase() === address.toLocaleLowerCase()) {\n        obj = {\n          id: tokenIdList[index],\n          isApproved: true\n        }\n      } else {\n        obj = {\n          id: tokenIdList[index],\n          isApproved: false\n        }\n      }\n      list.push(obj)\n    }\n    console.log(list)\n    setIsApproveList(list)\n  }, [tokenIdList, NFTContract])\n\n  const approve = useCallback(async (id) => {\n    const transactionTitle = {\n      text: \"Approve\",\n      icon: \"DERI\"\n    }\n    const transactionContent = {\n      success: `Approve ${id}`,\n      error: \"Transaction failed\",\n    }\n    id = +id\n    try {\n      let params = [address, id]\n      let gasLimit = await getGasLimit(NFTContract, \"approve\", params)\n      console.log(gasLimit)\n      let res = await NFTcontractCall(\"approve\", params, { gasLimit: gasLimit });\n      // let transactionResponse = await NFTContract.approve(address, id)\n      console.log(\"approve\", res)\n      if (res && res.hash) {\n        Emitter.emit(EVENT_TRANS_BEGIN, {\n          title: transactionTitle, content: transactionContent, hash: res.hash\n        })\n      } else {\n        return false\n      }\n      const receipt = await res.wait()\n      console.log(\"receipt\", receipt)\n      if (receipt) {\n        console.log(\"receipt\", receipt)\n        if (receipt && receipt.transactionHash) {\n          const hash = receipt.transactionHash\n          if (receipt.status) {\n            Emitter.emit(EVENT_TRANS_END, { title: transactionTitle, content: transactionContent, context: { success: true, hash: hash, error: \"error\" } })\n            return true\n          } else {\n            Emitter.emit(EVENT_TRANS_END, { title: transactionTitle, content: transactionContent, context: { success: false.success, hash: hash, error: \"error\" } })\n            return false\n          }\n\n        }\n      }\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  }, [NFTContract])\n\n  const clickApprove = useCallback(async () => {\n    let id = isApproveList.find(item => !item.isApproved)\n    if (id) {\n      let approved = await approve(id.id)\n      isApprove()\n    }\n  }, [isApproveList])\n\n  const addLiquidity = useCallback(async () => {\n    const title = {\n      text: lang[\"add-liquidity-state\"],\n      icon: \"DERI\"\n    }\n    const connect = {\n      success: `${getLang('add-baseToken-liquidity', { baseToken: \"UNISWAP-LP\" })}`,\n      error: lang['transaction-failed'],\n    }\n    try {\n      let gasLimit = await getGasLimit(PoolContract, \"deposit\", [])\n      let res = await PoolContract[\"deposit()\"]({ gasLimit: gasLimit });\n      console.log(\"deposit\", res)\n      if (res && res.hash) {\n        Emitter.emit(EVENT_TRANS_BEGIN, {\n          title: title, content: connect, hash: res.hash\n        })\n      } else {\n        return false\n      }\n      const receipt = await res.wait()\n      console.log(\"receipt\", receipt)\n      if (receipt) {\n        console.log(\"receipt\", receipt)\n        if (receipt && receipt.transactionHash) {\n          const hash = receipt.transactionHash\n          let index = type === \"add\" ? 0 : 1\n          afterTransaction && afterTransaction(index)\n          if (receipt.status) {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: true, hash: hash, error: \"error\" } })\n            return true\n          } else {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: false.success, hash: hash, error: \"error\" } })\n            return false\n          }\n\n        }\n      }\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n\n  }, [PoolContract, type])\n  const removeLiquidity = useCallback(async () => {\n    const title = {\n      text: lang[\"remove-liquidity-state\"],\n      icon: \"DERI\"\n    }\n    const connect = {\n      success: `${getLang('remove-baseToken-liquidity', { baseToken: \"UNISWAP-LP\" })}`,\n      error: lang['transaction-failed'],\n    }\n    try {\n      let gasLimit = await getGasLimit(PoolContract, \"withdraw\", [])\n      let res = await PoolContract[\"withdraw()\"]({ gasLimit: gasLimit });\n      console.log(\"withdraw\", res)\n      if (res && res.hash) {\n        Emitter.emit(EVENT_TRANS_BEGIN, {\n          title: title, content: connect, hash: res.hash\n        })\n      } else {\n        return false\n      }\n      const receipt = await res.wait()\n      console.log(\"receipt\", receipt)\n      if (receipt) {\n        console.log(\"receipt\", receipt)\n        let index = type === \"add\" ? 0 : 1\n        afterTransaction && afterTransaction(index)\n        if (receipt && receipt.transactionHash) {\n          const hash = receipt.transactionHash\n          if (receipt.status) {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: true, hash: hash, error: \"error\" } })\n            return true\n          } else {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: false.success, hash: hash, error: \"error\" } })\n            return false\n          }\n        }\n      }\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n\n  }, [PoolContract, type])\n\n  useEffect(() => {\n    if (isApproveList.length) {\n      let id = isApproveList.find(item => !item.isApproved)\n      if (id) {\n        let text = `${lang[\"approve\"]} ${id.id}`\n        setApproveBtnText(text)\n      } else {\n        setIsApproved(true)\n      }\n    }\n  }, [isApproveList])\n\n  useEffect(() => {\n    if (NFTContract && tokenIdList && tokenIdList.length && type === 'add') {\n      isApprove()\n    }\n  }, [tokenIdList, NFTContract, type])\n\n  useEffect(() => {\n    setDisabled(!tokenIdList.length)\n    setIsApproved(!tokenIdList.length)\n    if (type === \"remove\") {\n      setIsApproved(true)\n      setActiveIndex(1)\n    }else{\n      setActiveIndex(0)\n    }\n  }, [tokenIdList, type])\n  return (\n    <div className='operate-liquidity-lp operate-liquidity'>\n      {\n        (tokenIdList && tokenIdList.length) ?\n          <div className='add-remove-nft-box'>\n            <div className='unstaked-nft'>\n              Your {type === \"add\" ? \"unstaked\" : \"staked\"} DERI/ETH LP NFTs\n            </div>\n            <div className='tokenIdList'>\n              {tokenIdList && tokenIdList.map((item, index) => {\n                return (\n                  <div className='tokenId-box' key=\"index\">\n                    <div className='color-box' style={{ backgroundColor: colors[index] }}></div>\n                    <div className='tokenId-text'>{item}</div>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n          :\n          <div className='no-nft-box'>\n            <img src={noNFT} alt=\"\" />\n            <div>\n              {type === \"add\" ? \"No DERI-ETH LP NFT in your wallet\" : \"No DERI-ETH LP NFT staked\"}\n            </div>\n          </div>\n      }\n\n      <div className='add-remove-btn'>\n        {!isApproved ? <Button width=\"331\" fontSize='18' disabled={disabled} label={approveBtnText} type={PRIMARY} onClick={clickApprove} /> : <Button width=\"331\" fontSize='18' disabled={disabled} label={type === \"add\" ? \"STAKE ALL LP NFTS\" : \"UNSTAKE ALL LP NFTS\"} type={PRIMARY} onClick={type === \"add\" ? addLiquidity : removeLiquidity} />}\n      </div>\n    </div >\n  )\n}\nexport default inject('wallet', 'poolManager')(observer(LpDetail))","import { Contract } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\n\nexport default function useContractCall(contract: Contract): (\n  method: string,\n  params: Array<any>,\n  options?: { value?: BigNumber; gasLimit?: BigNumber }) => Promise<TransactionResponse> {\n\n  return useMemo(() => {\n    return async (\n      method: string,\n      params: Array<any>,\n      options?: { value?: BigNumber; gasLimit?: BigNumber }\n    ) => {\n      return contract[method](...params, options)\n    }\n  }, [contract])\n}\n"],"sourceRoot":""}