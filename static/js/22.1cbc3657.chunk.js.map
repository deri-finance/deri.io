{"version":3,"sources":["components/Tab/Tab.js","components/Search/Search.js","hooks/useContractLp.ts","pages/Pool/img/deri.svg","pages/Pool/img/no-nft.svg","pages/Pool/LpDetail.js","hooks/useContractCall.ts"],"names":["Wrapper","styled","div","props","width","height","borderR","borderL","size","iconMarginRight","inactiveBgColor","borderB","activeFontColor","activeBgColor","borderT","Tab","tabSet","icon","className","borderTop","borderBottom","divider","activeIndex","arr","Object","keys","selected","setSelected","useState","styles","setStyles","setBorderT","setBorderL","setBorderB","setBorderR","setActiveFontColor","useEffect","checked","style","borderColor","fontColor","map","item","index","direction","onClick","e","select","iconWidth","iconHeight","token","inicon","content","bgColor","Search","list","onChange","searchName","placeholder","onFocus","onBlur","search","setSearch","length","setLength","origin","useRef","value","toLocaleUpperCase","current","filter","el","toUpperCase","indexOf","type","target","searchChange","src","searchLogo","alt","r","contractdescribers","useContract","name","chainId","contractAddress","isGet","wallet","useWallet","getContract","address","abi","ethereum","useMemo","provider","getProvider","networkVersion","String","Web3Provider","Contract","account","getSigner","connectUnchecked","getProviderOrSigner","require","forEach","key","path","split","last","substring","chainInfo","config","DeriEnv","get","chainConfig","PairAddress","Operate","contract","lang","getLang","afterTransaction","tokenIdList","NFTContract","alert","PoolContract","disabled","setDisabled","isApproveList","setIsApproveList","isApproved","setIsApproved","approveBtnText","setApproveBtnText","NFTcontractCall","method","params","options","a","colors","isApprove","useCallback","getApproved","approve","console","log","obj","toLocaleLowerCase","id","push","transactionTitle","text","transactionContent","success","error","getGasLimit","gasLimit","res","hash","Emitter","emit","EVENT_TRANS_BEGIN","title","wait","receipt","transactionHash","status","EVENT_TRANS_END","context","clickApprove","find","addLiquidity","connect","baseToken","removeLiquidity","backgroundColor","noNFT","Button","fontSize","label","PRIMARY","inject","observer","poolManager","useParams","isShowInfo","setIsShowInfo","useAlert","nowToken","poolConfig","setPoolConfig","bTokenList","setBTokenList","liquidity","setLiquidity","poolDeri","setPoolDeri","useConfig","claimPending","setClaimPending","unStakedTokenIdList","setUnStakedTokenIdList","stakedTokenIdList","setStakedTokenIdList","aTimeRewardInfo","setATimeRewardInfo","bTimeRewardInfo","setBTimeRewardInfo","setActiveIndex","networkText","DeriforPairContract","EthforPairContract","PoolContractGet","unTokenIdListRef","tokenIdListRef","getPendingReward","detail","deriNumber","BigNumber","from","_hex","toString","bTime","setTimeout","date","Date","getTime","data","getSecondsPerLiquidityInsideX128","timestamp","secondsPerLiquidityInsideX128","Promise","all","rewards","aTime","secondsPerLiquidityInsideX128_a","getRewardInBetween","reward","getunStakedTokenIdList","getStakedTokenIdList","getLiquidity","background","load","loadDoubleMingingPool","pool","lpPools","p","symbols","symbol","join","bTokens","claimDeri","claim","balanceOf","NFTNumber","tokenId","tokenOfOwnerByIndex","deriTokenId","getPositionInfo","getUserTokenIds","DeriNumber","EthNumber","deriPath","process","ethPath","fetch","resp","json","eresp","eres","deriPrice","price","ethPrice","usd","deriAmount","ethAmount","deriValue","bg","times","toNumber","ethValue","switchNetwork","isConnected","interval","window","setInterval","clearInterval","history","back","backIcon","ARBITRUM","zone","rel","href","Icon","bTokenSymbol","Spinner","DeriNumberFormat","firstTime","decimalScale","deri","downIcon","displayType","thousandSeparator","formatAddress"],"mappings":"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","file":"static/js/22.1cbc3657.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport React, { useState, useEffect } from 'react';\r\nimport Icon from '../Icon/Icon';\r\nconst Wrapper = styled.div`\r\n    cursor: pointer;\r\n    width:${props => props.width}px;\r\n    height:${props => props.height}px;\r\n    display:flex;\r\n    .tab-left.inactive{\r\n      border-radius:0px 0px 4px 0px;\r\n    }\r\n    .tab-right.inactive{\r\n      border-radius:0px 0px 0px 4px;\r\n    }\r\n    .tab-left.active{\r\n      border-radius:0px 4px 0px 0px;\r\n      ${props => props.borderR};\r\n    }\r\n    .tab-right.active{\r\n      border-radius:4px 0px 0px 0px;\r\n      ${props => props.borderL};\r\n    }\r\n    .inactive,.active{\r\n      width:50%;\r\n      box-sizing: content-box;\r\n      font-size:${props => props.size}px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      img{\r\n        margin-right:${props=>props.iconMarginRight}px\r\n      }\r\n    }\r\n    .inactive{\r\n      background:${props => props.inactiveBgColor};\r\n      ${props => props.borderB}\r\n    }\r\n    .active {\r\n      color: ${props => props.activeFontColor};\r\n      background : ${props => props.activeBgColor};\r\n      ${props => props.borderT};\r\n    }\r\n    .icon-tab{\r\n      margin-right:20px;\r\n      width:25px;\r\n      height:25px;\r\n    }\r\n  `\r\nexport default function Tab({ tabSet, inactiveBgColor, iconMarginRight, activeBgColor, icon, className, width = 238, height = 47, size = 16, borderTop = false, borderBottom = false, divider = false,activeIndex = 0 }) {\r\n  let arr = Object.keys(tabSet)\r\n  const [selected, setSelected] = useState(arr[activeIndex])\r\n  const [styles, setStyles] = useState()\r\n  const [borderT, setBorderT] = useState()\r\n  const [borderL, setBorderL] = useState()\r\n  const [borderB, setBorderB] = useState()\r\n  const [borderR, setBorderR] = useState()\r\n  const [activeFontColor, setActiveFontColor] = useState()\r\n  function select(item,e) {\r\n    // e.stopPropagation()\r\n    setSelected(item)\r\n  }\r\n  useEffect(() => {\r\n    const arr = Object.keys(tabSet)\r\n    setSelected(arr[activeIndex])\r\n  }, [tabSet,activeIndex])\r\n\r\n\r\n  useEffect(() => {\r\n    const arr = Object.keys(tabSet)\r\n    let checked = selected ? selected : arr[activeIndex]\r\n    if (tabSet[checked]) {\r\n      setStyles(tabSet[checked].style)\r\n      let borderT = borderTop ? `border-top:1px solid ${tabSet[checked].borderColor}` : \"border-top:0\"\r\n      let borderB = borderBottom ? `border-bottom:1px solid ${tabSet[checked].borderColor}` : \"border-bottom:0\"\r\n      let borderL = divider ? `border-left:1px solid ${tabSet[checked].borderColor}` : \"border-left:0\"\r\n      let borderR = divider ? `border-right:1px solid ${tabSet[checked].borderColor}` : \"border-right:0\"\r\n      let activeFontColor = tabSet[checked].fontColor ? tabSet[checked].fontColor : '#FFFFFF'\r\n      setBorderT(borderT)\r\n      setBorderL(borderL)\r\n      setBorderB(borderB)\r\n      setBorderR(borderR)\r\n      setActiveFontColor(activeFontColor)\r\n    }\r\n\r\n  }, [tabSet, selected])\r\n\r\n  return (\r\n    <div style={styles} className={className}>\r\n      <Wrapper className='tab-header' iconMarginRight={iconMarginRight} width={width} height={height}\r\n        activeFontColor={activeFontColor} activeBgColor={activeBgColor} inactiveBgColor={inactiveBgColor} size={size} borderT={borderT} borderB={borderB} borderL={borderL} borderR={borderR}>\r\n        {arr.map((item,index) => (\r\n          <div\r\n            key={index}\r\n            className={item === selected ? `${tabSet[item].direction || tabSet[item].className} active` : `${tabSet[item].direction || tabSet[item].className} inactive`}\r\n            onClick={(e) => select(item,e)}>\r\n            {tabSet[item].icon ? <Icon width={tabSet[item].iconWidth} height={tabSet[item].iconHeight} token={item === selected ? tabSet[item].icon : tabSet[item].inicon}/> : \"\"}  {item}\r\n          </div>\r\n        ))}\r\n      </Wrapper>\r\n      {tabSet[selected] ? tabSet[selected].content : ''}\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport styled from \"styled-components\"\r\nimport searchLogo from '../../assets/img/search.svg'\r\nconst Wrapper = styled.div`\r\n  .search-token{\r\n  width: ${props => props.width }px;\r\n  height: ${props => props.height}px;\r\n  background: ${props => props.bgColor};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding:0 24px;\r\n  border-radius:4px;\r\n  img{\r\n    width:18px;\r\n    height:18px;\r\n  }\r\n  .search-input{\r\n    border: 0;\r\n    width:100%;\r\n    height: 100%;\r\n    background:transparent;\r\n    outline-style: none;\r\n    color: #FFFFFF;\r\n    font-size: 18px;\r\n    border-radius: 4px;\r\n  }\r\n}\r\n`\r\n\r\nexport default function Search({ list, onChange,width='320',height='48', bgColor='rgba(85, 119, 253, 0.1)', searchName = 'bTokenSymbol',className ,placeholder = 'Search',onFocus,onBlur}) {\r\n  const [search, setSearch] = useState('')\r\n  const [length,setLength] = useState(0)\r\n  const origin = useRef([])\r\n  const searchChange = (e) => {\r\n    let value = e.target.value\r\n    setSearch(value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (search) {\r\n      let value = search.toLocaleUpperCase()\r\n      if (origin.current.length === 0) {\r\n        origin.current = list\r\n        setLength(list.length)\r\n      }\r\n      const arr = origin.current.filter(el => el[searchName] && el[searchName].toUpperCase().indexOf(value) >= 0)\r\n      onChange(arr,value)\r\n    } else {\r\n      onChange(origin.current)\r\n    }\r\n  }, [search])\r\n  useEffect(()=>{\r\n    if (origin.current.length === 0) {\r\n      setLength(list.length)\r\n    }\r\n  },[list])\r\n  return (\r\n    <Wrapper width={width} height={height} bgColor={bgColor} className={className}  >\r\n      <div className='search-token'>\r\n        <input\r\n          type='text'\r\n          className='search-input'\r\n          placeholder={placeholder}\r\n          value={search}\r\n          onChange={(e) => { searchChange(e) }}\r\n          // onFocus={e => onFocus && onFocus(e)}\r\n          // onBlur={e => onBlur && onBlur(e)}\r\n        />\r\n        <img src={searchLogo} alt='' />\r\n      </div>\r\n    </Wrapper>\r\n\r\n  )\r\n}","import { Contract, ContractInterface } from \"@ethersproject/contracts\";\r\nimport {\r\n  JsonRpcProvider,\r\n  JsonRpcSigner,\r\n  Web3Provider,\r\n} from \"@ethersproject/providers\";\r\nimport { useMemo } from \"react\";\r\nimport { useWallet } from \"use-wallet\";\r\nimport { getProvider } from \"../utils/utils\";\r\n\r\nconst contractdescribers = {};\r\n\r\nfunction importAll(r) {\r\n  return r.keys().forEach((key) => {\r\n    const path = key.split(\"/\");\r\n    const last = path[path.length - 1];\r\n    contractdescribers[last.substring(0, last.indexOf(\".\"))] = r(key);\r\n  });\r\n}\r\n\r\nimportAll(require.context(`../abis/`, true, /\\.json$/));\r\n\r\nexport default function useContract(\r\n  name: string,\r\n  chainId: number,\r\n  contractAddress: string,\r\n  isGet?:Boolean,\r\n): Contract {\r\n  const wallet = useWallet();\r\n  const { address, abi } = getContract(name);\r\n  const { ethereum } = wallet;\r\n  if (address) {\r\n    contractAddress = address;\r\n  }\r\n  return useMemo(() => {\r\n    let provider = getProvider(chainId);\r\n    if (ethereum && ethereum.networkVersion === String(chainId) && !isGet) {\r\n      provider = new Web3Provider(ethereum, \"any\");\r\n    }\r\n    if (!provider) {\r\n      return null;\r\n    }\r\n    return new Contract(\r\n      contractAddress,\r\n      abi,\r\n      getProviderOrSigner(provider, wallet.account)\r\n    );\r\n  }, [contractAddress, abi, wallet]);\r\n}\r\n\r\n// account is not optional\r\nfunction getSigner(provider: JsonRpcProvider, account: string): JsonRpcSigner {\r\n  return provider.getSigner(account).connectUnchecked();\r\n}\r\n\r\n// account is optional\r\nfunction getProviderOrSigner(\r\n  provider: JsonRpcProvider,\r\n  account?: string\r\n): JsonRpcProvider | JsonRpcSigner {\r\n  return account ? getSigner(provider, account) : provider;\r\n}\r\n\r\nfunction getContract(name: string): ContractDescriber {\r\n  return contractdescribers[name];\r\n}\r\n\r\ninterface ContractDescriber {\r\n  address: string;\r\n  abi: ContractInterface;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/deri.99910f26.svg\";","export default __webpack_public_path__ + \"static/media/no-nft.502d585f.svg\";","/* eslint-disable react/jsx-no-target-blank */\r\nimport { useState, useEffect, useMemo, useRef, useCallback } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { inject, observer } from 'mobx-react'\r\nimport { useAlert } from 'react-alert'\r\nimport Tab from '../../components/Tab/Tab'\r\nimport { bg, formatAddress, getGasLimit } from \"../../utils/utils\"\r\nimport config from '../../config.json'\r\nimport downIcon from '../../assets/img/arrow-down.svg'\r\nimport useConfig from '../../hooks/useConfig'\r\nimport { DeriEnv } from '../../lib/web3js/index'\r\nimport './detail.less'\r\nimport './claim.less'\r\nimport backIcon from '../../assets/img/back.svg'\r\nimport ARBITRUM from '../../assets/img/arbitrum-logo.svg'\r\nimport deri from './img/deri.svg'\r\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\r\nimport noNFT from './img/no-nft.svg'\r\nimport Spinner from '../../components/Spinner/Spinner'\r\nimport Icon from '../../components/Icon/Icon'\r\nimport Search from '../../components/Search/Search'\r\nimport Button from '../../components/Button/Button'\r\nimport { EVENT_TRANS_BEGIN, EVENT_TRANS_END, PRIMARY } from '../../utils/Constants'\r\nimport useContract from '../../hooks/useContractLp'\r\nimport { BigNumber } from 'ethers'\r\nimport './Detail/operateLiquidity.less'\r\nimport useContractCall from '../../hooks/useContractCall'\r\nimport Emitter from '../../utils/Emitter'\r\n\r\nconst env = DeriEnv.get();\r\nconst { chainInfo } = config[env]\r\nconst chainConfig = config[DeriEnv.get()]['chainInfo']\r\nconst DeriAddress = \"0x21E60EE73F17AC0A411ae5D690f908c3ED66Fe12\"\r\nconst ETHAddress = \"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\"\r\nconst PairAddress = \"0x96C3966534b4377691e11e163A0409Ad01667343\"\r\nfunction LpDetail({ lang, wallet = {}, poolManager, getLang }) {\r\n  const { chainId, address } = useParams();\r\n  const [isShowInfo, setIsShowInfo] = useState('show')\r\n  const alert = useAlert();\r\n  const nowToken = \"UNISWAP-LP\"\r\n  const [poolConfig, setPoolConfig] = useState('')\r\n  const [bTokenList, setBTokenList] = useState([])\r\n  const [liquidity, setLiquidity] = useState(\"\")\r\n  const [poolDeri, setPoolDeri] = useState(0)\r\n  const config = useConfig();\r\n  const [claimPending, setClaimPending] = useState(false)\r\n  const [unStakedTokenIdList, setUnStakedTokenIdList] = useState([])\r\n  const [stakedTokenIdList, setStakedTokenIdList] = useState([])\r\n  const [aTimeRewardInfo, setATimeRewardInfo] = useState([])\r\n  const [bTimeRewardInfo, setBTimeRewardInfo] = useState([])\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const networkText = chainInfo[chainId] && chainInfo[chainId].name;\r\n\r\n  const DeriforPairContract = useContract(\"ERC20\", chainId, DeriAddress)\r\n  const EthforPairContract = useContract(\"ERC20\", chainId, ETHAddress)\r\n  const NFTContract = useContract(\"IERC721\", chainId)\r\n  const PoolContract = useContract(\"arbitrumLp\", chainId)\r\n  const PoolContractGet = useContract(\"arbitrumLp\", chainId,true)\r\n\r\n  const unTokenIdListRef = useRef()\r\n  const tokenIdListRef = useRef()\r\n\r\n  const getPendingReward = async () => {\r\n    let res = await PoolContract[\"getRewardInfo(address)\"](wallet.detail.account)\r\n    if (res) {\r\n      let deriNumber = BigNumber.from(res._hex).toString() / (10 ** 18)\r\n      setPoolDeri(deriNumber)\r\n    }\r\n  }\r\n\r\n  const bTime = useCallback(async (id) => {\r\n    let res;\r\n    await setTimeout(async () => {\r\n      let date = new Date()\r\n      console.log(\"bTime\", date.getTime())\r\n      let data = stakedTokenIdList.map(async (item) => {\r\n        let obj = {}\r\n        let res = await PoolContractGet.getSecondsPerLiquidityInsideX128(item)\r\n        if (res) {\r\n          obj[\"id\"] = item\r\n          obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\r\n          obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\r\n        }\r\n        return obj\r\n      })\r\n      data = await Promise.all(data)\r\n      setBTimeRewardInfo(data)\r\n    }, 5000);\r\n    return res\r\n  }, [stakedTokenIdList, PoolContractGet])\r\n\r\n  const aTime = useCallback(async () => {\r\n    let date = new Date()\r\n    let data = stakedTokenIdList.map(async (item) => {\r\n      let obj = {}\r\n      let res = await PoolContractGet.getSecondsPerLiquidityInsideX128(item)\r\n      if (res) {\r\n        obj[\"id\"] = item\r\n        obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\r\n        obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\r\n      }\r\n      return obj\r\n    })\r\n    data = await Promise.all(data)\r\n    console.log(\"aTime\",data)\r\n    console.log(\"aTime\", date.getTime())\r\n    bTime()\r\n    setATimeRewardInfo(data)\r\n\r\n  }, [stakedTokenIdList, PoolContractGet])\r\n\r\n  const getTimeRewardInfo = useCallback(async () => {\r\n    console.log(aTimeRewardInfo, bTimeRewardInfo)\r\n    let rewards = bTimeRewardInfo.map(async (item) => {\r\n      let aTime = aTimeRewardInfo.find(id => id.id === item.id)\r\n      let secondsPerLiquidityInsideX128_a = aTime.secondsPerLiquidityInsideX128\r\n      console.log(\"getTimeRewardInfo\", item, aTime)\r\n      let reward = await PoolContract.getRewardInBetween(item.id, item.timestamp, secondsPerLiquidityInsideX128_a, item.secondsPerLiquidityInsideX128)\r\n      if (reward) {\r\n        let obj = {\r\n          reward: BigNumber.from(reward._hex).toString() / 10 ** 18,\r\n          id: item.id,\r\n          timestamp: item.timestamp - aTime.timestamp\r\n        }\r\n        return obj\r\n      }\r\n    })\r\n    rewards = await Promise.all(rewards)\r\n    console.log(\"getTimeRewardInfo\", rewards)\r\n  }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\r\n  const afterTransaction = (activeIndex) => {\r\n    getPendingReward()\r\n    getunStakedTokenIdList()\r\n    getStakedTokenIdList()\r\n    getLiquidity()\r\n    setActiveIndex(activeIndex)\r\n  }\r\n  const tabSet = useMemo(() => ({\r\n    [lang['add']]: {\r\n      content: <Operate type='add' getLang={getLang} afterTransaction={afterTransaction} wallet={wallet} alert={alert} address={address} lang={lang} NFTContract={NFTContract} PoolContract={PoolContract} tokenIdList={unStakedTokenIdList} />,\r\n      style: { background: \"linear-gradient(200.74deg, rgba(97, 122, 255, 0.1) -4.65%, rgba(223, 229, 255, 0) 50.94%, rgba(85, 91, 237, 0.05) 105.4%)\" },\r\n      borderColor: \"#203B60\",\r\n      icon: 'add-icon',\r\n      iconWidth: '25',\r\n      iconHeight: '25',\r\n      inicon: 'inactive-add',\r\n      direction: \"tab-left\"\r\n    },\r\n    [lang['remove']]: {\r\n      content: <Operate type='remove' getLang={getLang} afterTransaction={afterTransaction} wallet={wallet} alert={alert} address={address} lang={lang} PoolContract={PoolContract} NFTContract={NFTContract} tokenIdList={stakedTokenIdList} />,\r\n      style: { background: \"linear-gradient(200.74deg, rgba(97, 122, 255, 0.1) -4.65%, rgba(223, 229, 255, 0) 50.94%, rgba(85, 91, 237, 0.05) 105.4%)\" },\r\n      borderColor: \"#203B60\",\r\n      icon: 'remove-icon',\r\n      iconWidth: '25',\r\n      iconHeight: '25',\r\n      iconMarginRight: '20',\r\n      inicon: 'inactive-remove',\r\n      direction: \"tab-right\",\r\n    },\r\n  }), [lang, wallet, getLang, afterTransaction, unStakedTokenIdList, alert, stakedTokenIdList, NFTContract, PoolContract, address])\r\n\r\n  const load = async () => {\r\n    await poolManager.loadDoubleMingingPool();\r\n    let pool = poolManager.lpPools\r\n    pool = pool.filter(p => p.address === address)\r\n    pool = pool[0]\r\n    let symbols = pool.symbols.map(item => {\r\n      let arr = [];\r\n      arr.push(item.symbol)\r\n      return arr\r\n    })\r\n    symbols = symbols.join(',')\r\n    setPoolConfig(pool)\r\n    setBTokenList(pool.bTokens)\r\n  }\r\n  const claimDeri = async () => {\r\n    if (+poolDeri === 0) {\r\n      alert.error(lang['no-deri-to-claim-yet']);\r\n      return;\r\n    }\r\n    setClaimPending(true)\r\n    const title = {\r\n      text: \"Claim Deri\",\r\n      icon: \"DERI\",\r\n    }\r\n    const content = {\r\n      success: lang['claim-deri-reward'],\r\n      error: lang['transaction-failed'],\r\n    }\r\n    try {\r\n      let params = [address]\r\n      let gasLimit = await getGasLimit(PoolContract, \"claim\", params)\r\n      console.log(gasLimit)\r\n      let res = await PoolContract.claim({ gasLimit: gasLimit });\r\n      console.log(\"claim\", res)\r\n      if (res && res.hash) {\r\n        Emitter.emit(EVENT_TRANS_BEGIN, {\r\n          title: title, content: content, hash: res.hash\r\n        })\r\n      } else {\r\n        getPendingReward()\r\n        setClaimPending(false)\r\n        return false\r\n      }\r\n      const receipt = await res.wait()\r\n      console.log(\"receipt\", receipt)\r\n      if (receipt) {\r\n        console.log(\"receipt\", receipt)\r\n        if (receipt && receipt.transactionHash) {\r\n          const hash = receipt.transactionHash\r\n          if (receipt.status) {\r\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: content, context: { success: true, hash: hash, error: \"error\" } })\r\n            if (res.success) {\r\n              setPoolDeri(0)\r\n            }\r\n          } else {\r\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: content, context: { success: false.success, hash: hash, error: \"error\" } })\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n    getPendingReward()\r\n    setClaimPending(false)\r\n  }\r\n\r\n  const getunStakedTokenIdList = useCallback(async () => {\r\n    if (wallet.detail.account) {\r\n      let NFTNumber = await NFTContract.balanceOf(wallet.detail.account)\r\n      NFTNumber = BigNumber.from(NFTNumber._hex).toString()\r\n      console.log(\"TokenList\", NFTNumber)\r\n      let tokenId = []\r\n      for (let index = 0; index < NFTNumber; index++) {\r\n        let id = await NFTContract.tokenOfOwnerByIndex(wallet.detail.account, index)\r\n        id = BigNumber.from(id._hex).toString()\r\n        tokenId.push(id)\r\n      }\r\n      let deriTokenId = [];\r\n      for (let index = 0; index < tokenId.length; index++) {\r\n        let id = await PoolContract.getPositionInfo(tokenId[index])\r\n        console.log(id)\r\n        if (id[0].toLocaleLowerCase() === PairAddress.toLocaleLowerCase()) {\r\n          deriTokenId.push(tokenId[index])\r\n          console.log(tokenId[index])\r\n        }\r\n      }\r\n      console.log(\"deriTokenId\", deriTokenId)\r\n      setUnStakedTokenIdList(deriTokenId)\r\n    }\r\n  }, [NFTContract, wallet.detail.account, PoolContract])\r\n\r\n  const getStakedTokenIdList = useCallback(async () => {\r\n    if (wallet.detail.account) {\r\n      let res = await PoolContract.getUserTokenIds(wallet.detail.account)\r\n      res = res.map(item => {\r\n        return BigNumber.from(item._hex).toString()\r\n      })\r\n      console.log(\"getStakedTokenIdList\", res)\r\n      setStakedTokenIdList(res)\r\n    }\r\n  }, [PoolContract, wallet.detail.account])\r\n\r\n  const getLiquidity = useCallback(async () => {\r\n    let DeriNumber = await DeriforPairContract.balanceOf(PairAddress)\r\n    let EthNumber = await EthforPairContract.balanceOf(PairAddress)\r\n    let deriPath = `${process.env.REACT_APP_INFO_HTTP_URL}/stats_for_token`\r\n    let ethPath = \"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=USD\"\r\n    let resp = await fetch(deriPath);\r\n    let res = await resp.json();\r\n    let eresp = await fetch(ethPath);\r\n    let eres = await eresp.json();\r\n    let deriPrice = res.data.price;\r\n    let ethPrice = eres.ethereum.usd\r\n    let deriAmount = BigNumber.from(DeriNumber._hex).toString() / (10 ** 18);\r\n    let ethAmount = BigNumber.from(EthNumber._hex).toString() / (10 ** 18);\r\n    let deriValue = bg(deriAmount).times(deriPrice).toNumber();\r\n    let ethValue = bg(ethAmount).times(ethPrice).toNumber();\r\n    let liquidity = deriValue + ethValue\r\n    setLiquidity(liquidity)\r\n  }, [DeriforPairContract, EthforPairContract])\r\n\r\n  useEffect(() => {\r\n    if (wallet.detail.chainId && wallet.detail.chainId !== chainId) {\r\n      wallet.switchNetwork(config[chainId])\r\n    }\r\n    if (wallet.isConnected() && PoolContract) {\r\n      let interval = window.setInterval(getPendingReward, 1000 * 10 * 3);\r\n      getPendingReward()\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [wallet.detail.chainId, wallet.detail.account, PoolContract])\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (stakedTokenIdList.length && PoolContractGet) {\r\n  //     aTime()\r\n  //   }\r\n  // }, [stakedTokenIdList, PoolContractGet])\r\n\r\n  // useEffect(() => {\r\n  //   if (aTimeRewardInfo.length && PoolContract && bTimeRewardInfo.length) {\r\n  //     getTimeRewardInfo()\r\n  //   }\r\n  // }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\r\n\r\n  useEffect(() => {\r\n    load()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (PoolContract && !tokenIdListRef.current && wallet.detail.account) {\r\n      getStakedTokenIdList()\r\n      tokenIdListRef.current = true\r\n    }\r\n  }, [PoolContract, wallet.detail.account])\r\n\r\n  useEffect(() => {\r\n    if (NFTContract && wallet.detail.account && PoolContract && !unTokenIdListRef.current) {\r\n      getunStakedTokenIdList()\r\n      tokenIdListRef.current = true\r\n    }\r\n  }, [NFTContract, wallet.detail.account, PoolContract])\r\n\r\n  useEffect(() => {\r\n    if (DeriforPairContract && EthforPairContract) {\r\n      getLiquidity()\r\n    }\r\n  }, [DeriforPairContract, EthforPairContract])\r\n\r\n\r\n  return (\r\n    <div className='pool-detail'>\r\n      <div className='back-pool'>\r\n        <div className='icon-back' onClick={() => { window.history.back(-1) }}>\r\n          <img alt='' src={backIcon} />\r\n          <span>{lang['back']}</span>\r\n        </div>\r\n      </div>\r\n      <div className='pool-deatail-info'>\r\n        <div className='pool-detail-basetoken-info'>\r\n          <div className='pool-info-text'>\r\n            <div className='pool-network-type'>\r\n              <div className='network-logo'>\r\n                <img alt='' src={ARBITRUM} />\r\n              </div>\r\n              <div className='pool-type-network-text'>\r\n                <div className='pool-type-text'>\r\n                  {lang[poolConfig.type]} {lang[poolConfig.zone]}\r\n                </div>\r\n                <div className='pool-network-text'>\r\n                  {networkText}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='pool-des'>\r\n              Stake Uniswap <a rel='norelerror' target='_blank' href=\"https://app.uniswap.org/#/add/ETH/0x21E60EE73F17AC0A411ae5D690f908c3ED66Fe12/3000\" >DERI-ETH </a> LP NFTs to earn $DERI rewards.\r\n              <br></br>\r\n              <a rel='norelerror' target='_blank' href='https://docs.deri.io/library/faqs/mining-faq#is-dex-liquidity-mining-on-sushiswap-sushiswap-onsen-and-pancakeswap-deri-risk-free'><span className='learn-more'> {lang['learn-more']}</span></a>\r\n            </div>\r\n          </div>\r\n          <div className='select-basetoken-info'>\r\n            <div className='select-coin-title-search'>\r\n              <div className='select-coin-title'> {lang['select-the-coin']}</div>\r\n              <div className='search-box'>\r\n                <Search list={bTokenList} searchName='bTokenSymbol' onChange={() => { }} />\r\n              </div>\r\n            </div>\r\n            <div className='coin-search'>\r\n              <div className='slide-icon left'>\r\n                <Icon token='arrow-left' width='24' height='24' />\r\n              </div>\r\n              <div className=\"coin-list\">\r\n                {bTokenList.length ? <>\r\n                  <div className='coin-box checked-base'>\r\n                    <div className='base-apy-info'>\r\n                      <div className='lp-btoken-logo'>\r\n                        <div className={`btoken-logo ${bTokenList[0].bTokenSymbol}`}></div>\r\n                        <span className='conect-logo'>+</span>\r\n                        <div className={`btoken-logo ${bTokenList[1].bTokenSymbol}`}></div>\r\n                      </div>\r\n                      <div className='apy-base-staked'>\r\n                        <div className='base-name'>{nowToken}</div>\r\n                        <div className='base-apy'>\r\n                          {lang['apy']} &nbsp; --\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </> : null}\r\n              </div>\r\n              <div className='slide-icon right'>\r\n                <Icon token='arrow-right' width='24' height='24' />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='pool-detail-add-remove-info'>\r\n          <div className='mining-deri-liquidity'>\r\n            <div className='btoken-liquidity'>\r\n              {bTokenList.length && <>\r\n                <div className='lp-btoken-logo'>\r\n                  <div className={`btoken-logo ${bTokenList[0].bTokenSymbol}`}></div>\r\n                  <span className='conect-logo'>+</span>\r\n                  <div className={`btoken-logo ${bTokenList[1].bTokenSymbol}`}></div>\r\n                </div>\r\n                <div className='manage-stake'>\r\n                  <div className='manage'>\r\n                    {lang['manage']} {nowToken} {lang['liquidity']}\r\n                  </div>\r\n                </div>\r\n              </>}\r\n            </div>\r\n            <div className='deri-current-epoch'>\r\n              <div className={'mining-pool-claim'}>\r\n                <div className='mining-claim-info'>\r\n                  <span> {lang['you-have']}</span>\r\n                  <span className={`${+poolDeri === 0 ? 'no-deri' : \"\"} mining-pool-num`} onClick={claimDeri}>\r\n                    {claimPending && <Spinner />}\r\n                    <DeriNumberFormat firstTime={false} value={poolDeri} decimalScale={2} />\r\n                    <img src={deri} alt=\"deri\" />\r\n                  </span>\r\n                  <span>{lang['claim-in-pool']}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='mining-add-remove-liquidity'>\r\n            <div className='pool-info'>\r\n              <div className='pool-info-title'>\r\n                <div className='pool-info-title-text'>\r\n                  {lang['pool-info']}\r\n                </div>\r\n                <div className='down-up'>\r\n                  {isShowInfo === 'show' && <span onClick={() => setIsShowInfo('hide')}>\r\n                    <img className='up-icon' alt='' src={downIcon} />\r\n                  </span>}\r\n                  {isShowInfo === 'hide' && <span onClick={() => setIsShowInfo('show')}>\r\n                    <img alt='' src={downIcon} />\r\n                  </span>}\r\n                </div>\r\n              </div>\r\n              <div className={`'pool-info-text' ${isShowInfo}`}>\r\n                <div className='pool-info-text-one'>\r\n                  <div className='info-box'>\r\n                    <div className='info-box-title'>{lang['apy']}</div>\r\n                    <div className='info-box-num'>\r\n                      --\r\n                    </div>\r\n                  </div>\r\n                  <div className='info-box'>\r\n                    <div className='info-box-title'>{lang['pool-liquidity']}</div>\r\n                    <div className='info-box-num'>\r\n                      $ <DeriNumberFormat value={liquidity} displayType='text' decimalScale={0} thousandSeparator={true} />\r\n                    </div>\r\n                  </div>\r\n                  <div className='info-box'>\r\n                    <div className='info-box-title'>{lang['staked-balance']}</div>\r\n                    <div className='info-box-num'>\r\n                      {stakedTokenIdList.length}{\" \"}\r\n                      <a href='https://arbiscan.io/address/0xC36442b4a4522E871399CD717aBDD847Ab11FE88'>DERI/ETH LP NFTs</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='pool-info-text-two'>\r\n                  <div className='info-box'>\r\n                    <div className='info-box-title'>{lang['contract-address']}</div>\r\n                    <div className='info-box-num'>\r\n                      <a target='_blank' rel='noreferrer' href={`${chainConfig[chainId] && chainConfig[chainId]['viewUrl']}/address/${address}`}>\r\n                        {formatAddress(address)}\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='add-remove-liquidity'>\r\n              <Tab tabSet={tabSet} iconMarginRight='20' width={379} size={18} inactiveBgColor='#0c192d' icon='' borderBottom={true} divider={true} activeIndex={activeIndex} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nconst Operate = ({ wallet, type, lang, getLang, afterTransaction, tokenIdList, alert, NFTContract, PoolContract, address }) => {\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [isApproveList, setIsApproveList] = useState([])\r\n  const [isApproved, setIsApproved] = useState(false)\r\n  const [approveBtnText, setApproveBtnText] = useState(lang[\"approve\"])\r\n  const NFTcontractCall = useContractCall(NFTContract);\r\n  // const PoolcontractCall = useContractCall(PoolContract);\r\n  const colors = ['#824A4A', '#69985E', '#93A1B8', '#377DFF', '#59AE99'];\r\n  const isApprove = useCallback(async () => {\r\n    let list = []\r\n    for (let index = 0; index < tokenIdList.length; index++) {\r\n      let approve = await NFTContract.getApproved(tokenIdList[index])\r\n      console.log(\"getApproved\", approve)\r\n      let obj = {}\r\n      if (approve && approve.toLocaleLowerCase() === address.toLocaleLowerCase()) {\r\n        obj = {\r\n          id: tokenIdList[index],\r\n          isApproved: true\r\n        }\r\n      } else {\r\n        obj = {\r\n          id: tokenIdList[index],\r\n          isApproved: false\r\n        }\r\n      }\r\n      list.push(obj)\r\n    }\r\n    console.log(list)\r\n    setIsApproveList(list)\r\n  }, [tokenIdList, NFTContract])\r\n\r\n  const approve = useCallback(async (id) => {\r\n    const transactionTitle = {\r\n      text: \"Approve\",\r\n      icon: \"DERI\"\r\n    }\r\n    const transactionContent = {\r\n      success: `Approve ${id}`,\r\n      error: \"Transaction failed\",\r\n    }\r\n    id = +id\r\n    try {\r\n      let params = [address, id]\r\n      let gasLimit = await getGasLimit(NFTContract, \"approve\", params)\r\n      console.log(gasLimit)\r\n      let res = await NFTcontractCall(\"approve\", params, { gasLimit: gasLimit });\r\n      // let transactionResponse = await NFTContract.approve(address, id)\r\n      console.log(\"approve\", res)\r\n      if (res && res.hash) {\r\n        Emitter.emit(EVENT_TRANS_BEGIN, {\r\n          title: transactionTitle, content: transactionContent, hash: res.hash\r\n        })\r\n      } else {\r\n        return false\r\n      }\r\n      const receipt = await res.wait()\r\n      console.log(\"receipt\", receipt)\r\n      if (receipt) {\r\n        console.log(\"receipt\", receipt)\r\n        if (receipt && receipt.transactionHash) {\r\n          const hash = receipt.transactionHash\r\n          if (receipt.status) {\r\n            Emitter.emit(EVENT_TRANS_END, { title: transactionTitle, content: transactionContent, context: { success: true, hash: hash, error: \"error\" } })\r\n            return true\r\n          } else {\r\n            Emitter.emit(EVENT_TRANS_END, { title: transactionTitle, content: transactionContent, context: { success: false.success, hash: hash, error: \"error\" } })\r\n            return false\r\n          }\r\n\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  }, [NFTContract])\r\n\r\n  const clickApprove = useCallback(async () => {\r\n    let id = isApproveList.find(item => !item.isApproved)\r\n    if (id) {\r\n      let approved = await approve(id.id)\r\n      isApprove()\r\n    }\r\n  }, [isApproveList])\r\n\r\n  const addLiquidity = useCallback(async () => {\r\n    const title = {\r\n      text: lang[\"add-liquidity-state\"],\r\n      icon: \"DERI\"\r\n    }\r\n    const connect = {\r\n      success: `${getLang('add-baseToken-liquidity', { baseToken: \"UNISWAP-LP\" })}`,\r\n      error: lang['transaction-failed'],\r\n    }\r\n    try {\r\n      let gasLimit = await getGasLimit(PoolContract, \"deposit\", [])\r\n      let res = await PoolContract[\"deposit()\"]({ gasLimit: gasLimit });\r\n      console.log(\"deposit\", res)\r\n      if (res && res.hash) {\r\n        Emitter.emit(EVENT_TRANS_BEGIN, {\r\n          title: title, content: connect, hash: res.hash\r\n        })\r\n      } else {\r\n        return false\r\n      }\r\n      const receipt = await res.wait()\r\n      console.log(\"receipt\", receipt)\r\n      if (receipt) {\r\n        console.log(\"receipt\", receipt)\r\n        if (receipt && receipt.transactionHash) {\r\n          const hash = receipt.transactionHash\r\n          let index = type === \"add\" ? 0 : 1\r\n          afterTransaction && afterTransaction(index)\r\n          if (receipt.status) {\r\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: true, hash: hash, error: \"error\" } })\r\n            return true\r\n          } else {\r\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: false.success, hash: hash, error: \"error\" } })\r\n            return false\r\n          }\r\n\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n\r\n  }, [PoolContract, type])\r\n  const removeLiquidity = useCallback(async () => {\r\n    const title = {\r\n      text: lang[\"remove-liquidity-state\"],\r\n      icon: \"DERI\"\r\n    }\r\n    const connect = {\r\n      success: `${getLang('remove-baseToken-liquidity', { baseToken: \"UNISWAP-LP\" })}`,\r\n      error: lang['transaction-failed'],\r\n    }\r\n    try {\r\n      let gasLimit = await getGasLimit(PoolContract, \"withdraw\", [])\r\n      let res = await PoolContract[\"withdraw()\"]({ gasLimit: gasLimit });\r\n      console.log(\"withdraw\", res)\r\n      if (res && res.hash) {\r\n        Emitter.emit(EVENT_TRANS_BEGIN, {\r\n          title: title, content: connect, hash: res.hash\r\n        })\r\n      } else {\r\n        return false\r\n      }\r\n      const receipt = await res.wait()\r\n      console.log(\"receipt\", receipt)\r\n      if (receipt) {\r\n        console.log(\"receipt\", receipt)\r\n        let index = type === \"add\" ? 0 : 1\r\n        afterTransaction && afterTransaction(index)\r\n        if (receipt && receipt.transactionHash) {\r\n          const hash = receipt.transactionHash\r\n          if (receipt.status) {\r\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: true, hash: hash, error: \"error\" } })\r\n            return true\r\n          } else {\r\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: false.success, hash: hash, error: \"error\" } })\r\n            return false\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n\r\n  }, [PoolContract, type])\r\n\r\n  useEffect(() => {\r\n    if (isApproveList.length) {\r\n      let id = isApproveList.find(item => !item.isApproved)\r\n      if (id) {\r\n        let text = `${lang[\"approve\"]} ${id.id}`\r\n        setApproveBtnText(text)\r\n      } else {\r\n        setIsApproved(true)\r\n      }\r\n    }\r\n  }, [isApproveList])\r\n\r\n  useEffect(() => {\r\n    if (NFTContract && tokenIdList && tokenIdList.length && type === 'add') {\r\n      isApprove()\r\n    }\r\n  }, [tokenIdList, NFTContract, type])\r\n\r\n  useEffect(() => {\r\n    setDisabled(!tokenIdList.length)\r\n    setIsApproved(!tokenIdList.length)\r\n    if (type === \"remove\") {\r\n      setIsApproved(true)\r\n    }\r\n  }, [tokenIdList, type])\r\n  return (\r\n    <div className='operate-liquidity-lp operate-liquidity'>\r\n      {\r\n        (tokenIdList && tokenIdList.length) ?\r\n          <div className='add-remove-nft-box'>\r\n            <div className='unstaked-nft'>\r\n              Your {type === \"add\" ? \"unstaked\" : \"staked\"} DERI/ETH LP NFTs\r\n            </div>\r\n            <div className='tokenIdList'>\r\n              {tokenIdList && tokenIdList.map((item, index) => {\r\n                return (\r\n                  <div className='tokenId-box' key=\"index\">\r\n                    <div className='color-box' style={{ backgroundColor: colors[index] }}></div>\r\n                    <div className='tokenId-text'>{item}</div>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n          :\r\n          <div className='no-nft-box'>\r\n            <img src={noNFT} alt=\"\" />\r\n            <div>\r\n              {type === \"add\" ? \"it seems you did not have DERI-ETH LP NFT in your wallet\" : \"it seems you did not stake any  DERI-ETH LP NFT\"}\r\n            </div>\r\n          </div>\r\n      }\r\n\r\n      <div className='add-remove-btn'>\r\n        {!isApproved ? <Button width=\"331\" fontSize='18' disabled={disabled} label={approveBtnText} type={PRIMARY} onClick={clickApprove} /> : <Button width=\"331\" fontSize='18' disabled={disabled} label={type === \"add\" ? lang[\"add-liquidity\"] : lang[\"remove-liquidity\"]} type={PRIMARY} onClick={type === \"add\" ? addLiquidity : removeLiquidity} />}\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\nexport default inject('wallet', 'poolManager')(observer(LpDetail))","import { Contract } from '@ethersproject/contracts'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { BigNumber } from 'ethers'\r\nimport { useMemo } from 'react'\r\n\r\nexport default function useContractCall(contract: Contract): (\r\n  method: string,\r\n  params: Array<any>,\r\n  options?: { value?: BigNumber; gasLimit?: BigNumber }) => Promise<TransactionResponse> {\r\n\r\n  return useMemo(() => {\r\n    return async (\r\n      method: string,\r\n      params: Array<any>,\r\n      options?: { value?: BigNumber; gasLimit?: BigNumber }\r\n    ) => {\r\n      return contract[method](...params, options)\r\n    }\r\n  }, [contract])\r\n}\r\n"],"sourceRoot":""}