{"version":3,"sources":["utils/DeriNumberFormat.js","components/Input/Input.js","pages/Bridge/Spinner.js","pages/Bridge/img/stage-one.svg","pages/Bridge/img/stage-two.svg","pages/Bridge/img/stage-three.svg","pages/Bridge/img/succeed.svg","pages/Bridge/img/faild.svg","pages/Bridge/Operate.js","pages/Bridge/img/arrow-left.svg","pages/Bridge/img/disabled-down.svg","pages/Bridge/Bridge.js"],"names":["Wrapper","styled","NumberFormat","props","width","LoadLine","span","test","height","DeriNumberFormat","useState","className","renderablity","setRenderablity","firstTime","setFirstTime","isValidate","allowZero","value","undefined","isNaN","Math","abs","renderText","replace","useEffect","closeShowLoadingEffectAfterLoaded","wallet","defaultValue","others","decimalScale","bg","toFixed","countDecimal","toNonExponential","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","clearTimeout","suffix","div","inputWidth","inputHeight","unitPadding","Input","unit","unitTip","max","step","onChange","styles","disableNegtive","focus","placeholder","minTradeVolume","decimal","readOnly","disabled","onBlur","onFocus","inputRef","useRef","current","setCustomValidity","style","type","onKeyPress","evt","which","preventDefault","ref","e","regStr","reg","RegExp","target","gt","integerValue","filter","substring","indexOf","tip","text","Spinner","class","Operate","lang","amount","balance","initialize","isClaim","setSending","sending","setAmount","setIsClaim","isWalletConnected","config","useConfig","alert","useAlert","history","useHistory","isApprove","setIsApprove","isValid","setIsValid","isFaild","setIsFaild","bridgeState","setBridgeState","claimState","setClaimState","isClickClaim","setIsClickClaim","Button","PRIMARY","fontSize","label","actionElement","setActionElement","connect","valid","isConnected","apiProxy","request","detail","account","res","switchNetwork","toChainId","send","error","isFromConnected","isNetwork","from_chainId","netWork","stageOne","chainId","to_chainId","includeResponse","success","stageTwo","setInterval","claim","isToConnected","reset","push","approve","loadApprove","result","isUnlocked","stageThree","element","onClick","alt","src","succeed","toLowerCase","from_network","to_network","FaildLogo","obj","img","ETH","BSC","HECO","inject","observer","setBalance","isdev","DeriEnv","get","netWork_text","id","fromList","setFromList","toList","setToList","setInitialize","dropdownList_from","setDropdownList_from","dropdownList_to","setDropdownList_to","From_img","setFrom_img","To_img","setTo_img","selectListClassFrom","classNames","selectListClassTo","setIsWalletConnected","getValid","fromChainId","toString","getBalance","to_arr","from_one","p","from_two","from_three","disabledDown","up","down","map","item","index","Init","JSON","parse","stringify","select_from","arrow","select_to","deriLogo","rel","href"],"mappings":"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","file":"static/js/23.009ed096.chunk.js","sourcesContent":["import React,{useState,useEffect,useRef} from 'react'\nimport ReactDOM from 'react-dom'\nimport NumberFormat from 'react-number-format'\nimport { inject, observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport { toNonExponential,countDecimal } from './utils';\nimport { bg } from '../lib/web3js';\nconst Wrapper = styled(NumberFormat)`\n  width : ${props => props.width}px;\n`\nconst LoadLine = styled.span`\n  width : ${props => /px$/.test(props.width) ? props.width : `${props.width}px`};\n  height : ${props => /px$/.test(props.height) ? props.height : `${props.height}px`};\n`\nfunction DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\n  const [firstTime, setFirstTime] = useState(true)\n  const isValidate = () => {\n    const {allowZero} = props \n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== ''  && !isNaN(props.value) && props.value !== 'NaN') \n          || ((Math.abs(props.value)) === 0 && allowZero === true )\n  }\n  const renderText = value => value && value.replace(/\\.$/,'')\n\n  useEffect(() => {\n    const {allowZero,wallet,closeShowLoadingEffectAfterLoaded,defaultValue = '--',...others} = props \n\n    if(isValidate()) {\n      //如果精度截取之后为0，则动态获取精度，取到不为0为止\n      if(others.decimalScale > 0 && others.value && /\\d+\\.0*[1-9]+/.test(others.value) && !allowZero && (+bg(others.value).toFixed((+others.decimalScale || 2))) === 0){\n        others.decimalScale = countDecimal(Math.abs(others.value)) + 2\n      } \n\n      if(others.decimalScale === -1 || ((+others.value) === 0 && allowZero)){\n        delete others.decimalScale\n      }\n\n      //科学计数法\n      others.value = /e(\\+|=)?/.test(others.value) ? toNonExponential(others.value) : ''+others.value\n      if(others.value && /\\d+.9{6}/.test(others.value)){\n        others.value = (+others.value).toFixed(5)\n      }\n      setRenderablity(<Wrapper {...others}  renderText={renderText}\n      displayType = 'text'  fixedDecimalScale={true} thousandSeparator={true}/>)\n    } else if(firstTime){\n      const {width,height} = props\n      setRenderablity(<LoadLine className='loading-line' width={width} height={height}></LoadLine>)\n      if(closeShowLoadingEffectAfterLoaded){\n        setFirstTime(false)\n      }\n    } \n    const timeout = window.setTimeout(() => {\n      // && wallet && (!wallet.isConnected() || !wallet.supportChain)\n      if(!isValidate()){\n        setRenderablity(defaultValue)\n      }\n    },defaultValue === others.value ? 0 : 60000)\n    return () => {\n      clearTimeout(timeout)\n    };\n  }, [props.value,props.decimalScale,props.suffix]);\n\n  return renderablity;\n}\nexport default DeriNumberFormat\n// export default inject('wallet')(observer(DeriNumberFormat))","import { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { bg } from '../../lib/web3js';\nimport UnderlineText from '../UnderlineText/UnderlineText';\n\nconst Wrapper = styled.div`\ndisplay : flex;\nfont-size : 14px;\nalign-items : center;\nbackground: rgba(85, 119, 253, 0.1);\nborder-radius: 4px;\njustify-content: space-between;\ninput {\n  background: transparent;\n  border-radius: 4px;\n  // min-width: 240px;\n  border: 0;\n  width : ${props => props.inputWidth};\n  height: ${props => props.inputHeight};\n  color : #E0ECFF;\n  font-size : 18px;\n  padding-left: 16px;\n}\ninput:focus {\n  outline: none;\n}\n.unit {\n  margin-right: ${props => props.unitPadding};\n}\n`\nexport default function Input({value,unit,unitTip,max,step,onChange,styles = {},disableNegtive = true ,focus,placeholder='',unitPadding = '24px',minTradeVolume,decimal = 2,readOnly,inputWidth = '50%',inputHeight='56px',className,disabled = false,onBlur,onFocus}){\n  const inputRef = useRef(null);\n  const change = e => {\n    const regStr = `\\\\d+\\\\.\\\\d{0,${decimal}}$`\n    const reg = new RegExp(regStr)\n    const { value } = e.target\n    if(max && bg(value).gt(max)){    \n      onChange && onChange(max)\n    } else if(disableNegtive && (value < 0 || isNaN(value))) {\n      onChange && onChange('')\n    } else if(value){\n      if(minTradeVolume >= 1) {\n        if(value / minTradeVolume >=1) {\n          onChange && onChange(bg(value).div(minTradeVolume).integerValue() * minTradeVolume) \n        } else {\n          const validValue = value * minTradeVolume\n          onChange && onChange(validValue) \n        }\n      } else if(/\\d+\\./.test(value) && !reg.test(value)){\n        const filter = value.substring(0,value.indexOf('.') + 1 + decimal)\n        onChange && onChange(filter)\n      } else {\n        onChange && onChange(value)\n      }\n    } else {\n      onChange && onChange(value)\n    }\n  }\n\n  const onKeyPress = evt => {\n    if (evt.which !== 46 && evt.which !== 8 && evt.which !== 0 && (evt.which < 48 || evt.which > 57)) {\n        evt.preventDefault();\n    }\n  }\n\n  useEffect(()=>{\n    inputRef.current.setCustomValidity('')\n    if(inputRef.current && focus){\n      inputRef.current.focus();\n    }\n  },[focus])\n\n\n  return (\n    <Wrapper  unitPadding={unitPadding} inputWidth={inputWidth} inputHeight={inputHeight} className={className} style={{...styles}}>\n      <input placeholder={placeholder} type='number' onKeyPress={onKeyPress} onBlur={onBlur} onFocus={onFocus} disabled = {disabled} value={value} step = {step} ref={inputRef} onChange={change} readOnly={readOnly}/>\n      <div className='unit'>{unitTip ? <UnderlineText tip={unitTip} text={unit}/> : unit}</div>\n    </Wrapper>    \n  )\n}","import './spinner.less'\nexport default function Spinner() {\n  return (\n    <div class=\"sleepContentView\">\n      <div class=\"circle\">\n      </div>\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/stage-one.9bfaa393.svg\";","export default __webpack_public_path__ + \"static/media/stage-two.1ce521f2.svg\";","export default __webpack_public_path__ + \"static/media/stage-three.507b43c5.svg\";","export default __webpack_public_path__ + \"static/media/succeed.1057d4b2.svg\";","export default __webpack_public_path__ + \"static/media/faild.831be6f1.svg\";","import { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport Button from '../../components/Button/Button'\nimport { PRIMARY } from '../../utils/Constants';\nimport useConfig from '../../hooks/useConfig'\nimport { useAlert } from 'react-alert'\nimport Spinner from './Spinner'\nimport BSC from '../../assets/img/bsc-logo.svg';\nimport ETH from '../../assets/img/ethereum.svg'\nimport HECO from '../../assets/img/heco.svg'\nimport stageOne from './img/stage-one.svg'\nimport stageTwo from './img/stage-two.svg'\nimport stageThree from './img/stage-three.svg'\nimport apiProxy from '../../model/ApiProxy';\nimport succeed from './img/succeed.svg'\nimport FaildLogo from './img/faild.svg'\nexport default function Operate({ lang, wallet, amount, balance, initialize, isClaim, setSending, sending, setAmount, setIsClaim, isWalletConnected }) {\n  const config = useConfig();\n  const alert = useAlert();\n  const history = useHistory();\n  const [isApprove, setIsApprove] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n  const [isFaild,setIsFaild] = useState(false)\n  const [bridgeState, setBridgeState] = useState({});\n  const [claimState, setClaimState] = useState({});\n  const [isClickClaim, setIsClickClaim] = useState(false);\n  const [actionElement, setActionElement] = useState(<Button type={PRIMARY} className='button-bridge' fontSize='18' label={lang['approve']} ></Button>);\n  const connect = () => {\n    wallet.connect()\n  }\n  const valid = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\n      if (res.valid) {\n        wallet.switchNetwork(config[res.toChainId])\n        setIsClaim(true)\n\n      }\n      setIsValid(res.valid)\n    }\n  }\n  const send = async () => {\n    if (amount === '' || amount === 0) {\n      alert.error(lang['amount-must-be-greater-than-zero'])\n      return;\n    }\n    if (+amount > balance) {\n      alert.error(lang['there-is-not-enough-amount'])\n      return;\n    }\n    if (!isWalletConnected.isFromConnected) {\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.from_chainId, lang).netWork} ${lang['send-finished-two']}`)\n      return;\n    }\n    setSending(true)\n    setIsFaild(false)\n    setBridgeState({\n      stageOne: false\n    })\n    let res = await apiProxy.request('freeze', [wallet.detail.chainId, wallet.detail.account, initialize.to_chainId, amount], { includeResponse: true })\n    if (res.success) {\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\n      setBridgeState({\n        stageOne: true,\n        stageTwo: false\n      })\n      window.setInterval(() => {\n        valid()\n      }, 3000)\n    } else {\n      setIsFaild(true)\n      setSending(false)\n    }\n  }\n  const claim = async () => {\n    if (!isWalletConnected.isToConnected) {\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.to_chainId, lang).netWork} ${lang['send-finished-two']}`)\n      return;\n    }\n    setIsClickClaim(true)\n    setIsFaild(false)\n    setClaimState({\n      stageOne: false,\n    })\n    let res = await apiProxy.request('mintDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\n    if (res.success) {\n      setClaimState({\n        stageOne: true,\n        stageTwo: false,\n      })\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\n      window.setInterval(() => {\n        valid()\n      }, 3000)\n    } else {\n      setIsClickClaim(false)\n      setIsFaild(true)\n    }\n  }\n  const reset = ()=>{\n    history.push('/bridge')\n  }\n  const approve = async () => {\n    const res = await apiProxy.request('unlockDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\n    if (res.success) {\n      setIsApprove(true);\n      loadApprove();\n    } else {\n      setIsApprove(false)\n      alert.error(lang['approve-faild'])\n    }\n  }\n  const loadApprove = async () => {\n    if (wallet.isConnected()) {\n      const result = await apiProxy.request('isDeriUnlocked', [wallet.detail.chainId, wallet.detail.account])\n      setIsApprove(result.isUnlocked);\n    }\n  }\n  useEffect(() => {\n    if (wallet.isConnected()) {\n      loadApprove();\n      valid()\n    }\n  }, [wallet.detail, initialize]);\n  useEffect(() => {\n    if (isValid) {\n      setBridgeState({\n        stageOne: true,\n        stageTwo: true,\n        stageThree: true,\n      })\n    } else if (isClickClaim) {\n      setClaimState({\n        stageOne: true,\n        stageTwo: true,\n        stageThree: true,\n      })\n      setSending(false)\n      setAmount('')\n    } else {\n    }\n  }, [isValid, initialize]);\n  useEffect(() => {\n    let element;\n    if (wallet.isConnected()) {\n      if (isValid) {\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['claim']} onClick={claim} />\n      } else if (!isApprove) {\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['approve']} onClick={approve} />\n      } else if(isClickClaim){\n        element = <button className='complete' onClick={reset}> <img alt='' src={succeed}/> {lang['complete']} </button>\n      }else {\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['send']} onClick={send} ></Button>\n      }\n    } else {\n      element = <Button type={PRIMARY} className='button-bridge' label={lang['connect-wallet']} onClick={connect} ></Button>\n    }\n    setActionElement(element)\n  }, [isValid, wallet.detail, isApprove, amount, initialize, isWalletConnected,isClickClaim])\n  return (\n    <div className='operate'>\n      <div className='from-to-title'>\n        {lang['bridge']} {amount}  DERI {lang['from'].toLowerCase()} {initialize.from_network} {lang['to'].toLowerCase()} {initialize.to_network}\n      </div>\n      <div className='btn'>\n        {actionElement}\n      </div>\n      <div className='hint'>\n        {!isClaim && <div className='sending'>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\n              <div className='stage-text'>{lang['sending-deri-to-wormhole']} </div>\n            </div>\n            <div className='ok-pending'>\n              {sending && <>\n                {bridgeState.stageOne ? <div className='succeed'>\n                  <img alt='' src={succeed} />\n                </div> : <div className='pending'>\n                    <Spinner />\n                  </div>}\n              </>}\n              {!sending && !isFaild && <div className='staic'></div>}\n              {isFaild && <div><img src={FaildLogo} alt='' /></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sign']}</div>\n            </div>\n            <div className='ok-pending'>\n              {sending && <>\n                {bridgeState.stageOne && <>\n                  {bridgeState.stageTwo ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n              </>}\n              {(!sending || !bridgeState.stageOne) && <div className='staic'></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\n              <div className='stage-text'>{lang['bridge-signed']}</div>\n            </div>\n            <div className='ok-pending'>\n              {sending && <>\n                {bridgeState.stageOne && bridgeState.stageTwo && <>\n                  {bridgeState.stageThree ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n\n              </>}\n              {(!sending || !bridgeState.stageTwo) && <div className='staic'></div>}\n            </div>\n          </div>\n        </div>}\n        {isClaim && <div className='claiming'>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\n              <div className='stage-text'>{lang['claim-deri-ing']}</div>\n            </div>\n            <div className='ok-pending'>\n              {isClickClaim && <>\n                {claimState.stageOne ? <div className='succeed'>\n                  <img alt='' src={succeed} />\n                </div> : <div className='pending'>\n                    <Spinner />\n                  </div>}\n              </>}\n              {!isClickClaim && !isFaild && <div className='staic'></div>}\n              {isFaild && <div><img src={FaildLogo} alt='' /></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sync']} </div>\n            </div>\n            <div className='ok-pending'>\n              {isClickClaim && <>\n                {claimState.stageOne && <>\n                  {claimState.stageTwo ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n              </>}\n              {(!isClickClaim || !claimState.stageOne) && <div className='staic'></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\n              <div className='stage-text'>{lang['finished']}</div>\n            </div>\n            <div className='ok-pending'>\n              {isClickClaim && <>\n                {claimState.stageOne && claimState.stageTwo && <>\n                  {claimState.stageThree ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n\n              </>}\n              {(!isClickClaim || !claimState.stageTwo) && <div className='staic'></div>}\n            </div>\n          </div>\n        </div>}\n      </div>\n    </div>\n  )\n}\nfunction isNetwork(chainId, lang) {\n  chainId = +chainId\n  let obj = {}\n  switch (chainId) {\n    case 1:\n      obj.netWork = lang[\"ethereum\"];\n      obj.chainId = 1;\n      obj.img = ETH;\n      break;\n    case 56:\n      obj.netWork = lang[\"bsc\"];\n      obj.chainId = 56;\n      obj.img = BSC;\n      break;\n    case 128:\n      obj.netWork = lang[\"heco\"];\n      obj.chainId = 128;\n      obj.img = HECO;\n      break;\n    case 97:\n      obj.netWork = lang[\"bsc-testnet\"];\n      obj.chainId = 97;\n      obj.img = BSC;\n      break;\n    case 3:\n      obj.netWork = lang[\"ropsten\"];\n      obj.chainId = 3;\n      obj.img = ETH;\n      break;\n    case 256:\n      obj.netWork = lang[\"heco-testnet\"];\n      obj.chainId = 256;\n      obj.img = HECO;\n      break;\n    default:\n      break;\n  }\n  return obj;\n}","export default __webpack_public_path__ + \"static/media/arrow-left.f14b02ac.svg\";","export default __webpack_public_path__ + \"static/media/disabled-down.e8dbb78e.svg\";","import React, { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react';\nimport { DeriEnv, bg } from \"../../lib/web3js/index\";\nimport Input from '../../components/Input/Input'\nimport Operate from './Operate'\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\nimport apiProxy from '../../model/ApiProxy'\nimport arrow from './img/arrow-left.svg'\nimport disabledDown from './img/disabled-down.svg'\nimport BSC from '../../assets/img/BNB.svg';\nimport ETH from '../../assets/img/ethereum.svg'\nimport deriLogo from '../../assets/img/logo.svg'\nimport HECO from '../../assets/img/heco.svg'\nimport down from '../../assets/img/arrow-down.svg'\nimport up from '../../assets/img/arrow-up.svg'\nimport classNames from 'classnames'\nimport './bridge.less'\nfunction Bridge({ wallet, lang }) {\n  const [amount, setAmount] = useState('');\n  const [balance, setBalance] = useState(0);\n  const isdev = DeriEnv.get() !== 'prod' ? true : false;\n  const netWork_text = isdev ?\n    [\n      {\n        text: lang['ropsten'],\n        id: 3,\n        img: ETH,\n      },\n      {\n        text: lang['bsc-testnet'],\n        id: 97,\n        img: BSC,\n      },\n      {\n        text: lang['heco-testnet'],\n        id: 256,\n        img: HECO,\n      }\n    ]\n    : [\n\n      {\n        text: lang['ethereum'],\n        id: 1,\n        img: ETH,\n      },\n      {\n        text: lang['bsc'],\n        id: 56,\n        img: BSC,\n      },\n      {\n        text: lang['heco'],\n        id: 128,\n        img: HECO,\n      }\n\n    ]\n\n  const [fromList, setFromList] = useState(netWork_text)\n  const [toList, setToList] = useState(netWork_text)\n  const [sending, setSending] = useState(false);\n  const [initialize, setInitialize] = useState(isdev ?\n    {\n      from_chainId: 97,\n      from_network: lang['bsc-testnet'],\n      to_chainId: 3,\n      to_network: lang['ropsten']\n    } : {\n      from_chainId: 1,\n      from_network: lang['ethereum'],\n      to_chainId: 56,\n      to_network: lang['bsc']\n    });\n  const [isClaim, setIsClaim] = useState(false);\n  const [dropdownList_from, setDropdownList_from] = useState(false);\n  const [dropdownList_to, setDropdownList_to] = useState(false);\n  const [From_img, setFrom_img] = useState(isNetwork(initialize.from_chainId, lang).img);\n  const [To_img, setTo_img] = useState(isNetwork(initialize.to_chainId, lang).img);\n  const selectListClassFrom = classNames('from-network-list', { 'show': dropdownList_from })\n  const selectListClassTo = classNames('to-network-list', { 'show': dropdownList_to })\n  const [isWalletConnected, setIsWalletConnected] = useState(\n    {\n      isFromConnected: false,\n      isToConnected: false\n    }\n  );\n  const isConnected = () => {\n    let isFromConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.from_chainId ? true : false) : false;\n    let isToConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.to_chainId ? true : false) : false;\n    let obj = {\n      isFromConnected: isFromConnected,\n      isToConnected: isToConnected\n    }\n    setIsWalletConnected(obj)\n  }\n\n  const showListFrom = () => {\n    if (sending) {\n      return;\n    }\n    setDropdownList_from(!dropdownList_from)\n  }\n  const showListTo = () => {\n    if (sending) {\n      return;\n    }\n    setDropdownList_to(!dropdownList_to)\n  }\n\n  const getValid = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\n      if (res.valid) {\n        setInitialize({\n          from_chainId: res.fromChainId,\n          from_network: isNetwork(res.fromChainId, lang).netWork,\n          to_chainId: res.toChainId,\n          to_network: isNetwork(res.toChainId, lang).netWork,\n        })\n        setFrom_img(isNetwork(res.fromChainId, lang).img)\n        setTo_img(isNetwork(res.toChainId, lang).img)\n        setAmount(bg(res.amount, -18).toString())\n        setSending(res.valid)\n      }\n    }\n  }\n\n  const getBalance = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getDeriBalance', [wallet.detail.chainId, wallet.detail.account])\n      setBalance(res)\n    }\n  }\n\n  useEffect(() => {\n    getBalance()\n  }, [wallet.detail, initialize]);\n\n  useEffect(() => {\n    getValid()\n  }, [wallet.detail])\n\n  const select_from = obj => {\n    let Init = JSON.parse(JSON.stringify(initialize));\n    if (Init.to_chainId === obj.id) {\n      Init.from_chainId = initialize.to_chainId;\n      Init.from_network = initialize.to_network;\n      Init.to_chainId = initialize.from_chainId;\n      Init.to_network = initialize.from_network;\n    } else {\n      Init.from_chainId = obj.id;\n      Init.from_network = obj.text;\n    }\n    setInitialize(Init)\n    setDropdownList_from(!dropdownList_from)\n  }\n  const select_to = obj => {\n    let Init = JSON.parse(JSON.stringify(initialize));\n    if (Init.from_chainId === obj.id) {\n      Init.from_chainId = initialize.to_chainId;\n      Init.from_network = initialize.to_network;\n      Init.to_chainId = initialize.from_chainId;\n      Init.to_network = initialize.from_network;\n    } else {\n      Init.to_chainId = obj.id;\n      Init.to_network = obj.text;\n    }\n    setInitialize(Init)\n    setDropdownList_to(!dropdownList_to)\n\n  }\n\n  useEffect(() => {\n    let from_arr;\n    let to_arr;\n    let from_one = netWork_text.filter(p => p.id === +initialize.from_chainId)[0]\n    let from_two = netWork_text.filter(p => p.id !== +initialize.from_chainId)[0]\n    let from_three = netWork_text.filter(p => p.id !== +initialize.from_chainId)[1]\n    let to_one = netWork_text.filter(p => p.id === +initialize.to_chainId)[0]\n    let to_two = netWork_text.filter(p => p.id !== +initialize.to_chainId)[0]\n    let to_three = netWork_text.filter(p => p.id !== +initialize.to_chainId)[1]\n    from_arr = [from_one, from_two, from_three]\n    to_arr = [to_one, to_two, to_three]\n    setFromList(from_arr)\n    setToList(to_arr)\n    setFrom_img(isNetwork(initialize.from_chainId, lang).img)\n    setTo_img(isNetwork(initialize.to_chainId, lang).img)\n    isConnected()\n\n  }, [initialize, wallet.detail])\n\n  const getAmount = (value) => {\n    setAmount(value)\n  }\n\n  return (\n    <div className='bridge-big-box'>\n      <div className='bridge-box'>\n        <div className='bridge-title'>\n          <div className='title'>\n            {lang['bridge']}\n          </div>\n          <div className='birdge-des'>\n            {lang['bridge-des']}\n          </div>\n        </div>\n        <div className='bridge-info'>\n          <div className='select-network-box'>\n            <div className='select-network-title'>\n              {lang['select-networks']}\n            </div>\n            <div className='select-network-from-to'>\n              <div className='from-network'>\n                <div className='from-title'>\n                  {lang['from']}\n                </div>\n                <div className='from-dropdown-list'>\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListFrom() }}>\n                    <div className='network-logo-connected'>\n                      <img src={From_img} alt='' />\n                      <span>{initialize.from_network}</span>\n                      <div className={isClaim ? 'connected-hide' : !isWalletConnected.isFromConnected ? 'is-connected' : 'connected'}>\n                        {(!isClaim && isWalletConnected.isFromConnected) ? lang['connected'] : lang['unconnected']}\n                      </div>\n                    </div>\n                    <img className='down-icon' src={sending ? disabledDown : dropdownList_from ? up : down} alt='' />\n                  </div>\n                  <ul className={selectListClassFrom}>\n                    {fromList.map((item, index) => {\n                      return (\n                        <>\n                          {initialize.from_network !== item.text ? <li key={index} className='wallet-li' onClick={() => select_from(item)}>\n                            <div className='li-logo-network'>\n                              <img alt='' src={item.img} /> <span> {item.text} </span>\n                            </div>\n                          </li> : ''}\n                        </>\n                      )\n                    })}\n                  </ul>\n                </div>\n              </div>\n              <div className='arrow'>\n                <img src={arrow} alt='' />\n              </div>\n              <div className='to-network'>\n                <div className='to-title'>\n                  {lang['to']}\n                </div>\n                <div className='to-dropdown-list'>\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListTo() }}>\n                    <div className='network-logo-connected'>\n                      <img src={To_img} alt='' />\n                      <span>{initialize.to_network}</span>\n                      <div className={!isClaim ? 'connected-hide' : !isWalletConnected.isToConnected ? 'is-connected' : 'connected'}>\n                        {(isClaim && isWalletConnected.isToConnected) ? lang['connected'] : lang['unconnected']}\n                      </div>\n                    </div>\n                    <img className='down-icon' src={sending ? disabledDown : dropdownList_to ? up : down} alt='' />\n                  </div>\n                  <ul className={selectListClassTo}>\n                    {toList.map((item, index) => {\n                      return (\n                        <>\n                          {initialize.to_network !== item.text ? <li key={index} className='wallet-li' onClick={() => select_to(item)}>\n                            <div className='li-logo-network'>\n                              <img alt='' src={item.img} /> <span> {item.text} </span>\n                            </div>\n                          </li> : ''}\n                        </>\n                      )\n                    })}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='set-amount'>\n            <div className='set-amount-title'>\n              {lang['set-amount']}\n            </div>\n            <div className='set-amount-box'>\n              <div className='input-deri'>\n                <Input placeholder='0' value={amount} onChange={getAmount} disabled={sending} className='input-box' />\n                <span><img alt='' src={deriLogo} className='amount-img' /> DERI</span>\n              </div>\n              <div className='total-deri'>\n                {lang['total-amount']} <DeriNumberFormat value={balance} decimalScale={4} thousandSeparator={true} /> DERI\n              </div>\n            </div>\n          </div>\n          <div className='bridge-operate-hint'>\n            <Operate lang={lang} sending={sending} wallet={wallet} balance={balance} isWalletConnected={isWalletConnected} amount={amount} isClaim={isClaim} initialize={initialize} setIsClaim={setIsClaim} setSending={setSending} setAmount={setAmount} />\n          </div>\n          <div className='bridge-to-polygon'>\n            <div>\n              <div className='birdge-to-polygon-title'>\n                {lang['bridge-to-polygon']}\n                <span className='polygon-title'>\n                  <a rel='noreferrer' target='_blank' href='https://bridge.arbitrum.io/'> Arbitrum</a>\n                </span> or\n                <span className='polygon-title'>\n                  <a rel='noreferrer' target='_blank' href='https://wallet.matic.network/bridge'> Polygon</a>\n                </span>\n\n              </div>\n              <div className='bridge-to-polygon-des'>\n                {lang['bridge-to-polygon-des']}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nfunction isNetwork(chainId, lang) {\n  chainId = +chainId\n  let obj = {}\n  switch (chainId) {\n    case 1:\n      obj.netWork = lang[\"ethereum\"];\n      obj.chainId = 1;\n      obj.img = ETH;\n      break;\n    case 56:\n      obj.netWork = lang[\"bsc\"];\n      obj.chainId = 56;\n      obj.img = BSC;\n      break;\n    case 128:\n      obj.netWork = lang[\"heco\"];\n      obj.chainId = 128;\n      obj.img = HECO;\n      break;\n    case 97:\n      obj.netWork = lang[\"bsc-testnet\"];\n      obj.chainId = 97;\n      obj.img = BSC;\n      break;\n    case 3:\n      obj.netWork = lang[\"ropsten\"];\n      obj.chainId = 3;\n      obj.img = ETH;\n      break;\n    case 256:\n      obj.netWork = lang[\"heco-testnet\"];\n      obj.chainId = 256;\n      obj.img = HECO;\n      break;\n    default:\n      break;\n  }\n  return obj;\n}\nexport default inject('wallet')(observer(Bridge))"],"sourceRoot":""}