{"version":3,"sources":["utils/DeriNumberFormat.js","utils/graph_api.js","pages/Leaderboard/Leaderboard.tsx"],"names":["Wrapper","styled","NumberFormat","props","width","LoadLine","span","test","height","DeriNumberFormat","useState","className","renderablity","setRenderablity","firstTime","setFirstTime","isValidate","allowZero","value","undefined","isNaN","Math","abs","renderText","replace","useEffect","closeShowLoadingEffectAfterLoaded","wallet","defaultValue","others","decimalScale","bg","toFixed","countDecimal","toNonExponential","String","indexOf","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","clearTimeout","suffix","graphQLClient","GraphQLClient","require","graph_request_test","mutation","variables","request","inject","observer","rankingsList","setRankingsList","accountDays","setAccountDays","listDays","setListDays","accountInfo","setAccountInfo","account","useWallet","loadList","useCallback","a","query","gql","timestamp","date","Date","now","getTime","timeDay","chainId","fromTimestamp","parseInt","data","tradePnl","length","list","slice","getAccountInfo","tradeFee","pnl","notional","classnames","active","onClick","prefix","map","item","index","Icon","token","secondary","formatAddress","up","down"],"mappings":"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","file":"static/js/33.6098a994.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport NumberFormat from 'react-number-format'\r\nimport { inject, observer } from 'mobx-react';\r\nimport styled from 'styled-components';\r\nimport { toNonExponential, countDecimal } from './utils';\r\nimport { bg } from '../lib/web3js';\r\nconst Wrapper = styled(NumberFormat)`\r\n  width : ${props => props.width}px;\r\n`\r\nconst LoadLine = styled.span`\r\n  width : ${props => /px$/.test(props.width) ? props.width : `${props.width}px`};\r\n  height : ${props => /px$/.test(props.height) ? props.height : `${props.height}px`};\r\n`\r\nfunction DeriNumberFormat(props) {\r\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\r\n  const [firstTime, setFirstTime] = useState(true)\r\n  const isValidate = () => {\r\n    const { allowZero } = props\r\n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && !isNaN(props.value) && props.value !== 'NaN')\r\n      || ((Math.abs(props.value)) === 0 && allowZero === true)\r\n  }\r\n  const renderText = value => value && value.replace(/\\.$/, '')\r\n\r\n  useEffect(() => {\r\n    const { allowZero, wallet, closeShowLoadingEffectAfterLoaded, defaultValue = '--', ...others } = props\r\n\r\n    if (isValidate()) {\r\n      //如果精度截取之后为0，则动态获取精度，取到不为0为止\r\n      if (others.decimalScale > 0 && others.value && /\\d+\\.0*[1-9]+/.test(others.value) && !allowZero && (+bg(others.value).toFixed((+others.decimalScale || 2))) === 0) {\r\n        others.decimalScale = countDecimal(Math.abs(others.value)) + 2\r\n      }\r\n\r\n      if (others.decimalScale === -1 || ((+others.value) === 0 && allowZero)) {\r\n        delete others.decimalScale\r\n      }\r\n\r\n      //科学计数法\r\n      others.value = /e(\\+|=)?/.test(others.value) ? toNonExponential(others.value) : '' + others.value\r\n      if (others.value && /\\d+.9{6}/.test(others.value)) {\r\n        others.value = (+others.value).toFixed(5)\r\n      }\r\n      if (others.value && String(others.value).indexOf(\"0000000000000\") >0) {\r\n        setRenderablity(\"1E-18\")\r\n      } else {\r\n        setRenderablity(<Wrapper {...others} renderText={renderText}\r\n          displayType='text' fixedDecimalScale={true} thousandSeparator={true} />)\r\n      }\r\n\r\n    } else if (firstTime) {\r\n      const { width, height } = props\r\n      setRenderablity(<LoadLine className='loading-line' width={width} height={height}></LoadLine>)\r\n      if (closeShowLoadingEffectAfterLoaded) {\r\n        setFirstTime(false)\r\n      }\r\n    }\r\n    const timeout = window.setTimeout(() => {\r\n      // && wallet && (!wallet.isConnected() || !wallet.supportChain)\r\n      if (!isValidate()) {\r\n        setRenderablity(defaultValue)\r\n      }\r\n    }, defaultValue === others.value ? 0 : 60000)\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    };\r\n  }, [props.value, props.decimalScale, props.suffix]);\r\n\r\n  return renderablity;\r\n}\r\nexport default DeriNumberFormat\r\n// export default inject('wallet')(observer(DeriNumberFormat))","const {GraphQLClient } = require('graphql-request')\r\nconst graphQLClient = new GraphQLClient(\"https://graph.deri.io/graphql\", {})\r\nexport function graph_request_test(mutation,variables) {\r\n    return graphQLClient.request(mutation,variables)\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\";\r\nimport \"./leaderboard.less\";\r\nimport Icon from \"../../components/Icon/Icon\";\r\nimport { gql } from \"graphql-request\";\r\nimport { graph_request_test } from \"../../utils/graph_api\";\r\nimport { formatAddress } from \"../../utils/utils\";\r\nimport { useCallback } from \"react\";\r\nimport { useWallet } from \"use-wallet\";\r\n\r\nfunction Leaderboard() {\r\n  const [rankingsList, setRankingsList] = useState<any>([]);\r\n  const [accountDays, setAccountDays] = useState(30);\r\n  const [listDays, setListDays] = useState(30);\r\n  const [accountInfo, setAccountInfo] = useState<any>({});\r\n  const {  account } = useWallet();\r\n  const timeDay: number = 86400;\r\n  const loadList = useCallback(async () => {\r\n    let query = gql`\r\n      query ($chainId: Int!, $fromTimestamp: Int!) {\r\n        tradePnl(where: { chainId: $chainId, fromTimestamp: $fromTimestamp }) {\r\n          account\r\n          chainId\r\n          liquidationLoss\r\n          notional\r\n          pnl\r\n          tradeFee\r\n          tradePnl\r\n        }\r\n      }\r\n    `;\r\n    let timestamp = 0;\r\n    let date = new Date();\r\n    let now = date.getTime() / 1000;\r\n    if (listDays === 7) {\r\n      timestamp = now - timeDay * 7;\r\n    }\r\n    if (listDays === 30) {\r\n      timestamp = now - timeDay * 30;\r\n    }\r\n    let variables = { chainId: 42161, fromTimestamp: parseInt(String(timestamp)) };\r\n    let data = await graph_request_test(query, variables);\r\n    if (data.tradePnl.length) {\r\n      let list = data.tradePnl;\r\n      list = list.slice(0,50)\r\n      setRankingsList(list);\r\n    }\r\n  }, [listDays]);\r\n  const getAccountInfo = useCallback(async () => {\r\n    let query = gql`\r\n      query ($chainId: Int!, $fromTimestamp: Int!, $account: String) {\r\n        tradePnl(\r\n          where: {\r\n            account: $account\r\n            chainId: $chainId\r\n            fromTimestamp: $fromTimestamp\r\n          }\r\n        ) {\r\n          account\r\n          chainId\r\n          liquidationLoss\r\n          notional\r\n          pnl\r\n          tradeFee\r\n          tradePnl\r\n        }\r\n      }\r\n    `;\r\n    let timestamp = 0;\r\n    let date = new Date();\r\n    let now = date.getTime() / 1000;\r\n    if (accountDays === 7) {\r\n      timestamp = now - timeDay * 7;\r\n    }\r\n    if (accountDays === 30) {\r\n      timestamp = now - timeDay * 30;\r\n    }\r\n    let variables = {\r\n      account: account,\r\n      chainId: 56,\r\n      fromTimestamp: parseInt(String(timestamp)),\r\n    };\r\n    let data = await graph_request_test(query, variables);\r\n    if (data.tradePnl.length) {\r\n      let list = data.tradePnl[0];\r\n      setAccountInfo(list);\r\n    }else{\r\n      setAccountInfo({\r\n        tradeFee:0,\r\n        pnl:0,\r\n        notional:0\r\n      })\r\n    }\r\n  }, [accountDays, account]);\r\n  useEffect(() => {\r\n    loadList();\r\n  }, [listDays]);\r\n  useEffect(() => {\r\n    if (account) {\r\n      getAccountInfo();\r\n    }\r\n  }, [account, accountDays]);\r\n  return (\r\n    <div className=\"Leaderboard\">\r\n      <div className=\"Leaderboard-box\">\r\n        <div className=\"my-historical-trading\">\r\n          <div className=\"title-tab-day\">\r\n            <div className=\"title-leaderboard\">\r\n              My Historical Trading Performance\r\n            </div>\r\n            <div className=\"tab-day\">\r\n              <div\r\n                className={classnames(\"day-btn\", {\r\n                  active: accountDays === 7,\r\n                })}\r\n                onClick={() => {\r\n                  setAccountDays(7);\r\n                }}\r\n              >\r\n                7 DAYS\r\n              </div>\r\n              <div\r\n                className={classnames(\"day-btn\", {\r\n                  active: accountDays === 30,\r\n                })}\r\n                onClick={() => {\r\n                  setAccountDays(30);\r\n                }}\r\n              >\r\n                30 DAYS\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"my-info-list\">\r\n            <div className=\"info-box\">\r\n              <div className=\"info-num\">\r\n                {\" \"}\r\n                <DeriNumberFormat\r\n                  prefix=\"$ \"\r\n                  value={accountInfo.notional}\r\n                  decimalScale={2}\r\n                />\r\n              </div>\r\n              <div className=\"info-title\"> Notional </div>\r\n            </div>\r\n            <div className=\"info-box\">\r\n              <div className=\"info-num\">\r\n                <DeriNumberFormat\r\n                  prefix=\"$ \"\r\n                  value={+accountInfo.tradeFee}\r\n                  decimalScale={2}\r\n                />\r\n              </div>\r\n              <div className=\"info-title\"> Transaction Fee </div>\r\n            </div>\r\n            <div className=\"info-box\">\r\n              <div className=\"info-num\">\r\n                {\" \"}\r\n                <DeriNumberFormat\r\n                  prefix=\"$ \"\r\n                  value={+accountInfo.pnl}\r\n                  decimalScale={2}\r\n                />\r\n              </div>\r\n              <div className=\"info-title\"> PNL </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"rankings\">\r\n          <div className=\"rankings-title-tab-day\">\r\n            <div className=\"rankings-title\">Rankings</div>\r\n            <div className=\"tab-day\">\r\n              <div\r\n                className={classnames(\"day-btn\", { active: listDays === 7 })}\r\n                onClick={() => {\r\n                  setListDays(7);\r\n                }}\r\n              >\r\n                7 DAYS\r\n              </div>\r\n              <div\r\n                className={classnames(\"day-btn\", { active: listDays === 30 })}\r\n                onClick={() => {\r\n                  setListDays(30);\r\n                }}\r\n              >\r\n                30 DAYS\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"rankings-list-title\">\r\n            <div className=\"rank\">Rank</div>\r\n            <div className=\"trade\">Trade</div>\r\n            <div className=\"notional\">Notional</div>\r\n            <div className=\"transaction-fee\">Transaction Fee</div>\r\n            <div className=\"pnl\">PNL</div>\r\n          </div>\r\n          <div className=\"rankings-list-num\">\r\n            {rankingsList.map((item, index) => {\r\n              return (\r\n                <div className=\"rankings-list-num-box\" key={index}>\r\n                  <div className=\"rank\">\r\n                    {index + 1 === 1 && (\r\n                      <Icon\r\n                        token=\"topOne\"\r\n                        width={undefined}\r\n                        height={undefined}\r\n                        secondary={undefined}\r\n                        className={undefined}\r\n                        onClick={undefined}\r\n                      />\r\n                    )}\r\n                    {index + 1 === 2 && (\r\n                      <Icon\r\n                        token=\"topTwo\"\r\n                        width={undefined}\r\n                        height={undefined}\r\n                        secondary={undefined}\r\n                        className={undefined}\r\n                        onClick={undefined}\r\n                      />\r\n                    )}\r\n                    {index + 1 === 3 && (\r\n                      <Icon\r\n                        token=\"topThree\"\r\n                        width={undefined}\r\n                        height={undefined}\r\n                        secondary={undefined}\r\n                        className={undefined}\r\n                        onClick={undefined}\r\n                      />\r\n                    )}\r\n                    {index + 1 > 3 && (\r\n                      <span className=\"top-num\">{index + 1}</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"trade\">{formatAddress(item.account)}</div>\r\n                  <div className=\"notional\">\r\n                    ${\" \"}\r\n                    <DeriNumberFormat\r\n                      value={item.notional}\r\n                      displayType=\"text\"\r\n                      decimalScale={2}\r\n                    />\r\n                  </div>\r\n                  <div className=\"transaction-fee\">\r\n                    ${\" \"}\r\n                    <DeriNumberFormat\r\n                      value={+item.tradeFee}\r\n                      displayType=\"text\"\r\n                      decimalScale={2}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className={classnames(\"pnl\", {\r\n                      up: +item.pnl > 0,\r\n                      down: +item.pnl < 0,\r\n                    })}\r\n                  >\r\n                    {+item.pnl > 0 ? \"+\" : \"\"}\r\n                    <DeriNumberFormat\r\n                      value={+item.pnl}\r\n                      displayType=\"text\"\r\n                      decimalScale={2}\r\n                      prefix=\"$ \"\r\n                      // allowZero={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default inject(\"wallet\")(observer(Leaderboard));\r\n"],"sourceRoot":""}