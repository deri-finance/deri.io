{"version":3,"sources":["components/Tab/Tab.js","components/Search/Search.js","hooks/useContractLp.ts","pages/Pool/img/deri.svg","pages/Pool/img/no-nft.svg","pages/Pool/LpDetail.js","hooks/useContractCall.ts"],"names":["Wrapper","styled","div","props","width","height","borderR","borderL","size","iconMarginRight","inactiveBgColor","borderB","activeFontColor","activeBgColor","borderT","Tab","tabSet","className","icon","borderTop","borderBottom","divider","activeIndex","arr","Object","keys","useState","selected","setSelected","styles","setStyles","setBorderT","setBorderL","setBorderB","setBorderR","setActiveFontColor","useEffect","checked","style","borderColor","fontColor","map","item","index","direction","onClick","e","select","iconWidth","iconHeight","token","inicon","isBet","content","bgColor","Search","list","onChange","searchName","placeholder","onFocus","onBlur","search","setSearch","setLength","origin","useRef","value","toLocaleUpperCase","current","length","filter","el","toUpperCase","indexOf","type","target","searchChange","src","searchLogo","alt","r","contractdescribers","useContract","name","chainId","contractAddress","wallet","useWallet","getContract","address","abi","ethereum","useMemo","provider","getProvider","networkVersion","String","Web3Provider","Contract","account","getSigner","connectUnchecked","getProviderOrSigner","pollingInterval","require","forEach","key","path","split","last","substring","chainInfo","config","DeriEnv","get","chainConfig","PairAddress","Operate","contract","lang","getLang","afterTransaction","tokenIdList","setActiveIndex","alert","NFTContract","PoolContract","disabled","setDisabled","isApproveList","setIsApproveList","isApproved","setIsApproved","approveBtnText","setApproveBtnText","NFTcontractCall","method","params","options","colors","isApprove","useCallback","getApproved","approve","console","log","obj","toLocaleLowerCase","id","push","transactionTitle","text","transactionContent","success","error","getGasLimit","gasLimit","res","hash","Emitter","emit","EVENT_TRANS_BEGIN","title","wait","receipt","transactionHash","status","EVENT_TRANS_END","context","clickApprove","find","addLiquidity","connect","baseToken","removeLiquidity","backgroundColor","noNFT","Button","fontSize","label","PRIMARY","inject","observer","poolManager","useParams","isShowInfo","setIsShowInfo","useAlert","nowToken","poolConfig","setPoolConfig","bTokenList","setBTokenList","liquidity","setLiquidity","poolDeri","setPoolDeri","useConfig","claimPending","setClaimPending","unStakedTokenIdList","setUnStakedTokenIdList","stakedTokenIdList","setStakedTokenIdList","aTimeRewardInfo","setATimeRewardInfo","bTimeRewardInfo","setBTimeRewardInfo","totalYearDeri","setTotalYearDeri","accountEthTokenValue","setAccountEthTokenValue","accountDeriToken","setAccountDeriToken","apy","setApy","networkText","DeriforPairContract","EthforPairContract","BTokenContract","PairContract","unTokenIdListRef","tokenIdListRef","getPendingReward","detail","deriNumber","BigNumber","from","_hex","toString","bTime","setTimeout","data","getSecondsPerLiquidityInsideX128","timestamp","secondsPerLiquidityInsideX128","Promise","all","aTime","getBTokenValue","positions","tickLower","tickUpper","slot0","tickCurrent","tick","amount","getAmountETHAndDeri","total_amount0","total_amount1","deri","eth","deriSum","reduce","accumulator","currentValue","ethSum","axios","eresp","ethPrice","ethValue","bg","times","toNumber","getApy","deriPath","process","fetch","resp","json","deriPrice","price","deriValue","sumValue","totalYearDeriValue","getTimeRewardInfo","rewards","secondsPerLiquidityInsideX128_a","getRewardInBetween","reward","Math","abs","totalScore","valuePerYear","getunStakedTokenIdList","getStakedTokenIdList","getLiquidity","background","load","loadDoubleMingingPool","pool","lpPools","p","symbols","symbol","join","bTokens","claimDeri","claim","balanceOf","NFTNumber","tokenId","tokenOfOwnerByIndex","deriTokenId","getPositionInfo","getUserTokenIds","DeriNumber","EthNumber","deriAmount","ethAmount","switchNetwork","isConnected","interval","window","setInterval","clearInterval","history","back","backIcon","ARBITRUM","zone","rel","href","Icon","bTokenSymbol","DeriNumberFormat","suffix","decimalScale","Spinner","firstTime","downIcon","displayType","thousandSeparator","formatAddress"],"mappings":"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","file":"static/js/22.a8b8bffa.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport React, { useState, useEffect } from 'react';\nimport Icon from '../Icon/Icon';\nconst Wrapper = styled.div`\n    cursor: pointer;\n    width:${props => props.width}px;\n    height:${props => props.height}px;\n    display:flex;\n    .tab-title{\n      position: relative;\n    }\n    .bet-new{\n      width:30px;\n      height:14px;\n      border-radius:20px;\n      font-size:10px;\n      display: flex;\n      background-color: #CD7A37;\n      color:#E0ECFF;\n      position: relative;\n      top: -6px;\n      align-items: center;\n      text-transform: capitalize;\n      justify-content: center;\n    }\n    .tab-left.inactive{\n      border-radius:0px 0px 4px 0px;\n    }\n    .tab-right.inactive{\n      border-radius:0px 0px 0px 4px;\n    }\n    .tab-left.active{\n      border-radius:0px 4px 0px 0px;\n      ${props => props.borderR};\n    }\n    .tab-right.active{\n      border-radius:4px 0px 0px 0px;\n      ${props => props.borderL};\n    }\n    .inactive,.active{\n      width:50%;\n      box-sizing: content-box;\n      font-size:${props => props.size}px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      img{\n        margin-right:${props => props.iconMarginRight}px\n      }\n    }\n    .inactive{\n      background:${props => props.inactiveBgColor};\n      ${props => props.borderB}\n    }\n    .active {\n      color: ${props => props.activeFontColor};\n      background : ${props => props.activeBgColor};\n      ${props => props.borderT};\n    }\n    .icon-tab{\n      margin-right:20px;\n      width:25px;\n      height:25px;\n    }\n  `\nexport default function Tab({ tabSet, inactiveBgColor, iconMarginRight, activeBgColor, icon, className, width = 238, height = 47, size = 16, borderTop = false, borderBottom = false, divider = false, activeIndex = 0 }) {\n  let arr = Object.keys(tabSet)\n  const [selected, setSelected] = useState(arr[activeIndex])\n  const [styles, setStyles] = useState()\n  const [borderT, setBorderT] = useState()\n  const [borderL, setBorderL] = useState()\n  const [borderB, setBorderB] = useState()\n  const [borderR, setBorderR] = useState()\n  const [activeFontColor, setActiveFontColor] = useState()\n  function select(item, e) {\n    // e.stopPropagation()\n    setSelected(item)\n  }\n  useEffect(() => {\n    const arr = Object.keys(tabSet)\n    setSelected(arr[activeIndex])\n  }, [tabSet, activeIndex])\n\n\n  useEffect(() => {\n    const arr = Object.keys(tabSet)\n    let checked = selected ? selected : arr[activeIndex]\n    if (tabSet[checked]) {\n      setStyles(tabSet[checked].style)\n      let borderT = borderTop ? `border-top:1px solid ${tabSet[checked].borderColor}` : \"border-top:0\"\n      let borderB = borderBottom ? `border-bottom:1px solid ${tabSet[checked].borderColor}` : \"border-bottom:0\"\n      let borderL = divider ? `border-left:1px solid ${tabSet[checked].borderColor}` : \"border-left:0\"\n      let borderR = divider ? `border-right:1px solid ${tabSet[checked].borderColor}` : \"border-right:0\"\n      let activeFontColor = tabSet[checked].fontColor ? tabSet[checked].fontColor : '#FFFFFF'\n      setBorderT(borderT)\n      setBorderL(borderL)\n      setBorderB(borderB)\n      setBorderR(borderR)\n      setActiveFontColor(activeFontColor)\n    }\n\n  }, [tabSet, selected])\n\n  return (\n    <div style={styles} className={className}>\n      <Wrapper className='tab-header' iconMarginRight={iconMarginRight} width={width} height={height}\n        activeFontColor={activeFontColor} activeBgColor={activeBgColor} inactiveBgColor={inactiveBgColor} size={size} borderT={borderT} borderB={borderB} borderL={borderL} borderR={borderR}>\n        {arr.map((item, index) => (\n          <div\n            key={index}\n            className={item === selected ? `tab-title ${tabSet[item].direction || tabSet[item].className} active` : `tab-title ${tabSet[item].direction || tabSet[item].className} inactive`}\n            onClick={(e) => select(item, e)}>\n            {tabSet[item].icon ? <Icon width={tabSet[item].iconWidth} height={tabSet[item].iconHeight} token={item === selected ? tabSet[item].icon : tabSet[item].inicon} /> : \"\"}  {item}\n            {tabSet[item].isBet ? <>\n              <span className='bet-new'>Beta</span>\n            </> : null}\n          </div>\n        ))}\n      </Wrapper>\n      {tabSet[selected] ? tabSet[selected].content : ''}\n    </div>\n  )\n}","import React, { useEffect, useState, useRef } from 'react';\nimport styled from \"styled-components\"\nimport searchLogo from '../../assets/img/search.svg'\nconst Wrapper = styled.div`\n  .search-token{\n  width: ${props => props.width }px;\n  height: ${props => props.height}px;\n  background: ${props => props.bgColor};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding:0 24px;\n  border-radius:4px;\n  img{\n    width:18px;\n    height:18px;\n  }\n  .search-input{\n    border: 0;\n    width:100%;\n    height: 100%;\n    background:transparent;\n    outline-style: none;\n    color: #FFFFFF;\n    font-size: 18px;\n    border-radius: 4px;\n  }\n}\n`\n\nexport default function Search({ list, onChange,width='320',height='48', bgColor='rgba(85, 119, 253, 0.1)', searchName = 'bTokenSymbol',className ,placeholder = 'Search',onFocus,onBlur}) {\n  const [search, setSearch] = useState('')\n  const [length,setLength] = useState(0)\n  const origin = useRef([])\n  const searchChange = (e) => {\n    let value = e.target.value\n    setSearch(value)\n  }\n\n  useEffect(() => {\n    if (search) {\n      let value = search.toLocaleUpperCase()\n      if (origin.current.length === 0) {\n        origin.current = list\n        setLength(list.length)\n      }\n      const arr = origin.current.filter(el => el[searchName] && el[searchName].toUpperCase().indexOf(value) >= 0)\n      onChange(arr,value)\n    } else {\n      onChange(origin.current)\n    }\n  }, [search])\n  useEffect(()=>{\n    if (origin.current.length === 0) {\n      setLength(list.length)\n    }\n  },[list])\n  return (\n    <Wrapper width={width} height={height} bgColor={bgColor} className={className}  >\n      <div className='search-token'>\n        <input\n          type='text'\n          className='search-input'\n          placeholder={placeholder}\n          value={search}\n          onChange={(e) => { searchChange(e) }}\n          // onFocus={e => onFocus && onFocus(e)}\n          // onBlur={e => onBlur && onBlur(e)}\n        />\n        <img src={searchLogo} alt='' />\n      </div>\n    </Wrapper>\n\n  )\n}","import { Contract, ContractInterface } from \"@ethersproject/contracts\";\nimport {\n  JsonRpcProvider,\n  JsonRpcSigner,\n  Web3Provider,\n} from \"@ethersproject/providers\";\nimport { useMemo } from \"react\";\nimport { useWallet } from \"use-wallet\";\nimport { getProvider } from \"../utils/utils\";\n\nconst contractdescribers = {};\n\nfunction importAll(r) {\n  return r.keys().forEach((key) => {\n    const path = key.split(\"/\");\n    const last = path[path.length - 1];\n    contractdescribers[last.substring(0, last.indexOf(\".\"))] = r(key);\n  });\n}\n\nimportAll(require.context(`../abis/`, true, /\\.json$/));\n\nexport default function useContract(\n  name: string,\n  chainId: number,\n  contractAddress: string,\n): Contract {\n  const wallet = useWallet();\n  const { address, abi } = getContract(name);\n  const { ethereum } = wallet;\n  if (address) {\n    contractAddress = address;\n  }\n  return useMemo(() => {\n    let provider = getProvider(chainId);\n    if (ethereum && ethereum.networkVersion === String(chainId)) {\n      provider = new Web3Provider(ethereum, \"any\");\n    }\n    if (!provider) {\n      return null;\n    }\n    return new Contract(\n      contractAddress,\n      abi,\n      getProviderOrSigner(provider, wallet.account),\n      {pollingInterval: 500}\n    );\n  }, [contractAddress, abi, wallet]);\n}\n\n// account is not optional\nfunction getSigner(provider: JsonRpcProvider, account: string): JsonRpcSigner {\n  return provider.getSigner(account).connectUnchecked();\n}\n\n// account is optional\nfunction getProviderOrSigner(\n  provider: JsonRpcProvider,\n  account?: string\n): JsonRpcProvider | JsonRpcSigner {\n  return account ? getSigner(provider, account) : provider;\n}\n\nfunction getContract(name: string): ContractDescriber {\n  return contractdescribers[name];\n}\n\ninterface ContractDescriber {\n  address: string;\n  abi: ContractInterface;\n}\n","export default __webpack_public_path__ + \"static/media/deri.520d2449.svg\";","export default __webpack_public_path__ + \"static/media/no-nft.47097e0e.svg\";","/* eslint-disable react/jsx-no-target-blank */\nimport { useState, useEffect, useMemo, useRef, useCallback } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { inject, observer } from 'mobx-react'\nimport { useAlert } from 'react-alert'\nimport Tab from '../../components/Tab/Tab'\nimport { bg, formatAddress, getAmountETHAndDeri, getGasLimit, getProvider } from \"../../utils/utils\"\nimport config from '../../config.json'\nimport downIcon from '../../assets/img/arrow-down.svg'\nimport useConfig from '../../hooks/useConfig'\nimport { DeriEnv } from '../../lib/web3js/index'\nimport './detail.less'\nimport './claim.less'\nimport backIcon from '../../assets/img/back.svg'\nimport ARBITRUM from '../../assets/img/arbitrum-logo.svg'\nimport deri from './img/deri.svg'\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\nimport noNFT from './img/no-nft.svg'\nimport Spinner from '../../components/Spinner/Spinner'\nimport Icon from '../../components/Icon/Icon'\nimport Search from '../../components/Search/Search'\nimport Button from '../../components/Button/Button'\nimport { EVENT_TRANS_BEGIN, EVENT_TRANS_END, PRIMARY } from '../../utils/Constants'\nimport useContract from '../../hooks/useContractLp'\nimport { BigNumber } from 'ethers'\nimport './Detail/operateLiquidity.less'\nimport useContractCall from '../../hooks/useContractCall'\nimport Emitter from '../../utils/Emitter'\nimport axios from 'axios'\n\nconst env = DeriEnv.get();\nconst { chainInfo } = config[env]\nconst chainConfig = config[DeriEnv.get()]['chainInfo']\nconst DeriAddress = \"0x21E60EE73F17AC0A411ae5D690f908c3ED66Fe12\"\nconst ETHAddress = \"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\"\nconst PairAddress = \"0x96C3966534b4377691e11e163A0409Ad01667343\"\nfunction LpDetail({ lang, wallet = {}, poolManager, getLang }) {\n  const { chainId, address } = useParams();\n  const [isShowInfo, setIsShowInfo] = useState('show')\n  const alert = useAlert();\n  const nowToken = \"UNISWAP-LP\"\n  const [poolConfig, setPoolConfig] = useState('')\n  const [bTokenList, setBTokenList] = useState([])\n  const [liquidity, setLiquidity] = useState(\"\")\n  const [poolDeri, setPoolDeri] = useState(0)\n  const config = useConfig();\n  const [claimPending, setClaimPending] = useState(false)\n  const [unStakedTokenIdList, setUnStakedTokenIdList] = useState([])\n  const [stakedTokenIdList, setStakedTokenIdList] = useState([])\n  const [aTimeRewardInfo, setATimeRewardInfo] = useState([])\n  const [bTimeRewardInfo, setBTimeRewardInfo] = useState([])\n  const [totalYearDeri, setTotalYearDeri] = useState(0)\n  const [accountEthTokenValue, setAccountEthTokenValue] = useState(0)\n  const [accountDeriToken, setAccountDeriToken] = useState(0)\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [apy, setApy] = useState()\n  const networkText = chainInfo[chainId] && chainInfo[chainId].name;\n\n  const DeriforPairContract = useContract(\"ERC20\", chainId, DeriAddress)\n  const EthforPairContract = useContract(\"ERC20\", chainId, ETHAddress)\n  const NFTContract = useContract(\"IERC721\", chainId)\n  const PoolContract = useContract(\"arbitrumLp\", chainId)\n  const BTokenContract = useContract(\"LpTokenId\", chainId)\n  const PairContract = useContract(\"PairAbi\", chainId)\n\n  const unTokenIdListRef = useRef()\n  const tokenIdListRef = useRef()\n\n  const getPendingReward = async () => {\n    let res = await PoolContract[\"getRewardInfo(address)\"](wallet.detail.account)\n    if (res) {\n      let deriNumber = BigNumber.from(res._hex).toString() / (10 ** 18)\n      setPoolDeri(deriNumber)\n    }\n  }\n\n  const bTime = useCallback(async (id) => {\n    let res;\n    await setTimeout(async () => {\n      let provider = getProvider(chainId);\n      let contract = await PoolContract.connect(provider)\n      let data = stakedTokenIdList.map(async (item) => {\n        let obj = {}\n        let res = await contract.getSecondsPerLiquidityInsideX128(item)\n        if (res) {\n          obj[\"id\"] = item\n          obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\n          obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\n        }\n        return obj\n      })\n      data = await Promise.all(data)\n      setBTimeRewardInfo(data)\n    }, 1000);\n    return res\n  }, [stakedTokenIdList, PoolContract])\n\n  const aTime = useCallback(async () => {\n    let data = stakedTokenIdList.map(async (item) => {\n      let obj = {}\n      let res = await PoolContract.getSecondsPerLiquidityInsideX128(item)\n      if (res) {\n        obj[\"id\"] = item\n        obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\n        obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\n      }\n      return obj\n    })\n    data = await Promise.all(data)\n    bTime()\n    setATimeRewardInfo(data)\n  }, [stakedTokenIdList, PoolContract])\n\n  const getBTokenValue = useCallback(async () => {\n    let data = stakedTokenIdList.map(async (item) => {\n      let obj = {}\n      let res = await BTokenContract.positions(item)\n      obj = {\n        tickLower: res.tickLower,\n        tickUpper: res.tickUpper,\n        liquidity: BigNumber.from(res.liquidity._hex).toString()\n      }\n      return obj\n    })\n    data = await Promise.all(data)\n    let tickCurrent = await PairContract.slot0()\n    tickCurrent = tickCurrent.tick\n    let amount = data.map((item) => {\n      let [total_amount0, total_amount1] = getAmountETHAndDeri(tickCurrent, item.tickLower, item.tickUpper, item.liquidity)\n      return {\n        deri: total_amount0 / 10 ** 18,\n        eth: total_amount1 / 10 ** 18\n      }\n    })\n    let deriSum = amount.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.deri;\n    }, 0)\n    let ethSum = amount.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.eth;\n    }, 0)\n    let ethPath = \"https://sig.oraclum.io/unsigned?symbols=ETHUSD\"\n    let eresp = await axios.get(ethPath);\n    let ethPrice = eresp.data[\"ETHUSD\"]\n    let ethValue = bg(ethSum).times(ethPrice).toNumber();\n    setAccountEthTokenValue(ethValue)\n    setAccountDeriToken(deriSum)\n  }, [BTokenContract, stakedTokenIdList, PairContract])\n\n  const getApy = useCallback(async () => {\n    if (totalYearDeri && accountDeriToken && accountEthTokenValue) {\n      let deriPath = `${process.env.REACT_APP_INFO_HTTP_URL}/stats_for_token`\n      let resp = await fetch(deriPath);\n      let res = await resp.json();\n      let deriPrice = res.data.price;\n      let deriValue = bg(accountDeriToken).times(deriPrice).toNumber();\n      let sumValue = deriValue + accountEthTokenValue\n      let totalYearDeriValue = bg(totalYearDeri).times(deriPrice).toNumber();\n      let apy = (totalYearDeriValue / sumValue) * 100\n      setApy(apy)\n    }\n  }, [totalYearDeri, accountDeriToken, accountEthTokenValue])\n\n  const getTimeRewardInfo = useCallback(async () => {\n    console.log(\"bTimeRewardInfo aTimeRewardInfo\", bTimeRewardInfo, aTimeRewardInfo)\n    let rewards = bTimeRewardInfo.map(async (item) => {\n      let aTime = aTimeRewardInfo.find(id => id.id === item.id)\n      let secondsPerLiquidityInsideX128_a = aTime.secondsPerLiquidityInsideX128\n      let reward = await PoolContract.getRewardInBetween(item.id, item.timestamp, secondsPerLiquidityInsideX128_a, item.secondsPerLiquidityInsideX128)\n      if (reward) {\n        let obj = {\n          reward: BigNumber.from(reward._hex).toString() / 10 ** 18,\n          id: item.id,\n          timestamp: Math.abs(item.timestamp - aTime.timestamp)\n        }\n        return obj\n      }\n    })\n    rewards = await Promise.all(rewards)\n    if (rewards[0].timestamp !== 0) {\n      const totalScore = rewards.reduce((accumulator, currentValue) => {\n        return accumulator + currentValue.reward;\n      }, 0);\n      const oneYear = 1000 * 60 * 60 * 24 * 365;\n      const valuePerYear = (totalScore / (rewards[0].timestamp * 1000)) * oneYear;\n      setTotalYearDeri(valuePerYear)\n    }\n  }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\n  const afterTransaction = (activeIndex) => {\n    getPendingReward()\n    getunStakedTokenIdList()\n    getStakedTokenIdList()\n    getLiquidity()\n    setActiveIndex(activeIndex)\n  }\n  const tabSet = useMemo(() => ({\n    [lang['add']]: {\n      content: <Operate type='add' getLang={getLang} setActiveIndex={setActiveIndex} afterTransaction={afterTransaction} wallet={wallet} alert={alert} address={address} lang={lang} NFTContract={NFTContract} PoolContract={PoolContract} tokenIdList={unStakedTokenIdList} />,\n      style: { background: \"linear-gradient(200.74deg, rgba(97, 122, 255, 0.1) -4.65%, rgba(223, 229, 255, 0) 50.94%, rgba(85, 91, 237, 0.05) 105.4%)\" },\n      borderColor: \"#203B60\",\n      icon: 'add-icon',\n      iconWidth: '25',\n      iconHeight: '25',\n      inicon: 'inactive-add',\n      direction: \"tab-left\"\n    },\n    [lang['remove']]: {\n      content: <Operate type='remove' getLang={getLang} setActiveIndex={setActiveIndex} afterTransaction={afterTransaction} wallet={wallet} alert={alert} address={address} lang={lang} PoolContract={PoolContract} NFTContract={NFTContract} tokenIdList={stakedTokenIdList} />,\n      style: { background: \"linear-gradient(200.74deg, rgba(97, 122, 255, 0.1) -4.65%, rgba(223, 229, 255, 0) 50.94%, rgba(85, 91, 237, 0.05) 105.4%)\" },\n      borderColor: \"#203B60\",\n      icon: 'remove-icon',\n      iconWidth: '25',\n      iconHeight: '25',\n      iconMarginRight: '20',\n      inicon: 'inactive-remove',\n      direction: \"tab-right\",\n    },\n  }), [lang, wallet, getLang, afterTransaction,setActiveIndex, unStakedTokenIdList, alert, stakedTokenIdList, NFTContract, PoolContract, address])\n\n  const load = async () => {\n    await poolManager.loadDoubleMingingPool();\n    let pool = poolManager.lpPools\n    pool = pool.filter(p => p.address === address)\n    pool = pool[0]\n    let symbols = pool.symbols.map(item => {\n      let arr = [];\n      arr.push(item.symbol)\n      return arr\n    })\n    symbols = symbols.join(',')\n    setPoolConfig(pool)\n    setBTokenList(pool.bTokens)\n  }\n  const claimDeri = async () => {\n    if (+poolDeri === 0) {\n      alert.error(lang['no-deri-to-claim-yet']);\n      return;\n    }\n    setClaimPending(true)\n    const title = {\n      text: \"Claim Deri\",\n      icon: \"DERI\",\n    }\n    const content = {\n      success: lang['claim-deri-reward'],\n      error: lang['transaction-failed'],\n    }\n    try {\n      let params = [address]\n      let gasLimit = await getGasLimit(PoolContract, \"claim\", params)\n      let res = await PoolContract.claim({ gasLimit: gasLimit });\n      console.log(\"claim\", res)\n      if (res && res.hash) {\n        Emitter.emit(EVENT_TRANS_BEGIN, {\n          title: title, content: content, hash: res.hash\n        })\n      } else {\n        getPendingReward()\n        setClaimPending(false)\n        return false\n      }\n      const receipt = await res.wait()\n      console.log(\"receipt\", receipt)\n      if (receipt) {\n        console.log(\"receipt\", receipt)\n        if (receipt && receipt.transactionHash) {\n          const hash = receipt.transactionHash\n          if (receipt.status) {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: content, context: { success: true, hash: hash, error: \"error\" } })\n            if (res.success) {\n              setPoolDeri(0)\n            }\n          } else {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: content, context: { success: false.success, hash: hash, error: \"error\" } })\n          }\n        }\n      }\n    } catch (error) {\n      console.error(error)\n    }\n    getPendingReward()\n    setClaimPending(false)\n  }\n\n  const getunStakedTokenIdList = useCallback(async () => {\n    if (wallet.detail.account) {\n      let NFTNumber = await NFTContract.balanceOf(wallet.detail.account)\n      NFTNumber = BigNumber.from(NFTNumber._hex).toString()\n      let tokenId = []\n      for (let index = 0; index < NFTNumber; index++) {\n        let id = await NFTContract.tokenOfOwnerByIndex(wallet.detail.account, index)\n        id = BigNumber.from(id._hex).toString()\n        tokenId.push(id)\n      }\n      let deriTokenId = [];\n      for (let index = 0; index < tokenId.length; index++) {\n        let id = await PoolContract.getPositionInfo(tokenId[index])\n        if (id[0].toLocaleLowerCase() === PairAddress.toLocaleLowerCase()) {\n          deriTokenId.push(tokenId[index])\n        }\n      }\n      setUnStakedTokenIdList(deriTokenId)\n    }\n  }, [NFTContract, wallet.detail.account, PoolContract])\n\n  const getStakedTokenIdList = useCallback(async () => {\n    if (wallet.detail.account) {\n      let res = await PoolContract.getUserTokenIds(wallet.detail.account)\n      res = res.map(item => {\n        return BigNumber.from(item._hex).toString()\n      })\n      console.log(\"getStakedTokenIdList\", res)\n      setStakedTokenIdList(res)\n    }\n  }, [PoolContract, wallet.detail.account])\n\n  const getLiquidity = useCallback(async () => {\n    let DeriNumber = await DeriforPairContract.balanceOf(PairAddress)\n    let EthNumber = await EthforPairContract.balanceOf(PairAddress)\n    let deriPath = `${process.env.REACT_APP_INFO_HTTP_URL}/stats_for_token`\n    let ethPath = \"https://sig.oraclum.io/unsigned?symbols=ETHUSD\"\n    let eresp = await axios.get(ethPath);\n    let ethPrice = eresp.data[\"ETHUSD\"]\n    let resp = await fetch(deriPath);\n    let res = await resp.json();\n    let deriPrice = res.data.price;\n    let deriAmount = BigNumber.from(DeriNumber._hex).toString() / (10 ** 18);\n    let ethAmount = BigNumber.from(EthNumber._hex).toString() / (10 ** 18);\n    let deriValue = bg(deriAmount).times(deriPrice).toNumber();\n    let ethValue = bg(ethAmount).times(ethPrice).toNumber();\n    let liquidity = deriValue + ethValue\n    setLiquidity(liquidity)\n  }, [DeriforPairContract, EthforPairContract])\n\n  useEffect(() => {\n    if (wallet.detail.chainId && wallet.detail.chainId !== chainId) {\n      wallet.switchNetwork(config[chainId])\n    }\n    if (wallet.isConnected() && PoolContract) {\n      let interval = window.setInterval(getPendingReward, 1000 * 10 * 3);\n      getPendingReward()\n      return () => clearInterval(interval);\n    }\n  }, [wallet.detail.chainId, wallet.detail.account, PoolContract])\n\n\n  useEffect(() => {\n    if (stakedTokenIdList.length && PoolContract) {\n      aTime()\n    }\n  }, [stakedTokenIdList, PoolContract, wallet])\n\n  useEffect(() => {\n    if (stakedTokenIdList.length && BTokenContract && PairContract) {\n      getBTokenValue()\n    }\n  }, [BTokenContract, stakedTokenIdList, PairContract, wallet])\n\n  useEffect(() => {\n    if (totalYearDeri && accountDeriToken && accountEthTokenValue) {\n      getApy()\n    }\n  }, [totalYearDeri, accountDeriToken, accountEthTokenValue])\n\n  useEffect(() => {\n    if (aTimeRewardInfo.length && PoolContract && bTimeRewardInfo.length) {\n      getTimeRewardInfo()\n    }\n  }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\n\n  useEffect(() => {\n    load()\n  }, [])\n\n  useEffect(() => {\n    if (!wallet.isConnected() && liquidity && !stakedTokenIdList) {\n      setApy(12.43)\n    }\n  }, [liquidity, wallet && stakedTokenIdList])\n\n  useEffect(() => {\n    if (PoolContract && !tokenIdListRef.current && wallet.detail.account) {\n      getStakedTokenIdList()\n      tokenIdListRef.current = true\n    }\n  }, [PoolContract, wallet.detail.account])\n\n  useEffect(() => {\n    if (NFTContract && wallet.detail.account && PoolContract && !unTokenIdListRef.current) {\n      getunStakedTokenIdList()\n      tokenIdListRef.current = true\n    }\n  }, [NFTContract, wallet.detail.account, PoolContract])\n\n  useEffect(() => {\n    if (DeriforPairContract && EthforPairContract) {\n      getLiquidity()\n    }\n  }, [DeriforPairContract, EthforPairContract])\n\n\n  return (\n    <div className='pool-detail'>\n      <div className='back-pool'>\n        <div className='icon-back' onClick={() => { window.history.back(-1) }}>\n          <img alt='' src={backIcon} />\n          <span>{lang['back']}</span>\n        </div>\n      </div>\n      <div className='pool-deatail-info'>\n        <div className='pool-detail-basetoken-info'>\n          <div className='pool-info-text'>\n            <div className='pool-network-type'>\n              <div className='network-logo'>\n                <img alt='' src={ARBITRUM} />\n              </div>\n              <div className='pool-type-network-text'>\n                <div className='pool-type-text'>\n                  {lang[poolConfig.type]} {lang[poolConfig.zone]}\n                </div>\n                <div className='pool-network-text'>\n                  {networkText}\n                </div>\n              </div>\n            </div>\n            <div className='pool-des'>\n              Stake Uniswap <a rel='norelerror' target='_blank' href=\"https://app.uniswap.org/#/add/ETH/0x21E60EE73F17AC0A411ae5D690f908c3ED66Fe12/3000\" >DERI-ETH </a> LP NFTs to earn $DERI rewards.\n              <br></br>\n              <a rel='norelerror' target='_blank' href='https://docs.deri.io/library/faqs/mining-faq#is-dex-liquidity-mining-on-sushiswap-sushiswap-onsen-and-pancakeswap-deri-risk-free'><span className='learn-more'> {lang['learn-more']}</span></a>\n            </div>\n          </div>\n          <div className='select-basetoken-info'>\n            <div className='select-coin-title-search'>\n              <div className='select-coin-title'> {lang['select-the-coin']}</div>\n              <div className='search-box'>\n                <Search list={bTokenList} searchName='bTokenSymbol' onChange={() => { }} />\n              </div>\n            </div>\n            <div className='coin-search'>\n              <div className='slide-icon left'>\n                <Icon token='arrow-left' width='24' height='24' />\n              </div>\n              <div className=\"coin-list\">\n                {bTokenList.length ? <>\n                  <div className='coin-box checked-base'>\n                    <div className='base-apy-info'>\n                      <div className='lp-btoken-logo'>\n                        <div className={`btoken-logo ${bTokenList[0].bTokenSymbol}`}></div>\n                        <span className='conect-logo'>+</span>\n                        <div className={`btoken-logo ${bTokenList[1].bTokenSymbol}`}></div>\n                      </div>\n                      <div className='apy-base-staked'>\n                        <div className='base-name'>{nowToken}</div>\n                        <div className='base-apy'>\n                          {lang['apy']} &nbsp; <DeriNumberFormat value={apy} suffix='%' decimalScale={2} />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </> : null}\n              </div>\n              <div className='slide-icon right'>\n                <Icon token='arrow-right' width='24' height='24' />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='pool-detail-add-remove-info'>\n          <div className='mining-deri-liquidity'>\n            <div className='btoken-liquidity'>\n              {bTokenList.length && <>\n                <div className='lp-btoken-logo'>\n                  <div className={`btoken-logo ${bTokenList[0].bTokenSymbol}`}></div>\n                  <span className='conect-logo'>+</span>\n                  <div className={`btoken-logo ${bTokenList[1].bTokenSymbol}`}></div>\n                </div>\n                <div className='manage-stake'>\n                  <div className='manage'>\n                    {lang['manage']} {nowToken} {lang['liquidity']}\n                  </div>\n                </div>\n              </>}\n            </div>\n            <div className='deri-current-epoch'>\n              <div className={'mining-pool-claim'}>\n                <div className='mining-claim-info'>\n                  <span> {lang['you-have']}</span>\n                  <span className={`${+poolDeri === 0 ? 'no-deri' : \"\"} mining-pool-num`} onClick={claimDeri}>\n                    {claimPending && <Spinner />}\n                    <DeriNumberFormat firstTime={false} value={poolDeri} decimalScale={2} />\n                    <img src={deri} alt=\"deri\" />\n                  </span>\n                  <span>{lang['claim-in-pool']}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='mining-add-remove-liquidity'>\n            <div className='pool-info'>\n              <div className='pool-info-title'>\n                <div className='pool-info-title-text'>\n                  {lang['pool-info']}\n                </div>\n                <div className='down-up'>\n                  {isShowInfo === 'show' && <span onClick={() => setIsShowInfo('hide')}>\n                    <img className='up-icon' alt='' src={downIcon} />\n                  </span>}\n                  {isShowInfo === 'hide' && <span onClick={() => setIsShowInfo('show')}>\n                    <img alt='' src={downIcon} />\n                  </span>}\n                </div>\n              </div>\n              <div className={`'pool-info-text' ${isShowInfo}`}>\n                <div className='pool-info-text-one'>\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['apy']}</div>\n                    <div className='info-box-num'>\n                      <DeriNumberFormat value={apy} suffix='%' decimalScale={2} />\n                    </div>\n                  </div>\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['pool-liquidity']}</div>\n                    <div className='info-box-num'>\n                      $ <DeriNumberFormat value={liquidity} displayType='text' decimalScale={0} thousandSeparator={true} />\n                    </div>\n                  </div>\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['staked-balance']}</div>\n                    <div className='info-box-num'>\n                      {stakedTokenIdList.length}{\" \"}\n                      <a href='https://arbiscan.io/address/0xC36442b4a4522E871399CD717aBDD847Ab11FE88'>DERI/ETH LP NFTs</a>\n                    </div>\n                  </div>\n                </div>\n                <div className='pool-info-text-two'>\n                  <div className='info-box'>\n                    <div className='info-box-title'>{lang['contract-address']}</div>\n                    <div className='info-box-num'>\n                      <a target='_blank' rel='noreferrer' href={`${chainConfig[chainId] && chainConfig[chainId]['viewUrl']}/address/${address}`}>\n                        {formatAddress(address)}\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='add-remove-liquidity'>\n              <Tab tabSet={tabSet} iconMarginRight='20' width={379} size={18} inactiveBgColor='#0c192d' icon='' borderBottom={true} divider={true} activeIndex={activeIndex} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nconst Operate = ({ wallet, type, lang, getLang, afterTransaction, tokenIdList, alert,setActiveIndex, NFTContract, PoolContract, address }) => {\n  const [disabled, setDisabled] = useState(false)\n  const [isApproveList, setIsApproveList] = useState([])\n  const [isApproved, setIsApproved] = useState(false)\n  const [approveBtnText, setApproveBtnText] = useState(lang[\"approve\"])\n  const NFTcontractCall = useContractCall(NFTContract);\n  // const PoolcontractCall = useContractCall(PoolContract);\n  const colors = ['#824A4A', '#69985E', '#93A1B8', '#377DFF', '#59AE99'];\n  const isApprove = useCallback(async () => {\n    let list = []\n    for (let index = 0; index < tokenIdList.length; index++) {\n      let approve = await NFTContract.getApproved(tokenIdList[index])\n      console.log(\"getApproved\", approve)\n      let obj = {}\n      if (approve && approve.toLocaleLowerCase() === address.toLocaleLowerCase()) {\n        obj = {\n          id: tokenIdList[index],\n          isApproved: true\n        }\n      } else {\n        obj = {\n          id: tokenIdList[index],\n          isApproved: false\n        }\n      }\n      list.push(obj)\n    }\n    console.log(list)\n    setIsApproveList(list)\n  }, [tokenIdList, NFTContract])\n\n  const approve = useCallback(async (id) => {\n    const transactionTitle = {\n      text: \"Approve\",\n      icon: \"DERI\"\n    }\n    const transactionContent = {\n      success: `Approve ${id}`,\n      error: \"Transaction failed\",\n    }\n    id = +id\n    try {\n      let params = [address, id]\n      let gasLimit = await getGasLimit(NFTContract, \"approve\", params)\n      console.log(gasLimit)\n      let res = await NFTcontractCall(\"approve\", params, { gasLimit: gasLimit });\n      // let transactionResponse = await NFTContract.approve(address, id)\n      console.log(\"approve\", res)\n      if (res && res.hash) {\n        Emitter.emit(EVENT_TRANS_BEGIN, {\n          title: transactionTitle, content: transactionContent, hash: res.hash\n        })\n      } else {\n        return false\n      }\n      const receipt = await res.wait()\n      console.log(\"receipt\", receipt)\n      if (receipt) {\n        console.log(\"receipt\", receipt)\n        if (receipt && receipt.transactionHash) {\n          const hash = receipt.transactionHash\n          if (receipt.status) {\n            Emitter.emit(EVENT_TRANS_END, { title: transactionTitle, content: transactionContent, context: { success: true, hash: hash, error: \"error\" } })\n            return true\n          } else {\n            Emitter.emit(EVENT_TRANS_END, { title: transactionTitle, content: transactionContent, context: { success: false.success, hash: hash, error: \"error\" } })\n            return false\n          }\n\n        }\n      }\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  }, [NFTContract])\n\n  const clickApprove = useCallback(async () => {\n    let id = isApproveList.find(item => !item.isApproved)\n    if (id) {\n      let approved = await approve(id.id)\n      isApprove()\n    }\n  }, [isApproveList])\n\n  const addLiquidity = useCallback(async () => {\n    const title = {\n      text: lang[\"add-liquidity-state\"],\n      icon: \"DERI\"\n    }\n    const connect = {\n      success: `${getLang('add-baseToken-liquidity', { baseToken: \"UNISWAP-LP\" })}`,\n      error: lang['transaction-failed'],\n    }\n    try {\n      let gasLimit = await getGasLimit(PoolContract, \"deposit\", [])\n      let res = await PoolContract[\"deposit()\"]({ gasLimit: gasLimit });\n      console.log(\"deposit\", res)\n      if (res && res.hash) {\n        Emitter.emit(EVENT_TRANS_BEGIN, {\n          title: title, content: connect, hash: res.hash\n        })\n      } else {\n        return false\n      }\n      const receipt = await res.wait()\n      console.log(\"receipt\", receipt)\n      if (receipt) {\n        console.log(\"receipt\", receipt)\n        if (receipt && receipt.transactionHash) {\n          const hash = receipt.transactionHash\n          let index = type === \"add\" ? 0 : 1\n          afterTransaction && afterTransaction(index)\n          if (receipt.status) {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: true, hash: hash, error: \"error\" } })\n            return true\n          } else {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: false.success, hash: hash, error: \"error\" } })\n            return false\n          }\n\n        }\n      }\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n\n  }, [PoolContract, type])\n  const removeLiquidity = useCallback(async () => {\n    const title = {\n      text: lang[\"remove-liquidity-state\"],\n      icon: \"DERI\"\n    }\n    const connect = {\n      success: `${getLang('remove-baseToken-liquidity', { baseToken: \"UNISWAP-LP\" })}`,\n      error: lang['transaction-failed'],\n    }\n    try {\n      let gasLimit = await getGasLimit(PoolContract, \"withdraw\", [])\n      let res = await PoolContract[\"withdraw()\"]({ gasLimit: gasLimit });\n      console.log(\"withdraw\", res)\n      if (res && res.hash) {\n        Emitter.emit(EVENT_TRANS_BEGIN, {\n          title: title, content: connect, hash: res.hash\n        })\n      } else {\n        return false\n      }\n      const receipt = await res.wait()\n      console.log(\"receipt\", receipt)\n      if (receipt) {\n        console.log(\"receipt\", receipt)\n        let index = type === \"add\" ? 0 : 1\n        afterTransaction && afterTransaction(index)\n        if (receipt && receipt.transactionHash) {\n          const hash = receipt.transactionHash\n          if (receipt.status) {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: true, hash: hash, error: \"error\" } })\n            return true\n          } else {\n            Emitter.emit(EVENT_TRANS_END, { title: title, content: connect, context: { success: false.success, hash: hash, error: \"error\" } })\n            return false\n          }\n        }\n      }\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n\n  }, [PoolContract, type])\n\n  useEffect(() => {\n    if (isApproveList.length) {\n      let id = isApproveList.find(item => !item.isApproved)\n      if (id) {\n        let text = `${lang[\"approve\"]} ${id.id}`\n        setApproveBtnText(text)\n      } else {\n        setIsApproved(true)\n      }\n    }\n  }, [isApproveList])\n\n  useEffect(() => {\n    if (NFTContract && tokenIdList && tokenIdList.length && type === 'add') {\n      isApprove()\n    }\n  }, [tokenIdList, NFTContract, type])\n\n  useEffect(() => {\n    setDisabled(!tokenIdList.length)\n    setIsApproved(!tokenIdList.length)\n    if (type === \"remove\") {\n      setIsApproved(true)\n      setActiveIndex(1)\n    }else{\n      setActiveIndex(0)\n    }\n  }, [tokenIdList, type])\n  return (\n    <div className='operate-liquidity-lp operate-liquidity'>\n      {\n        (tokenIdList && tokenIdList.length) ?\n          <div className='add-remove-nft-box'>\n            <div className='unstaked-nft'>\n              Your {type === \"add\" ? \"unstaked\" : \"staked\"} DERI/ETH LP NFTs\n            </div>\n            <div className='tokenIdList'>\n              {tokenIdList && tokenIdList.map((item, index) => {\n                return (\n                  <div className='tokenId-box' key=\"index\">\n                    <div className='color-box' style={{ backgroundColor: colors[index] }}></div>\n                    <div className='tokenId-text'>{item}</div>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n          :\n          <div className='no-nft-box'>\n            <img src={noNFT} alt=\"\" />\n            <div>\n              {type === \"add\" ? \"No DERI-ETH LP NFT in your wallet\" : \"No DERI-ETH LP NFT staked\"}\n            </div>\n          </div>\n      }\n\n      <div className='add-remove-btn'>\n        {!isApproved ? <Button width=\"331\" fontSize='18' disabled={disabled} label={approveBtnText} type={PRIMARY} onClick={clickApprove} /> : <Button width=\"331\" fontSize='18' disabled={disabled} label={type === \"add\" ? lang[\"add-liquidity\"] : lang[\"remove-liquidity\"]} type={PRIMARY} onClick={type === \"add\" ? addLiquidity : removeLiquidity} />}\n      </div>\n    </div >\n  )\n}\nexport default inject('wallet', 'poolManager')(observer(LpDetail))","import { Contract } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\n\nexport default function useContractCall(contract: Contract): (\n  method: string,\n  params: Array<any>,\n  options?: { value?: BigNumber; gasLimit?: BigNumber }) => Promise<TransactionResponse> {\n\n  return useMemo(() => {\n    return async (\n      method: string,\n      params: Array<any>,\n      options?: { value?: BigNumber; gasLimit?: BigNumber }\n    ) => {\n      return contract[method](...params, options)\n    }\n  }, [contract])\n}\n"],"sourceRoot":""}