{"version":3,"sources":["utils/DeriNumberFormat.js","components/Input/Input.js","pages/Bridge/Spinner.js","pages/Bridge/img/stage-one.svg","pages/Bridge/img/stage-two.svg","pages/Bridge/img/stage-three.svg","pages/Bridge/img/succeed.svg","pages/Bridge/img/faild.svg","pages/Bridge/Operate.js","pages/Bridge/img/arrow-left.svg","pages/Bridge/img/disabled-down.svg","pages/Bridge/Bridge.js"],"names":["Wrapper","styled","NumberFormat","props","width","LoadLine","span","test","height","DeriNumberFormat","useState","className","renderablity","setRenderablity","firstTime","setFirstTime","isValidate","allowZero","value","undefined","isNaN","Math","abs","renderText","replace","useEffect","closeShowLoadingEffectAfterLoaded","wallet","defaultValue","others","decimalScale","bg","toFixed","countDecimal","toNonExponential","String","indexOf","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","clearTimeout","suffix","div","inputWidth","inputHeight","unitPadding","Input","unit","unitTip","max","step","onChange","styles","disableNegtive","focus","placeholder","minTradeVolume","decimal","readOnly","disabled","onBlur","onFocus","inputRef","useRef","current","setCustomValidity","style","type","title","onKeyPress","evt","which","preventDefault","ref","e","regStr","reg","RegExp","target","gt","integerValue","filter","substring","tip","text","Spinner","class","Operate","lang","amount","balance","initialize","isClaim","setSending","sending","setAmount","setIsClaim","isWalletConnected","config","useConfig","alert","useAlert","history","useHistory","isApprove","setIsApprove","isValid","setIsValid","isFaild","setIsFaild","bridgeState","setBridgeState","claimState","setClaimState","isClickClaim","setIsClickClaim","Button","PRIMARY","fontSize","label","actionElement","setActionElement","connect","valid","isConnected","apiProxy","request","detail","account","res","switchNetwork","toChainId","send","error","isFromConnected","isNetwork","from_chainId","netWork","stageOne","chainId","to_chainId","includeResponse","success","stageTwo","setInterval","claim","isToConnected","reset","push","approve","loadApprove","result","isUnlocked","stageThree","element","onClick","alt","src","succeed","toLowerCase","from_network","to_network","FaildLogo","obj","img","ETH","BSC","HECO","inject","observer","setBalance","isdev","DeriEnv","get","netWork_text","id","fromList","setFromList","toList","setToList","setInitialize","dropdownList_from","setDropdownList_from","dropdownList_to","setDropdownList_to","From_img","setFrom_img","To_img","setTo_img","selectListClassFrom","classNames","selectListClassTo","setIsWalletConnected","async","getBalance","fromChainId","toString","getValid","from_arr","to_arr","p","disabledDown","up","down","map","item","index","Init","JSON","parse","stringify","select_from","arrow","select_to","deriLogo","rel","href"],"mappings":"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","file":"static/js/26.7ac56f8e.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\nimport NumberFormat from 'react-number-format'\nimport { inject, observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport { toNonExponential, countDecimal } from './utils';\nimport { bg } from '../lib/web3js';\nconst Wrapper = styled(NumberFormat)`\n  width : ${props => props.width}px;\n`\nconst LoadLine = styled.span`\n  width : ${props => /px$/.test(props.width) ? props.width : `${props.width}px`};\n  height : ${props => /px$/.test(props.height) ? props.height : `${props.height}px`};\n`\nfunction DeriNumberFormat(props) {\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\n  const [firstTime, setFirstTime] = useState(true)\n  const isValidate = () => {\n    const { allowZero } = props\n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && !isNaN(props.value) && props.value !== 'NaN')\n      || ((Math.abs(props.value)) === 0 && allowZero === true)\n  }\n  const renderText = value => value && value.replace(/\\.$/, '')\n\n  useEffect(() => {\n    const { allowZero, wallet, closeShowLoadingEffectAfterLoaded, defaultValue = '--', ...others } = props\n\n    if (isValidate()) {\n      //如果精度截取之后为0，则动态获取精度，取到不为0为止\n      if (others.decimalScale > 0 && others.value && /\\d+\\.0*[1-9]+/.test(others.value) && !allowZero && (+bg(others.value).toFixed((+others.decimalScale || 2))) === 0) {\n        others.decimalScale = countDecimal(Math.abs(others.value)) + 2\n      }\n\n      if (others.decimalScale === -1 || ((+others.value) === 0 && allowZero)) {\n        delete others.decimalScale\n      }\n\n      //科学计数法\n      others.value = /e(\\+|=)?/.test(others.value) ? toNonExponential(others.value) : '' + others.value\n      if (others.value && /\\d+.9{6}/.test(others.value)) {\n        others.value = (+others.value).toFixed(5)\n      }\n      if (others.value && String(others.value).indexOf(\"0000000000000\") >0) {\n        setRenderablity(\"1E-18\")\n      } else {\n        setRenderablity(<Wrapper {...others} renderText={renderText}\n          displayType='text' fixedDecimalScale={true} thousandSeparator={true} />)\n      }\n\n    } else if (firstTime) {\n      const { width, height } = props\n      setRenderablity(<LoadLine className='loading-line' width={width} height={height}></LoadLine>)\n      if (closeShowLoadingEffectAfterLoaded) {\n        setFirstTime(false)\n      }\n    }\n    const timeout = window.setTimeout(() => {\n      // && wallet && (!wallet.isConnected() || !wallet.supportChain)\n      if (!isValidate()) {\n        setRenderablity(defaultValue)\n      }\n    }, defaultValue === others.value ? 0 : 60000)\n    return () => {\n      clearTimeout(timeout)\n    };\n  }, [props.value, props.decimalScale, props.suffix]);\n\n  return renderablity;\n}\nexport default DeriNumberFormat\n// export default inject('wallet')(observer(DeriNumberFormat))","import { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { bg } from '../../lib/web3js';\nimport UnderlineText from '../UnderlineText/UnderlineText';\n\nconst Wrapper = styled.div`\ndisplay : flex;\nfont-size : 14px;\nalign-items : center;\nbackground: rgba(85, 119, 253, 0.1);\nborder-radius: 4px;\njustify-content: space-between;\ninput {\n  background: transparent;\n  border-radius: 4px;\n  // min-width: 240px;\n  border: 0;\n  width : ${props => props.inputWidth};\n  height: ${props => props.inputHeight};\n  color : #E0ECFF;\n  font-size : 18px;\n  padding-left: 16px;\n}\ninput:focus {\n  outline: none;\n}\n.unit {\n  margin-right: ${props => props.unitPadding};\n}\n`\nexport default function Input({value,unit,unitTip,max,step,onChange,styles = {},disableNegtive = true ,focus,placeholder='',unitPadding = '24px',minTradeVolume,decimal = 2,readOnly,inputWidth = '50%',inputHeight='56px',className,disabled = false,onBlur,onFocus}){\n  const inputRef = useRef(null);\n  const change = e => {\n    const regStr = `\\\\d+\\\\.\\\\d{0,${decimal}}$`\n    const reg = new RegExp(regStr)\n    const { value } = e.target\n    if(max && bg(value).gt(max)){    \n      onChange && onChange(max)\n    } else if(disableNegtive && (value < 0 || isNaN(value))) {\n      onChange && onChange('')\n    } else if(value){\n      if(minTradeVolume >= 1) {\n        if(value / minTradeVolume >=1) {\n          onChange && onChange(bg(value).div(minTradeVolume).integerValue() * minTradeVolume) \n        } else {\n          const validValue = value * minTradeVolume\n          onChange && onChange(validValue) \n        }\n      } else if(/\\d+\\./.test(value) && !reg.test(value)){\n        const filter = value.substring(0,value.indexOf('.') + 1 + decimal)\n        onChange && onChange(filter)\n      } else {\n        onChange && onChange(value)\n      }\n    } else {\n      onChange && onChange(value)\n    }\n  }\n\n  const onKeyPress = evt => {\n    if (evt.which !== 46 && evt.which !== 8 && evt.which !== 0 && (evt.which < 48 || evt.which > 57)) {\n        evt.preventDefault();\n    }\n  }\n\n  useEffect(()=>{\n    inputRef.current.setCustomValidity('')\n    if(inputRef.current && focus){\n      inputRef.current.focus();\n    }\n  },[focus])\n\n\n  return (\n    <Wrapper  unitPadding={unitPadding} inputWidth={inputWidth} inputHeight={inputHeight} className={className} style={{...styles}}>\n      <input placeholder={placeholder} type='number' title=\"\" onKeyPress={onKeyPress} onBlur={onBlur} onFocus={onFocus} disabled = {disabled} value={value} step = {isNaN(step) ? 0 : step} ref={inputRef} onChange={change} readOnly={readOnly}/>\n      <div className='unit'>{unitTip ? <UnderlineText tip={unitTip} text={unit}/> : unit}</div>\n    </Wrapper>    \n  )\n}","import './spinner.less'\nexport default function Spinner() {\n  return (\n    <div class=\"sleepContentView\">\n      <div class=\"circle\">\n      </div>\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/stage-one.9bfaa393.svg\";","export default __webpack_public_path__ + \"static/media/stage-two.1ce521f2.svg\";","export default __webpack_public_path__ + \"static/media/stage-three.507b43c5.svg\";","export default __webpack_public_path__ + \"static/media/succeed.1057d4b2.svg\";","export default __webpack_public_path__ + \"static/media/faild.831be6f1.svg\";","import { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport Button from '../../components/Button/Button'\nimport { PRIMARY } from '../../utils/Constants';\nimport useConfig from '../../hooks/useConfig'\nimport { useAlert } from 'react-alert'\nimport Spinner from './Spinner'\nimport BSC from '../../assets/img/bsc-logo.svg';\nimport ETH from '../../assets/img/ethereum.svg'\nimport HECO from '../../assets/img/heco.svg'\nimport stageOne from './img/stage-one.svg'\nimport stageTwo from './img/stage-two.svg'\nimport stageThree from './img/stage-three.svg'\nimport apiProxy from '../../model/ApiProxy';\nimport succeed from './img/succeed.svg'\nimport FaildLogo from './img/faild.svg'\nexport default function Operate({ lang, wallet, amount, balance, initialize, isClaim, setSending, sending, setAmount, setIsClaim, isWalletConnected }) {\n  const config = useConfig();\n  const alert = useAlert();\n  const history = useHistory();\n  const [isApprove, setIsApprove] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n  const [isFaild,setIsFaild] = useState(false)\n  const [bridgeState, setBridgeState] = useState({});\n  const [claimState, setClaimState] = useState({});\n  const [isClickClaim, setIsClickClaim] = useState(false);\n  const [actionElement, setActionElement] = useState(<Button type={PRIMARY} className='button-bridge' fontSize='18' label={lang['approve']} ></Button>);\n  const connect = () => {\n    wallet.connect()\n  }\n  const valid = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\n      if (res.valid) {\n        wallet.switchNetwork(config[res.toChainId])\n        setIsClaim(true)\n\n      }\n      setIsValid(res.valid)\n    }\n  }\n  const send = async () => {\n    if (amount === '' || amount === 0) {\n      alert.error(lang['amount-must-be-greater-than-zero'])\n      return;\n    }\n    if (+amount > balance) {\n      alert.error(lang['there-is-not-enough-amount'])\n      return;\n    }\n    if (!isWalletConnected.isFromConnected) {\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.from_chainId, lang).netWork} ${lang['send-finished-two']}`)\n      return;\n    }\n    setSending(true)\n    setIsFaild(false)\n    setBridgeState({\n      stageOne: false\n    })\n    let res = await apiProxy.request('freeze', [wallet.detail.chainId, wallet.detail.account, initialize.to_chainId, amount], { includeResponse: true })\n    if (res.success) {\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\n      setBridgeState({\n        stageOne: true,\n        stageTwo: false\n      })\n      window.setInterval(() => {\n        valid()\n      }, 3000)\n    } else {\n      setIsFaild(true)\n      setSending(false)\n    }\n  }\n  const claim = async () => {\n    if (!isWalletConnected.isToConnected) {\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.to_chainId, lang).netWork} ${lang['send-finished-two']}`)\n      return;\n    }\n    setIsClickClaim(true)\n    setIsFaild(false)\n    setClaimState({\n      stageOne: false,\n    })\n    let res = await apiProxy.request('mintDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\n    if (res.success) {\n      setClaimState({\n        stageOne: true,\n        stageTwo: false,\n      })\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\n      window.setInterval(() => {\n        valid()\n      }, 3000)\n    } else {\n      setIsClickClaim(false)\n      setIsFaild(true)\n    }\n  }\n  const reset = ()=>{\n    history.push('/bridge')\n  }\n  const approve = async () => {\n    const res = await apiProxy.request('unlockDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\n    if (res.success) {\n      setIsApprove(true);\n      loadApprove();\n    } else {\n      setIsApprove(false)\n      alert.error(lang['approve-faild'])\n    }\n  }\n  const loadApprove = async () => {\n    if (wallet.isConnected()) {\n      const result = await apiProxy.request('isDeriUnlocked', [wallet.detail.chainId, wallet.detail.account])\n      setIsApprove(result.isUnlocked);\n    }\n  }\n  useEffect(() => {\n    if (wallet.isConnected()) {\n      loadApprove();\n      valid()\n    }\n  }, [wallet.detail, initialize]);\n  useEffect(() => {\n    if (isValid) {\n      setBridgeState({\n        stageOne: true,\n        stageTwo: true,\n        stageThree: true,\n      })\n    } else if (isClickClaim) {\n      setClaimState({\n        stageOne: true,\n        stageTwo: true,\n        stageThree: true,\n      })\n      setSending(false)\n      setAmount('')\n    } else {\n    }\n  }, [isValid, initialize]);\n  useEffect(() => {\n    let element;\n    if (wallet.isConnected()) {\n      if (isValid) {\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['claim']} onClick={claim} />\n      } else if (!isApprove) {\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['approve']} onClick={approve} />\n      } else if(isClickClaim){\n        element = <button className='complete' onClick={reset}> <img alt='' src={succeed}/> {lang['complete']} </button>\n      }else {\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['send']} onClick={send} ></Button>\n      }\n    } else {\n      element = <Button type={PRIMARY} className='button-bridge' label={lang['connect-wallet']} onClick={connect} ></Button>\n    }\n    setActionElement(element)\n  }, [isValid, wallet.detail, isApprove, amount, initialize, isWalletConnected,isClickClaim])\n  return (\n    <div className='operate'>\n      <div className='from-to-title'>\n        {lang['bridge']} {amount}  DERI {lang['from'].toLowerCase()} {initialize.from_network} {lang['to'].toLowerCase()} {initialize.to_network}\n      </div>\n      <div className='btn'>\n        {actionElement}\n      </div>\n      <div className='hint'>\n        {!isClaim && <div className='sending'>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\n              <div className='stage-text'>{lang['sending-deri-to-wormhole']} </div>\n            </div>\n            <div className='ok-pending'>\n              {sending && <>\n                {bridgeState.stageOne ? <div className='succeed'>\n                  <img alt='' src={succeed} />\n                </div> : <div className='pending'>\n                    <Spinner />\n                  </div>}\n              </>}\n              {!sending && !isFaild && <div className='staic'></div>}\n              {isFaild && <div><img src={FaildLogo} alt='' /></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sign']}</div>\n            </div>\n            <div className='ok-pending'>\n              {sending && <>\n                {bridgeState.stageOne && <>\n                  {bridgeState.stageTwo ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n              </>}\n              {(!sending || !bridgeState.stageOne) && <div className='staic'></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\n              <div className='stage-text'>{lang['bridge-signed']}</div>\n            </div>\n            <div className='ok-pending'>\n              {sending && <>\n                {bridgeState.stageOne && bridgeState.stageTwo && <>\n                  {bridgeState.stageThree ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n\n              </>}\n              {(!sending || !bridgeState.stageTwo) && <div className='staic'></div>}\n            </div>\n          </div>\n        </div>}\n        {isClaim && <div className='claiming'>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\n              <div className='stage-text'>{lang['claim-deri-ing']}</div>\n            </div>\n            <div className='ok-pending'>\n              {isClickClaim && <>\n                {claimState.stageOne ? <div className='succeed'>\n                  <img alt='' src={succeed} />\n                </div> : <div className='pending'>\n                    <Spinner />\n                  </div>}\n              </>}\n              {!isClickClaim && !isFaild && <div className='staic'></div>}\n              {isFaild && <div><img src={FaildLogo} alt='' /></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sync']} </div>\n            </div>\n            <div className='ok-pending'>\n              {isClickClaim && <>\n                {claimState.stageOne && <>\n                  {claimState.stageTwo ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n              </>}\n              {(!isClickClaim || !claimState.stageOne) && <div className='staic'></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\n              <div className='stage-text'>{lang['finished']}</div>\n            </div>\n            <div className='ok-pending'>\n              {isClickClaim && <>\n                {claimState.stageOne && claimState.stageTwo && <>\n                  {claimState.stageThree ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n\n              </>}\n              {(!isClickClaim || !claimState.stageTwo) && <div className='staic'></div>}\n            </div>\n          </div>\n        </div>}\n      </div>\n    </div>\n  )\n}\nfunction isNetwork(chainId, lang) {\n  chainId = +chainId\n  let obj = {}\n  switch (chainId) {\n    case 1:\n      obj.netWork = lang[\"ethereum\"];\n      obj.chainId = 1;\n      obj.img = ETH;\n      break;\n    case 56:\n      obj.netWork = lang[\"bsc\"];\n      obj.chainId = 56;\n      obj.img = BSC;\n      break;\n    case 128:\n      obj.netWork = lang[\"heco\"];\n      obj.chainId = 128;\n      obj.img = HECO;\n      break;\n    case 97:\n      obj.netWork = lang[\"bsc-testnet\"];\n      obj.chainId = 97;\n      obj.img = BSC;\n      break;\n    case 3:\n      obj.netWork = lang[\"ropsten\"];\n      obj.chainId = 3;\n      obj.img = ETH;\n      break;\n    case 256:\n      obj.netWork = lang[\"heco-testnet\"];\n      obj.chainId = 256;\n      obj.img = HECO;\n      break;\n    default:\n      break;\n  }\n  return obj;\n}","export default __webpack_public_path__ + \"static/media/arrow-left.f14b02ac.svg\";","export default __webpack_public_path__ + \"static/media/disabled-down.e8dbb78e.svg\";","import React, { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react';\nimport { DeriEnv, bg } from \"../../lib/web3js/index\";\nimport Input from '../../components/Input/Input'\nimport Operate from './Operate'\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\nimport apiProxy from '../../model/ApiProxy'\nimport arrow from './img/arrow-left.svg'\nimport disabledDown from './img/disabled-down.svg'\nimport BSC from '../../assets/img/BNB.svg';\nimport ETH from '../../assets/img/ethereum.svg'\nimport deriLogo from '../../assets/img/logo.svg'\nimport HECO from '../../assets/img/heco.svg'\nimport down from '../../assets/img/arrow-down.svg'\nimport up from '../../assets/img/arrow-up.svg'\nimport classNames from 'classnames'\nimport './bridge.less'\nfunction Bridge({ wallet, lang }) {\n  const [amount, setAmount] = useState('');\n  const [balance, setBalance] = useState(0);\n  const isdev = DeriEnv.get() !== 'prod' ? true : false;\n  const netWork_text = isdev ?\n    [\n      {\n        text: lang['ropsten'],\n        id: 3,\n        img: ETH,\n      },\n      {\n        text: lang['bsc-testnet'],\n        id: 97,\n        img: BSC,\n      },\n      {\n        text: lang['heco-testnet'],\n        id: 256,\n        img: HECO,\n      }\n    ]\n    : [\n\n      {\n        text: lang['ethereum'],\n        id: 1,\n        img: ETH,\n      },\n      {\n        text: lang['bsc'],\n        id: 56,\n        img: BSC,\n      },\n      {\n        text: lang['heco'],\n        id: 128,\n        img: HECO,\n      }\n\n    ]\n\n  const [fromList, setFromList] = useState(netWork_text)\n  const [toList, setToList] = useState(netWork_text)\n  const [sending, setSending] = useState(false);\n  const [initialize, setInitialize] = useState(isdev ?\n    {\n      from_chainId: 97,\n      from_network: lang['bsc-testnet'],\n      to_chainId: 3,\n      to_network: lang['ropsten']\n    } : {\n      from_chainId: 1,\n      from_network: lang['ethereum'],\n      to_chainId: 56,\n      to_network: lang['bsc']\n    });\n  const [isClaim, setIsClaim] = useState(false);\n  const [dropdownList_from, setDropdownList_from] = useState(false);\n  const [dropdownList_to, setDropdownList_to] = useState(false);\n  const [From_img, setFrom_img] = useState(isNetwork(initialize.from_chainId, lang).img);\n  const [To_img, setTo_img] = useState(isNetwork(initialize.to_chainId, lang).img);\n  const selectListClassFrom = classNames('from-network-list', { 'show': dropdownList_from })\n  const selectListClassTo = classNames('to-network-list', { 'show': dropdownList_to })\n  const [isWalletConnected, setIsWalletConnected] = useState(\n    {\n      isFromConnected: false,\n      isToConnected: false\n    }\n  );\n  const isConnected = () => {\n    let isFromConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.from_chainId ? true : false) : false;\n    let isToConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.to_chainId ? true : false) : false;\n    let obj = {\n      isFromConnected: isFromConnected,\n      isToConnected: isToConnected\n    }\n    setIsWalletConnected(obj)\n  }\n\n  const showListFrom = () => {\n    if (sending) {\n      return;\n    }\n    setDropdownList_from(!dropdownList_from)\n  }\n  const showListTo = () => {\n    if (sending) {\n      return;\n    }\n    setDropdownList_to(!dropdownList_to)\n  }\n\n  const getValid = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\n      if (res.valid) {\n        setInitialize({\n          from_chainId: res.fromChainId,\n          from_network: isNetwork(res.fromChainId, lang).netWork,\n          to_chainId: res.toChainId,\n          to_network: isNetwork(res.toChainId, lang).netWork,\n        })\n        setFrom_img(isNetwork(res.fromChainId, lang).img)\n        setTo_img(isNetwork(res.toChainId, lang).img)\n        setAmount(bg(res.amount, -18).toString())\n        setSending(res.valid)\n      }\n    }\n  }\n\n  const getBalance = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getDeriBalance', [wallet.detail.chainId, wallet.detail.account])\n      setBalance(res)\n    }\n  }\n\n  useEffect(() => {\n    getBalance()\n  }, [wallet.detail, initialize]);\n\n  useEffect(() => {\n    getValid()\n  }, [wallet.detail])\n\n  const select_from = obj => {\n    let Init = JSON.parse(JSON.stringify(initialize));\n    if (Init.to_chainId === obj.id) {\n      Init.from_chainId = initialize.to_chainId;\n      Init.from_network = initialize.to_network;\n      Init.to_chainId = initialize.from_chainId;\n      Init.to_network = initialize.from_network;\n    } else {\n      Init.from_chainId = obj.id;\n      Init.from_network = obj.text;\n    }\n    setInitialize(Init)\n    setDropdownList_from(!dropdownList_from)\n  }\n  const select_to = obj => {\n    let Init = JSON.parse(JSON.stringify(initialize));\n    if (Init.from_chainId === obj.id) {\n      Init.from_chainId = initialize.to_chainId;\n      Init.from_network = initialize.to_network;\n      Init.to_chainId = initialize.from_chainId;\n      Init.to_network = initialize.from_network;\n    } else {\n      Init.to_chainId = obj.id;\n      Init.to_network = obj.text;\n    }\n    setInitialize(Init)\n    setDropdownList_to(!dropdownList_to)\n\n  }\n\n  useEffect(() => {\n    let from_arr;\n    let to_arr;\n    let from_one = netWork_text.filter(p => p.id === +initialize.from_chainId)[0]\n    let from_two = netWork_text.filter(p => p.id !== +initialize.from_chainId)[0]\n    let from_three = netWork_text.filter(p => p.id !== +initialize.from_chainId)[1]\n    let to_one = netWork_text.filter(p => p.id === +initialize.to_chainId)[0]\n    let to_two = netWork_text.filter(p => p.id !== +initialize.to_chainId)[0]\n    let to_three = netWork_text.filter(p => p.id !== +initialize.to_chainId)[1]\n    from_arr = [from_one, from_two, from_three]\n    to_arr = [to_one, to_two, to_three]\n    setFromList(from_arr)\n    setToList(to_arr)\n    setFrom_img(isNetwork(initialize.from_chainId, lang).img)\n    setTo_img(isNetwork(initialize.to_chainId, lang).img)\n    isConnected()\n\n  }, [initialize, wallet.detail])\n\n  const getAmount = (value) => {\n    setAmount(value)\n  }\n\n  return (\n    <div className='bridge-big-box'>\n      <div className='bridge-box'>\n        <div className='bridge-title'>\n          <div className='title'>\n            {lang['bridge']}\n          </div>\n          <div className='birdge-des'>\n            {lang['bridge-des']}\n          </div>\n        </div>\n        <div className='bridge-info'>\n          <div className='select-network-box'>\n            <div className='select-network-title'>\n              {lang['select-networks']}\n            </div>\n            <div className='select-network-from-to'>\n              <div className='from-network'>\n                <div className='from-title'>\n                  {lang['from']}\n                </div>\n                <div className='from-dropdown-list'>\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListFrom() }}>\n                    <div className='network-logo-connected'>\n                      <img src={From_img} alt='' />\n                      <span>{initialize.from_network}</span>\n                      <div className={isClaim ? 'connected-hide' : !isWalletConnected.isFromConnected ? 'is-connected' : 'connected'}>\n                        {(!isClaim && isWalletConnected.isFromConnected) ? lang['connected'] : lang['unconnected']}\n                      </div>\n                    </div>\n                    <img className='down-icon' src={sending ? disabledDown : dropdownList_from ? up : down} alt='' />\n                  </div>\n                  <ul className={selectListClassFrom}>\n                    {fromList.map((item, index) => {\n                      return (\n                        <>\n                          {initialize.from_network !== item.text ? <li key={index} className='wallet-li' onClick={() => select_from(item)}>\n                            <div className='li-logo-network'>\n                              <img alt='' src={item.img} /> <span> {item.text} </span>\n                            </div>\n                          </li> : ''}\n                        </>\n                      )\n                    })}\n                  </ul>\n                </div>\n              </div>\n              <div className='arrow'>\n                <img src={arrow} alt='' />\n              </div>\n              <div className='to-network'>\n                <div className='to-title'>\n                  {lang['to']}\n                </div>\n                <div className='to-dropdown-list'>\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListTo() }}>\n                    <div className='network-logo-connected'>\n                      <img src={To_img} alt='' />\n                      <span>{initialize.to_network}</span>\n                      <div className={!isClaim ? 'connected-hide' : !isWalletConnected.isToConnected ? 'is-connected' : 'connected'}>\n                        {(isClaim && isWalletConnected.isToConnected) ? lang['connected'] : lang['unconnected']}\n                      </div>\n                    </div>\n                    <img className='down-icon' src={sending ? disabledDown : dropdownList_to ? up : down} alt='' />\n                  </div>\n                  <ul className={selectListClassTo}>\n                    {toList.map((item, index) => {\n                      return (\n                        <>\n                          {initialize.to_network !== item.text ? <li key={index} className='wallet-li' onClick={() => select_to(item)}>\n                            <div className='li-logo-network'>\n                              <img alt='' src={item.img} /> <span> {item.text} </span>\n                            </div>\n                          </li> : ''}\n                        </>\n                      )\n                    })}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='set-amount'>\n            <div className='set-amount-title'>\n              {lang['set-amount']}\n            </div>\n            <div className='set-amount-box'>\n              <div className='input-deri'>\n                <Input placeholder='0' value={amount} onChange={getAmount} decimal={18} disabled={sending} className='input-box' />\n                <span><img alt='' src={deriLogo} className='amount-img' /> DERI</span>\n              </div>\n              <div className='total-deri'>\n                {lang['total-amount']} <DeriNumberFormat value={balance} decimalScale={4} thousandSeparator={true} /> DERI\n              </div>\n            </div>\n          </div>\n          <div className='bridge-operate-hint'>\n            <Operate lang={lang} sending={sending} wallet={wallet} balance={balance} isWalletConnected={isWalletConnected} amount={amount} isClaim={isClaim} initialize={initialize} setIsClaim={setIsClaim} setSending={setSending} setAmount={setAmount} />\n          </div>\n          <div className='bridge-to-polygon'>\n            <div>\n              <div className='birdge-to-polygon-title'>\n                {lang['bridge-to-polygon']}\n                <span className='polygon-title'>\n                  <a rel='noreferrer' target='_blank' href='https://bridge.arbitrum.io/'> Arbitrum</a>\n                </span> or\n                <span className='polygon-title'>\n                  <a rel='noreferrer' target='_blank' href='https://wallet.matic.network/bridge'> Polygon</a>\n                </span>\n\n              </div>\n              <div className='bridge-to-polygon-des'>\n                {lang['bridge-to-polygon-des']}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nfunction isNetwork(chainId, lang) {\n  chainId = +chainId\n  let obj = {}\n  switch (chainId) {\n    case 1:\n      obj.netWork = lang[\"ethereum\"];\n      obj.chainId = 1;\n      obj.img = ETH;\n      break;\n    case 56:\n      obj.netWork = lang[\"bsc\"];\n      obj.chainId = 56;\n      obj.img = BSC;\n      break;\n    case 128:\n      obj.netWork = lang[\"heco\"];\n      obj.chainId = 128;\n      obj.img = HECO;\n      break;\n    case 97:\n      obj.netWork = lang[\"bsc-testnet\"];\n      obj.chainId = 97;\n      obj.img = BSC;\n      break;\n    case 3:\n      obj.netWork = lang[\"ropsten\"];\n      obj.chainId = 3;\n      obj.img = ETH;\n      break;\n    case 256:\n      obj.netWork = lang[\"heco-testnet\"];\n      obj.chainId = 256;\n      obj.img = HECO;\n      break;\n    default:\n      break;\n  }\n  return obj;\n}\nexport default inject('wallet')(observer(Bridge))"],"sourceRoot":""}