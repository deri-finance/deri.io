{"version":3,"sources":["utils/DeriNumberFormat.js","utils/graph_api.js","pages/Leaderboard/Leaderboard.tsx"],"names":["Wrapper","styled","NumberFormat","props","width","LoadLine","span","test","height","DeriNumberFormat","useState","className","renderablity","setRenderablity","firstTime","setFirstTime","isValidate","allowZero","value","undefined","isNaN","Math","abs","renderText","replace","useEffect","closeShowLoadingEffectAfterLoaded","wallet","defaultValue","others","decimalScale","bg","toFixed","countDecimal","toNonExponential","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","clearTimeout","suffix","graphQLClient","GraphQLClient","require","graph_request_test","mutation","variables","request","inject","observer","rankingsList","setRankingsList","accountDays","setAccountDays","listDays","setListDays","accountInfo","setAccountInfo","account","useWallet","loadList","useCallback","query","gql","timestamp","date","Date","now","getTime","timeDay","chainId","fromTimestamp","parseInt","String","data","tradePnl","length","list","slice","getAccountInfo","tradeFee","pnl","notional","classnames","active","onClick","prefix","map","item","index","Icon","token","secondary","formatAddress","up","down"],"mappings":"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","file":"static/js/33.81a12e09.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\nimport NumberFormat from 'react-number-format'\nimport { inject, observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport { toNonExponential, countDecimal } from './utils';\nimport { bg } from '../lib/web3js';\nconst Wrapper = styled(NumberFormat)`\n  width : ${props => props.width}px;\n`\nconst LoadLine = styled.span`\n  width : ${props => /px$/.test(props.width) ? props.width : `${props.width}px`};\n  height : ${props => /px$/.test(props.height) ? props.height : `${props.height}px`};\n`\nfunction DeriNumberFormat(props) {\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\n  const [firstTime, setFirstTime] = useState(true)\n  const isValidate = () => {\n    const { allowZero } = props\n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && !isNaN(props.value) && props.value !== 'NaN')\n      || ((Math.abs(props.value)) === 0 && allowZero === true)\n  }\n  const renderText = value => value && value.replace(/\\.$/, '')\n\n  useEffect(() => {\n    const { allowZero, wallet, closeShowLoadingEffectAfterLoaded, defaultValue = '--', ...others } = props\n\n    if (isValidate()) {\n      //如果精度截取之后为0，则动态获取精度，取到不为0为止\n      if (others.decimalScale > 0 && others.value && /\\d+\\.0*[1-9]+/.test(others.value) && !allowZero && (+bg(others.value).toFixed((+others.decimalScale || 2))) === 0) {\n        others.decimalScale = countDecimal(Math.abs(others.value)) + 2\n      }\n\n      if (others.decimalScale === -1 || ((+others.value) === 0 && allowZero)) {\n        delete others.decimalScale\n      }\n\n      //科学计数法\n      others.value = /e(\\+|=)?/.test(others.value) ? toNonExponential(others.value) : '' + others.value\n      if (others.value && /\\d+.9{6}/.test(others.value)) {\n        others.value = (+others.value).toFixed(5)\n      }\n      setRenderablity(<Wrapper {...others} renderText={renderText}\n        displayType='text' fixedDecimalScale={true} thousandSeparator={true} />)\n\n    } else if (firstTime) {\n      const { width, height } = props\n      setRenderablity(<LoadLine className='loading-line' width={width} height={height}></LoadLine>)\n      if (closeShowLoadingEffectAfterLoaded) {\n        setFirstTime(false)\n      }\n    }\n    const timeout = window.setTimeout(() => {\n      // && wallet && (!wallet.isConnected() || !wallet.supportChain)\n      if (!isValidate()) {\n        setRenderablity(defaultValue)\n      }\n    }, defaultValue === others.value ? 0 : 60000)\n    return () => {\n      clearTimeout(timeout)\n    };\n  }, [props.value, props.decimalScale, props.suffix]);\n\n  return renderablity;\n}\nexport default DeriNumberFormat\n// export default inject('wallet')(observer(DeriNumberFormat))","const {GraphQLClient } = require('graphql-request')\nconst graphQLClient = new GraphQLClient(\"https://graph.deri.io/graphql\", {})\nexport function graph_request_test(mutation,variables) {\n    return graphQLClient.request(mutation,variables)\n}","import React, { useState, useEffect } from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\";\nimport \"./leaderboard.less\";\nimport Icon from \"../../components/Icon/Icon\";\nimport { gql } from \"graphql-request\";\nimport { graph_request_test } from \"../../utils/graph_api\";\nimport { formatAddress } from \"../../utils/utils\";\nimport { useCallback } from \"react\";\nimport { useWallet } from \"use-wallet\";\n\nfunction Leaderboard() {\n  const [rankingsList, setRankingsList] = useState<any>([]);\n  const [accountDays, setAccountDays] = useState(30);\n  const [listDays, setListDays] = useState(30);\n  const [accountInfo, setAccountInfo] = useState<any>({});\n  const {  account } = useWallet();\n  const timeDay: number = 86400;\n  const loadList = useCallback(async () => {\n    let query = gql`\n      query ($chainId: Int!, $fromTimestamp: Int!) {\n        tradePnl(where: { chainId: $chainId, fromTimestamp: $fromTimestamp }) {\n          account\n          chainId\n          liquidationLoss\n          notional\n          pnl\n          tradeFee\n          tradePnl\n        }\n      }\n    `;\n    let timestamp = 0;\n    let date = new Date();\n    let now = date.getTime() / 1000;\n    if (listDays === 7) {\n      timestamp = now - timeDay * 7;\n    }\n    if (listDays === 30) {\n      timestamp = now - timeDay * 30;\n    }\n    let variables = { chainId: 42161, fromTimestamp: parseInt(String(timestamp)) };\n    let data = await graph_request_test(query, variables);\n    if (data.tradePnl.length) {\n      let list = data.tradePnl;\n      list = list.slice(0,50)\n      setRankingsList(list);\n    }\n  }, [listDays]);\n  const getAccountInfo = useCallback(async () => {\n    let query = gql`\n      query ($chainId: Int!, $fromTimestamp: Int!, $account: String) {\n        tradePnl(\n          where: {\n            account: $account\n            chainId: $chainId\n            fromTimestamp: $fromTimestamp\n          }\n        ) {\n          account\n          chainId\n          liquidationLoss\n          notional\n          pnl\n          tradeFee\n          tradePnl\n        }\n      }\n    `;\n    let timestamp = 0;\n    let date = new Date();\n    let now = date.getTime() / 1000;\n    if (accountDays === 7) {\n      timestamp = now - timeDay * 7;\n    }\n    if (accountDays === 30) {\n      timestamp = now - timeDay * 30;\n    }\n    let variables = {\n      account: account,\n      chainId: 56,\n      fromTimestamp: parseInt(String(timestamp)),\n    };\n    let data = await graph_request_test(query, variables);\n    if (data.tradePnl.length) {\n      let list = data.tradePnl[0];\n      setAccountInfo(list);\n    }else{\n      setAccountInfo({\n        tradeFee:0,\n        pnl:0,\n        notional:0\n      })\n    }\n  }, [accountDays, account]);\n  useEffect(() => {\n    loadList();\n  }, [listDays]);\n  useEffect(() => {\n    if (account) {\n      getAccountInfo();\n    }\n  }, [account, accountDays]);\n  return (\n    <div className=\"Leaderboard\">\n      <div className=\"Leaderboard-box\">\n        <div className=\"my-historical-trading\">\n          <div className=\"title-tab-day\">\n            <div className=\"title-leaderboard\">\n              My Historical Trading Performance\n            </div>\n            <div className=\"tab-day\">\n              <div\n                className={classnames(\"day-btn\", {\n                  active: accountDays === 7,\n                })}\n                onClick={() => {\n                  setAccountDays(7);\n                }}\n              >\n                7 DAYS\n              </div>\n              <div\n                className={classnames(\"day-btn\", {\n                  active: accountDays === 30,\n                })}\n                onClick={() => {\n                  setAccountDays(30);\n                }}\n              >\n                30 DAYS\n              </div>\n            </div>\n          </div>\n          <div className=\"my-info-list\">\n            <div className=\"info-box\">\n              <div className=\"info-num\">\n                {\" \"}\n                <DeriNumberFormat\n                  prefix=\"$ \"\n                  value={accountInfo.notional}\n                  decimalScale={2}\n                />\n              </div>\n              <div className=\"info-title\"> Notional </div>\n            </div>\n            <div className=\"info-box\">\n              <div className=\"info-num\">\n                <DeriNumberFormat\n                  prefix=\"$ \"\n                  value={+accountInfo.tradeFee}\n                  decimalScale={2}\n                />\n              </div>\n              <div className=\"info-title\"> Transaction Fee </div>\n            </div>\n            <div className=\"info-box\">\n              <div className=\"info-num\">\n                {\" \"}\n                <DeriNumberFormat\n                  prefix=\"$ \"\n                  value={+accountInfo.pnl}\n                  decimalScale={2}\n                />\n              </div>\n              <div className=\"info-title\"> PNL </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"rankings\">\n          <div className=\"rankings-title-tab-day\">\n            <div className=\"rankings-title\">Rankings</div>\n            <div className=\"tab-day\">\n              <div\n                className={classnames(\"day-btn\", { active: listDays === 7 })}\n                onClick={() => {\n                  setListDays(7);\n                }}\n              >\n                7 DAYS\n              </div>\n              <div\n                className={classnames(\"day-btn\", { active: listDays === 30 })}\n                onClick={() => {\n                  setListDays(30);\n                }}\n              >\n                30 DAYS\n              </div>\n            </div>\n          </div>\n          <div className=\"rankings-list-title\">\n            <div className=\"rank\">Rank</div>\n            <div className=\"trade\">Trade</div>\n            <div className=\"notional\">Notional</div>\n            <div className=\"transaction-fee\">Transaction Fee</div>\n            <div className=\"pnl\">PNL</div>\n          </div>\n          <div className=\"rankings-list-num\">\n            {rankingsList.map((item, index) => {\n              return (\n                <div className=\"rankings-list-num-box\" key={index}>\n                  <div className=\"rank\">\n                    {index + 1 === 1 && (\n                      <Icon\n                        token=\"topOne\"\n                        width={undefined}\n                        height={undefined}\n                        secondary={undefined}\n                        className={undefined}\n                        onClick={undefined}\n                      />\n                    )}\n                    {index + 1 === 2 && (\n                      <Icon\n                        token=\"topTwo\"\n                        width={undefined}\n                        height={undefined}\n                        secondary={undefined}\n                        className={undefined}\n                        onClick={undefined}\n                      />\n                    )}\n                    {index + 1 === 3 && (\n                      <Icon\n                        token=\"topThree\"\n                        width={undefined}\n                        height={undefined}\n                        secondary={undefined}\n                        className={undefined}\n                        onClick={undefined}\n                      />\n                    )}\n                    {index + 1 > 3 && (\n                      <span className=\"top-num\">{index + 1}</span>\n                    )}\n                  </div>\n                  <div className=\"trade\">{formatAddress(item.account)}</div>\n                  <div className=\"notional\">\n                    ${\" \"}\n                    <DeriNumberFormat\n                      value={item.notional}\n                      displayType=\"text\"\n                      decimalScale={2}\n                    />\n                  </div>\n                  <div className=\"transaction-fee\">\n                    ${\" \"}\n                    <DeriNumberFormat\n                      value={+item.tradeFee}\n                      displayType=\"text\"\n                      decimalScale={2}\n                    />\n                  </div>\n                  <div\n                    className={classnames(\"pnl\", {\n                      up: +item.pnl > 0,\n                      down: +item.pnl < 0,\n                    })}\n                  >\n                    {+item.pnl > 0 ? \"+\" : \"\"}\n                    <DeriNumberFormat\n                      value={+item.pnl}\n                      displayType=\"text\"\n                      decimalScale={2}\n                      prefix=\"$ \"\n                      // allowZero={true}\n                    />\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default inject(\"wallet\")(observer(Leaderboard));\n"],"sourceRoot":""}