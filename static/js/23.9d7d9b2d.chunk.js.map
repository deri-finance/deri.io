{"version":3,"sources":["utils/DeriNumberFormat.js","components/UnderlineText/UnderlineText.js","components/Input/Input.js","pages/Bridge/Spinner.js","pages/Bridge/img/stage-one.svg","pages/Bridge/img/stage-two.svg","pages/Bridge/img/stage-three.svg","pages/Bridge/img/succeed.svg","pages/Bridge/img/faild.svg","pages/Bridge/Operate.js","pages/Bridge/img/arrow-left.svg","pages/Bridge/img/disabled-down.svg","pages/Bridge/Bridge.js"],"names":["Wrapper","styled","NumberFormat","props","width","LoadLine","span","test","height","DeriNumberFormat","useState","className","renderablity","setRenderablity","firstTime","setFirstTime","isValidate","allowZero","value","undefined","isNaN","Math","abs","renderText","replace","useEffect","closeShowLoadingEffectAfterLoaded","wallet","defaultValue","others","decimalScale","bg","toFixed","countDecimal","toNonExponential","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","clearTimeout","suffix","div","block","isWin","UnderlineText","text","id","String","Date","getTime","random","tip","multiline","html","element","children","tiggerEvent","isWindows","ReactDOMServer","renderToString","isMobile","padding","place","overridePosition","position","currentEvent","currentTarget","refNode","desiredPlace","effect","offset","rect","getBoundingClientRect","tooltipNodeRect","left","x","top","y","document","documentElement","clientWidth","clientHeight","borderRadius","inputWidth","inputHeight","unitPadding","Input","unit","unitTip","max","step","onChange","styles","disableNegtive","focus","placeholder","minTradeVolume","decimal","readOnly","disabled","onBlur","onFocus","inputRef","useRef","current","setCustomValidity","style","type","ref","e","reg","RegExp","target","gt","integerValue","validValue","filter","substring","indexOf","Spinner","class","Operate","lang","amount","balance","initialize","isClaim","setSending","sending","setAmount","setIsClaim","isWalletConnected","config","useConfig","alert","useAlert","history","useHistory","isApprove","setIsApprove","isValid","setIsValid","isFaild","setIsFaild","bridgeState","setBridgeState","claimState","setClaimState","isClickClaim","setIsClickClaim","Button","PRIMARY","fontSize","label","actionElement","setActionElement","connect","valid","a","isConnected","apiProxy","request","detail","account","res","switchNetwork","toChainId","send","error","isFromConnected","isNetwork","from_chainId","netWork","stageOne","chainId","to_chainId","includeResponse","success","stageTwo","setInterval","claim","isToConnected","reset","push","approve","loadApprove","result","stageThree","onClick","alt","src","succeed","toLowerCase","from_network","to_network","FaildLogo","obj","img","ETH","BSC","HECO","inject","observer","setBalance","isdev","DeriEnv","get","netWork_text","fromList","setFromList","toList","setToList","setInitialize","dropdownList_from","setDropdownList_from","dropdownList_to","setDropdownList_to","From_img","setFrom_img","To_img","setTo_img","selectListClassFrom","classNames","selectListClassTo","setIsWalletConnected","async","getBalance","fromChainId","toString","getValid","from_arr","to_arr","p","disabledDown","up","down","map","item","index","Init","JSON","parse","stringify","select_from","arrow","select_to","deriLogo","rel","href"],"mappings":"ySAOMA,EAAUC,YAAOC,IAAPD,CAAH,8CACD,SAAAE,GAAK,OAAIA,EAAMC,SAErBC,EAAWJ,IAAOK,KAAV,6DACF,SAAAH,GAAK,MAAI,MAAMI,KAAKJ,EAAMC,OAASD,EAAMC,MAAhC,UAA2CD,EAAMC,MAAjD,SACR,SAAAD,GAAK,MAAI,MAAMI,KAAKJ,EAAMK,QAAUL,EAAMK,OAAjC,UAA6CL,EAAMK,OAAnD,SAmDPC,IAjDf,SAA0BN,GACxB,MAAwCO,mBAAS,sBAAMC,UAAU,kBAAjE,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACMC,EAAa,WACjB,IAAOC,EAAad,EAAbc,UACP,MAA+B,WAAvB,YAAOd,EAAMe,aAAsCC,IAAhBhB,EAAMe,OAAuC,KAAhBf,EAAMe,QAAkBE,MAAMjB,EAAMe,QAA0B,QAAhBf,EAAMe,OACtF,IAA3BG,KAAKC,IAAInB,EAAMe,SAA+B,IAAdD,GAEvCM,EAAa,SAAAL,GAAK,OAAIA,GAASA,EAAMM,QAAQ,MAAM,KAuCzD,OArCAC,qBAAU,WACR,IAAOR,EAAoFd,EAApFc,UAAiBS,GAAmEvB,EAA1EwB,OAA0ExB,EAAnEuB,mCAAxB,EAA2FvB,EAAjCyB,oBAA1D,MAAyE,KAAzE,EAAiFC,EAAjF,YAA2F1B,EAA3F,GAEA,GAAGa,IAEEa,EAAOC,aAAe,GAAKD,EAAOX,OAAS,gBAAgBX,KAAKsB,EAAOX,SAAWD,GAA0E,KAA3Dc,aAAGF,EAAOX,OAAOc,SAAUH,EAAOC,cAAgB,KACpJD,EAAOC,aAAeG,YAAaZ,KAAKC,IAAIO,EAAOX,QAAU,KAGnC,IAAzBW,EAAOC,cAA4C,KAAlBD,EAAOX,OAAgBD,WAClDY,EAAOC,aAGhBD,EAAOX,MAAQ,WAAWX,KAAKsB,EAAOX,OAASgB,YAAiBL,EAAOX,OAAS,GAAGW,EAAOX,MACvFW,EAAOX,OAAS,WAAWX,KAAKsB,EAAOX,SACxCW,EAAOX,QAAUW,EAAOX,OAAOc,QAAQ,IAEzCnB,EAAgB,cAACb,EAAD,2BAAa6B,GAAb,IAAsBN,WAAYA,EAClDY,YAAc,OAAQC,mBAAmB,EAAMC,mBAAmB,WAC7D,GAAGvB,EAAU,CAClB,IAAOV,EAAgBD,EAAhBC,MAAMI,EAAUL,EAAVK,OACbK,EAAgB,cAACR,EAAD,CAAUM,UAAU,eAAeP,MAAOA,EAAOI,OAAQA,KACtEkB,GACDX,GAAa,GAGjB,IAAMuB,EAAUC,OAAOC,YAAW,WAE5BxB,KACFH,EAAgBe,KAElB,KACF,OAAO,WACLa,aAAaH,MAEd,CAACnC,EAAMe,MAAMf,EAAM2B,aAAa3B,EAAMuC,SAElC9B,I,+ICtDHZ,EAAUC,IAAO0C,IAAV,qPACD,SAAAxC,GAAK,OAAIA,EAAMyC,SAKb,SAAAzC,GAAK,OAAIA,EAAMyC,SAIT,SAAAzC,GAAK,OAAIA,EAAM0C,MAAQ,IAAM,OAKlC,SAASC,EAAT,GAA4L,IAAnKC,EAAkK,EAAlKA,KAAkK,IAA5JC,UAA4J,MAAvJC,QAAO,IAAIC,MAAOC,WAAa9B,KAAK+B,SAAmH,EAAzGC,EAAyG,EAAzGA,IAAKC,EAAoG,EAApGA,UAAWC,EAAyF,EAAzFA,KAAM5C,EAAmF,EAAnFA,UAAmF,IAAxE6C,eAAwE,MAA9D,GAA8D,MAA1DZ,aAA0D,MAAlD,QAAkD,MAAzCxC,aAAyC,MAAjC,OAAiC,EAAzBqD,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YA6BzL,OACE,eAAC1D,EAAD,CAASW,UAAWA,EAAWiC,MAAOA,EAAOC,MAAOc,YAApD,UACE,qBAAKhD,UAAU,OAAO,WAAUqC,EAAI,WAAWO,EAAOK,IAAeC,eAAeL,GAAWH,EAAK,aAAYS,cAAa,QAAUJ,EAAa,YAAWH,EAA/J,SACGR,GAAQU,IAEVJ,GAAO,cAAC,IAAD,CAASL,GAAIA,EAAI5C,MAAOA,EAAO2D,QAAQ,KAAKC,MAAM,SAASC,iBAjC7C,SAACC,EAAUC,EAAcC,EAAeC,EAASL,EAAOM,EAAcC,EAAQC,GACtG,IAAMC,EAAOL,EAAcM,wBACrBC,EAAkBN,EAAQK,wBAEvBE,EAAgCH,EAAnCI,EAAYC,EAAuBL,EAA1BM,EAAQvE,EAAkBiE,EAAlBjE,OAAQJ,EAAUqE,EAAVrE,MACc8D,EAArCU,KAAqCV,EAAnBY,IAoB1B,OAlBIF,EAAOD,EAAgBvE,MAAQ,EAAI4E,SAASC,gBAAgBC,YAC9DN,GAAcvD,KAAKC,IAAIlB,EAAQuE,EAAgBvE,OACtCwE,GAAQD,EAAgBvE,MAAQA,GAAS,EAAI,EACtDwE,GAAcxE,EAEdwE,IAAeD,EAAgBvE,MAAQA,GAAS,EAE9C0E,EAAMtE,EAASmE,EAAgBnE,QAAUwE,SAASC,gBAAgBE,aACpEL,EAAMA,EAAMtE,EAASmE,EAAgBnE,OAErCsE,GAAYtE,EAEVoE,EAAO,IACTA,EAAO,GAELE,EAAM,IACRA,EAAM,GAED,CAAEA,IAAKA,EAAKF,KAAMA,IAQiFrB,KAAMA,EAAM6B,aAAc,EAAG9B,UAAWA,S,kCCxDtJ,8EAKA,MAAMtD,EAAUC,IAAO0C,GAAI;;;;;;;;;;;;YAYfxC,GAASA,EAAMkF;YACflF,GAASA,EAAMmF;;;;;;;;;kBASTnF,GAASA,EAAMoF;;EAGlB,SAASC,EAAT,GAAwP,IAAzO,MAACtE,EAAD,KAAOuE,EAAP,QAAYC,EAAZ,IAAoBC,EAApB,KAAwBC,EAAxB,SAA6BC,EAA7B,OAAsCC,EAAS,GAA/C,eAAkDC,GAAiB,EAAnE,MAAyEC,EAAzE,YAA+EC,EAAY,GAA3F,YAA8FV,EAAc,OAA5G,eAAmHW,EAAnH,QAAkIC,EAAU,EAA5I,SAA8IC,EAA9I,WAAuJf,EAAa,MAApK,YAA0KC,EAAY,OAAtL,UAA6L3E,EAA7L,SAAuM0F,GAAW,EAAlN,OAAwNC,EAAxN,QAA+NC,GAAS,EACpQ,MAAMC,EAAWC,iBAAO,MAoCxB,OARAhF,qBAAU,KACR+E,EAASE,QAAQC,kBAAkB,IAChCH,EAASE,SAAWV,GACrBQ,EAASE,QAAQV,UAEnB,CAACA,IAID,eAAChG,EAAD,CAAUuF,YAAaA,EAAaF,WAAYA,EAAYC,YAAaA,EAAa3E,UAAWA,EAAWiG,MAAO,IAAId,GAAvH,UACE,uBAAOG,YAAaA,EAAaY,KAAK,SAAUP,OAAQA,EAAQC,QAASA,EAASF,SAAYA,EAAUnF,MAAOA,EAAO0E,KAAQA,EAAMkB,IAAKN,EAAUX,SArCxIkB,IACb,MACMC,EAAM,IAAIC,OADA,gBAAed,QAEzB,MAAEjF,GAAU6F,EAAEG,OACpB,GAAGvB,GAAO5D,aAAGb,GAAOiG,GAAGxB,GACrBE,GAAYA,EAASF,QAChB,GAAGI,IAAmB7E,EAAQ,GAAKE,MAAMF,IAC9C2E,GAAYA,EAAS,SAChB,GAAG3E,EACR,GAAGgF,GAAkB,EACnB,GAAGhF,EAAQgF,GAAiB,EAC1BL,GAAYA,EAAS9D,aAAGb,GAAOyB,IAAIuD,GAAgBkB,eAAiBlB,OAC/D,CACL,MAAMmB,EAAanG,EAAQgF,EAC3BL,GAAYA,EAASwB,QAElB,GAAG,QAAQ9G,KAAKW,KAAW8F,EAAIzG,KAAKW,GAAO,CAChD,MAAMoG,EAASpG,EAAMqG,UAAU,EAAErG,EAAMsG,QAAQ,KAAO,EAAIrB,GAC1DN,GAAYA,EAASyB,QAErBzB,GAAYA,EAAS3E,QAGvB2E,GAAYA,EAAS3E,IAcgJkF,SAAUA,IAC/K,qBAAKzF,UAAU,OAAf,SAAuB+E,EAAU,cAAC,IAAD,CAAerC,IAAKqC,EAAS3C,KAAM0C,IAAUA,S,uNCrErE,SAASgC,IACtB,OACE,qBAAKC,MAAM,mBAAX,SACE,qBAAKA,MAAM,a,+BCJF,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,wC,QCA1B,MAA0B,oCCA1B,MAA0B,kCCgB1B,SAASC,EAAT,GAAyI,IAAtHC,EAAqH,EAArHA,KAAMjG,EAA+G,EAA/GA,OAAQkG,EAAuG,EAAvGA,OAAQC,EAA+F,EAA/FA,QAASC,EAAsF,EAAtFA,WAAYC,EAA0E,EAA1EA,QAASC,EAAiE,EAAjEA,WAAYC,EAAqD,EAArDA,QAASC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,kBAC1HC,EAASC,cACTC,EAAQC,cACRC,EAAUC,cAChB,EAAkCjI,oBAAS,GAA3C,mBAAOkI,EAAP,KAAkBC,EAAlB,KACA,EAA8BnI,oBAAS,GAAvC,mBAAOoI,EAAP,KAAgBC,EAAhB,KACA,EAA6BrI,oBAAS,GAAtC,mBAAOsI,EAAP,KAAeC,EAAf,KACA,EAAsCvI,mBAAS,IAA/C,mBAAOwI,EAAP,KAAoBC,EAApB,KACA,EAAoCzI,mBAAS,IAA7C,mBAAO0I,EAAP,KAAmBC,EAAnB,KACA,EAAwC3I,oBAAS,GAAjD,oBAAO4I,GAAP,MAAqBC,GAArB,MACA,GAA0C7I,mBAAS,cAAC8I,EAAA,EAAD,CAAQ3C,KAAM4C,IAAS9I,UAAU,gBAAgB+I,SAAS,KAAKC,MAAO/B,EAAI,WAA7H,qBAAOgC,GAAP,MAAsBC,GAAtB,MACMC,GAAU,WACdnI,EAAOmI,WAEHC,GAAK,uCAAG,4BAAAC,EAAA,0DACRrI,EAAOsI,cADC,gCAEMC,IAASC,QAAQ,2BAA4B,CAACxI,EAAOyI,OAAOC,UAFlE,QAENC,EAFM,QAGFP,QACNpI,EAAO4I,cAAcjC,EAAOgC,EAAIE,YAChCpC,GAAW,IAGbW,EAAWuB,EAAIP,OARL,2CAAH,qDAWLU,GAAI,uCAAG,sBAAAT,EAAA,yDACI,KAAXnC,GAA4B,IAAXA,EADV,uBAETW,EAAMkC,MAAM9C,EAAK,qCAFR,gCAKNC,EAASC,GALH,uBAMTU,EAAMkC,MAAM9C,EAAK,+BANR,6BASNS,EAAkBsC,gBATZ,uBAUTnC,EAAMkC,MAAN,UAAe9C,EAAK,qBAApB,YAA4CgD,EAAU7C,EAAW8C,aAAcjD,GAAMkD,QAArF,YAAgGlD,EAAK,uBAV5F,iCAaXK,GAAW,GACXgB,GAAW,GACXE,EAAe,CACb4B,UAAU,IAhBD,UAkBKb,IAASC,QAAQ,SAAU,CAACxI,EAAOyI,OAAOY,QAASrJ,EAAOyI,OAAOC,QAAStC,EAAWkD,WAAYpD,GAAS,CAAEqD,iBAAiB,IAlBlI,eAmBHC,SACNtB,GAAiB,cAACL,EAAA,EAAD,CAAQ3C,KAAM4C,IAAS9I,UAAU,gBAAgBgJ,MAAO/B,EAAI,cAC7EuB,EAAe,CACb4B,UAAU,EACVK,UAAU,IAEZ7I,OAAO8I,aAAY,WACjBtB,OACC,OAEHd,GAAW,GACXhB,GAAW,IA9BF,4CAAH,qDAiCJqD,GAAK,uCAAG,sBAAAtB,EAAA,yDACP3B,EAAkBkD,cADX,uBAEV/C,EAAMkC,MAAN,UAAe9C,EAAK,qBAApB,YAA4CgD,EAAU7C,EAAWkD,WAAYrD,GAAMkD,QAAnF,YAA8FlD,EAAK,uBAFzF,iCAKZ2B,IAAgB,GAChBN,GAAW,GACXI,EAAc,CACZ0B,UAAU,IARA,SAUIb,IAASC,QAAQ,WAAY,CAACxI,EAAOyI,OAAOY,QAASrJ,EAAOyI,OAAOC,SAAU,CAAEa,iBAAiB,IAVpG,cAWJC,SACN9B,EAAc,CACZ0B,UAAU,EACVK,UAAU,IAEZvB,GAAiB,cAACL,EAAA,EAAD,CAAQ3C,KAAM4C,IAAS9I,UAAU,gBAAgBgJ,MAAO/B,EAAI,cAC7ErF,OAAO8I,aAAY,WACjBtB,OACC,OAEHR,IAAgB,GAChBN,GAAW,IAtBD,4CAAH,qDAyBLuC,GAAQ,WACZ9C,EAAQ+C,KAAK,YAETC,GAAO,uCAAG,sBAAA1B,EAAA,sEACIE,IAASC,QAAQ,aAAc,CAACxI,EAAOyI,OAAOY,QAASrJ,EAAOyI,OAAOC,SAAU,CAAEa,iBAAiB,IADtG,cAENC,SACNtC,GAAa,GACb8C,OAEA9C,GAAa,GACbL,EAAMkC,MAAM9C,EAAK,mBAPL,2CAAH,qDAUP+D,GAAW,uCAAG,4BAAA3B,EAAA,0DACdrI,EAAOsI,cADO,gCAEKC,IAASC,QAAQ,iBAAkB,CAACxI,EAAOyI,OAAOY,QAASrJ,EAAOyI,OAAOC,UAF9E,OAEVuB,EAFU,OAGhB/C,EAAa+C,GAHG,2CAAH,qDA+CjB,OAzCAnK,qBAAU,WACJE,EAAOsI,gBACT0B,KACA5B,QAED,CAACpI,EAAOyI,OAAQrC,IACnBtG,qBAAU,WACJqH,EACFK,EAAe,CACb4B,UAAU,EACVK,UAAU,EACVS,YAAY,IAELvC,KACTD,EAAc,CACZ0B,UAAU,EACVK,UAAU,EACVS,YAAY,IAEd5D,GAAW,GACXE,EAAU,OAGX,CAACW,EAASf,IACbtG,qBAAU,WACR,IAAI+B,EAGAA,EAFA7B,EAAOsI,cACLnB,EACQ,cAACU,EAAA,EAAD,CAAQ3C,KAAM4C,IAAS9I,UAAU,gBAAgBgJ,MAAO/B,EAAI,MAAWkE,QAASR,KAChF1C,EAEFU,GACE,yBAAQ3I,UAAU,WAAWmL,QAASN,GAAtC,cAA8C,qBAAKO,IAAI,GAAGC,IAAKC,IAA/D,IAA2ErE,EAAI,SAA/E,OAEA,cAAC4B,EAAA,EAAD,CAAQ3C,KAAM4C,IAAS9I,UAAU,gBAAgBgJ,MAAO/B,EAAI,KAAUkE,QAASrB,KAJ/E,cAACjB,EAAA,EAAD,CAAQ3C,KAAM4C,IAAS9I,UAAU,gBAAgBgJ,MAAO/B,EAAI,QAAakE,QAASJ,KAOpF,cAAClC,EAAA,EAAD,CAAQ3C,KAAM4C,IAAS9I,UAAU,gBAAgBgJ,MAAO/B,EAAK,kBAAmBkE,QAAShC,KAErGD,GAAiBrG,KAChB,CAACsF,EAASnH,EAAOyI,OAAQxB,EAAWf,EAAQE,EAAYM,EAAkBiB,KAE3E,sBAAK3I,UAAU,UAAf,UACE,sBAAKA,UAAU,gBAAf,UACGiH,EAAI,OADP,IACoBC,EADpB,UACmCD,EAAI,KAASsE,cADhD,IACgEnE,EAAWoE,aAD3E,IAC0FvE,EAAI,GAAOsE,cADrG,IACqHnE,EAAWqE,cAEhI,qBAAKzL,UAAU,MAAf,SACGiJ,KAEH,sBAAKjJ,UAAU,OAAf,WACIqH,GAAW,sBAAKrH,UAAU,UAAf,UACX,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKoL,IAAI,GAAGC,IAAKjB,OAC7C,sBAAKpK,UAAU,aAAf,UAA6BiH,EAAK,4BAAlC,UAEF,sBAAKjH,UAAU,aAAf,UACGuH,GAAW,mCACTgB,EAAY6B,SAAW,qBAAKpK,UAAU,UAAf,SACtB,qBAAKoL,IAAI,GAAGC,IAAKC,MACV,qBAAKtL,UAAU,UAAf,SACL,cAAC8G,EAAD,SAGJS,IAAYc,GAAW,qBAAKrI,UAAU,UACvCqI,GAAW,8BAAK,qBAAKgD,IAAKK,EAAWN,IAAI,aAG9C,sBAAKpL,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKoL,IAAI,GAAGC,IAAKZ,OAC7C,qBAAKzK,UAAU,aAAf,SAA6BiH,EAAK,mCAEpC,sBAAKjH,UAAU,aAAf,UACGuH,GAAW,mCACTgB,EAAY6B,UAAY,mCACtB7B,EAAYkC,SAAW,qBAAKzK,UAAU,UAAf,SACtB,qBAAKoL,IAAI,GAAGC,IAAKC,MACV,qBAAKtL,UAAU,UAAf,SACL,cAAC8G,EAAD,YAILS,IAAYgB,EAAY6B,WAAa,qBAAKpK,UAAU,gBAG3D,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKoL,IAAI,GAAGC,IAAKH,OAC7C,qBAAKlL,UAAU,aAAf,SAA6BiH,EAAK,sBAEpC,sBAAKjH,UAAU,aAAf,UACGuH,GAAW,mCACTgB,EAAY6B,UAAY7B,EAAYkC,UAAY,mCAC9ClC,EAAY2C,WAAa,qBAAKlL,UAAU,UAAf,SACxB,qBAAKoL,IAAI,GAAGC,IAAKC,MACV,qBAAKtL,UAAU,UAAf,SACL,cAAC8G,EAAD,YAKLS,IAAYgB,EAAYkC,WAAa,qBAAKzK,UAAU,mBAI5DqH,GAAW,sBAAKrH,UAAU,WAAf,UACV,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKoL,IAAI,GAAGC,IAAKjB,OAC7C,qBAAKpK,UAAU,aAAf,SAA6BiH,EAAK,uBAEpC,sBAAKjH,UAAU,aAAf,UACG2I,IAAgB,mCACdF,EAAW2B,SAAW,qBAAKpK,UAAU,UAAf,SACrB,qBAAKoL,IAAI,GAAGC,IAAKC,MACV,qBAAKtL,UAAU,UAAf,SACL,cAAC8G,EAAD,SAGJ6B,KAAiBN,GAAW,qBAAKrI,UAAU,UAC5CqI,GAAW,8BAAK,qBAAKgD,IAAKK,EAAWN,IAAI,aAG9C,sBAAKpL,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKoL,IAAI,GAAGC,IAAKZ,OAC7C,sBAAKzK,UAAU,aAAf,UAA6BiH,EAAK,8BAAlC,UAEF,sBAAKjH,UAAU,aAAf,UACG2I,IAAgB,mCACdF,EAAW2B,UAAY,mCACrB3B,EAAWgC,SAAW,qBAAKzK,UAAU,UAAf,SACrB,qBAAKoL,IAAI,GAAGC,IAAKC,MACV,qBAAKtL,UAAU,UAAf,SACL,cAAC8G,EAAD,YAIL6B,KAAiBF,EAAW2B,WAAa,qBAAKpK,UAAU,gBAG/D,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKoL,IAAI,GAAGC,IAAKH,OAC7C,qBAAKlL,UAAU,aAAf,SAA6BiH,EAAI,cAEnC,sBAAKjH,UAAU,aAAf,UACG2I,IAAgB,mCACdF,EAAW2B,UAAY3B,EAAWgC,UAAY,mCAC5ChC,EAAWyC,WAAa,qBAAKlL,UAAU,UAAf,SACvB,qBAAKoL,IAAI,GAAGC,IAAKC,MACV,qBAAKtL,UAAU,UAAf,SACL,cAAC8G,EAAD,YAKL6B,KAAiBF,EAAWgC,WAAa,qBAAKzK,UAAU,yBAQzE,SAASiK,EAAUI,EAASpD,GAE1B,IAAI0E,EAAM,GACV,OAFAtB,GAAWA,GAGT,KAAK,EACHsB,EAAIxB,QAAUlD,EAAI,SAClB0E,EAAItB,QAAU,EACdsB,EAAIC,IAAMC,UACV,MACF,KAAK,GACHF,EAAIxB,QAAUlD,EAAI,IAClB0E,EAAItB,QAAU,GACdsB,EAAIC,IAAME,UACV,MACF,KAAK,IACHH,EAAIxB,QAAUlD,EAAI,KAClB0E,EAAItB,QAAU,IACdsB,EAAIC,IAAMG,UACV,MACF,KAAK,GACHJ,EAAIxB,QAAUlD,EAAK,eACnB0E,EAAItB,QAAU,GACdsB,EAAIC,IAAME,UACV,MACF,KAAK,EACHH,EAAIxB,QAAUlD,EAAI,QAClB0E,EAAItB,QAAU,EACdsB,EAAIC,IAAMC,UACV,MACF,KAAK,IACHF,EAAIxB,QAAUlD,EAAK,gBACnB0E,EAAItB,QAAU,IACdsB,EAAIC,IAAMG,UAKd,OAAOJ,E,cCjUM,MAA0B,uCCA1B,MAA0B,0C,6DC6TzC,SAAS1B,EAAUI,EAASpD,GAE1B,IAAI0E,EAAM,GACV,OAFAtB,GAAWA,GAGT,KAAK,EACHsB,EAAIxB,QAAUlD,EAAI,SAClB0E,EAAItB,QAAU,EACdsB,EAAIC,IAAMC,UACV,MACF,KAAK,GACHF,EAAIxB,QAAUlD,EAAI,IAClB0E,EAAItB,QAAU,GACdsB,EAAIC,IAAME,UACV,MACF,KAAK,IACHH,EAAIxB,QAAUlD,EAAI,KAClB0E,EAAItB,QAAU,IACdsB,EAAIC,IAAMG,UACV,MACF,KAAK,GACHJ,EAAIxB,QAAUlD,EAAK,eACnB0E,EAAItB,QAAU,GACdsB,EAAIC,IAAME,UACV,MACF,KAAK,EACHH,EAAIxB,QAAUlD,EAAI,QAClB0E,EAAItB,QAAU,EACdsB,EAAIC,IAAMC,UACV,MACF,KAAK,IACHF,EAAIxB,QAAUlD,EAAK,gBACnB0E,EAAItB,QAAU,IACdsB,EAAIC,IAAMG,UAKd,OAAOJ,EAEMK,sBAAO,SAAPA,CAAiBC,aAnVhC,YAAmC,IAAnB,OAAEjL,EAAF,KAAUiG,GAAQ,EAChC,MAAOC,EAAQM,GAAazH,mBAAS,KAC9BoH,EAAS+E,GAAcnM,mBAAS,GACjCoM,EAA0B,SAAlBC,UAAQC,MAChBC,EAAeH,EACnB,CACE,CACE/J,KAAM6E,EAAI,QACV5E,GAAI,EACJuJ,IAAKC,WAEP,CACEzJ,KAAM6E,EAAK,eACX5E,GAAI,GACJuJ,IAAKE,WAEP,CACE1J,KAAM6E,EAAK,gBACX5E,GAAI,IACJuJ,IAAKG,YAGP,CAEA,CACE3J,KAAM6E,EAAI,SACV5E,GAAI,EACJuJ,IAAKC,WAEP,CACEzJ,KAAM6E,EAAI,IACV5E,GAAI,GACJuJ,IAAKE,WAEP,CACE1J,KAAM6E,EAAI,KACV5E,GAAI,IACJuJ,IAAKG,aAKJQ,EAAUC,GAAezM,mBAASuM,IAClCG,EAAQC,GAAa3M,mBAASuM,IAC9B/E,EAASD,GAAcvH,oBAAS,IAChCqH,EAAYuF,GAAiB5M,mBAASoM,EAC3C,CACEjC,aAAc,GACdsB,aAAcvE,EAAK,eACnBqD,WAAY,EACZmB,WAAYxE,EAAI,SACd,CACFiD,aAAc,EACdsB,aAAcvE,EAAI,SAClBqD,WAAY,GACZmB,WAAYxE,EAAI,OAEbI,EAASI,GAAc1H,oBAAS,IAChC6M,EAAmBC,GAAwB9M,oBAAS,IACpD+M,EAAiBC,GAAsBhN,oBAAS,IAChDiN,EAAUC,GAAelN,mBAASkK,EAAU7C,EAAW8C,aAAcjD,GAAM2E,MAC3EsB,EAAQC,GAAapN,mBAASkK,EAAU7C,EAAWkD,WAAYrD,GAAM2E,KACtEwB,EAAsBC,IAAW,oBAAqB,CAAE,KAAQT,IAChEU,EAAoBD,IAAW,kBAAmB,CAAE,KAAQP,KAC3DpF,EAAmB6F,GAAwBxN,mBAChD,CACEiK,iBAAiB,EACjBY,eAAe,IAgHnB,OA7DA9J,qBAAU,KAPS0M,WACjB,GAAIxM,EAAOsI,cAAe,CACxB,IAAIK,QAAYJ,IAASC,QAAQ,iBAAkB,CAACxI,EAAOyI,OAAOY,QAASrJ,EAAOyI,OAAOC,UACzFwC,EAAWvC,KAKb8D,KACC,CAACzM,EAAOyI,OAAQrC,IAEnBtG,qBAAU,KA7BO0M,WACf,GAAIxM,EAAOsI,cAAe,CACxB,IAAIK,QAAYJ,IAASC,QAAQ,2BAA4B,CAACxI,EAAOyI,OAAOC,UACxEC,EAAIP,QACNuD,EAAc,CACZzC,aAAcP,EAAI+D,YAClBlC,aAAcvB,EAAUN,EAAI+D,YAAazG,GAAMkD,QAC/CG,WAAYX,EAAIE,UAChB4B,WAAYxB,EAAUN,EAAIE,UAAW5C,GAAMkD,UAE7C8C,EAAYhD,EAAUN,EAAI+D,YAAazG,GAAM2E,KAC7CuB,EAAUlD,EAAUN,EAAIE,UAAW5C,GAAM2E,KACzCpE,EAAUpG,aAAGuI,EAAIzC,QAAS,IAAIyG,YAC9BrG,EAAWqC,EAAIP,UAiBnBwE,KACC,CAAC5M,EAAOyI,SAgCX3I,qBAAU,KACR,IAAI+M,EACAC,EAOJD,EAAW,CANIvB,EAAa3F,QAAOoH,GAAKA,EAAE1L,MAAQ+E,EAAW8C,eAAc,GAC5DoC,EAAa3F,QAAOoH,GAAKA,EAAE1L,MAAQ+E,EAAW8C,eAAc,GAC1DoC,EAAa3F,QAAOoH,GAAKA,EAAE1L,MAAQ+E,EAAW8C,eAAc,IAK7E4D,EAAS,CAJIxB,EAAa3F,QAAOoH,GAAKA,EAAE1L,MAAQ+E,EAAWkD,aAAY,GAC1DgC,EAAa3F,QAAOoH,GAAKA,EAAE1L,MAAQ+E,EAAWkD,aAAY,GACxDgC,EAAa3F,QAAOoH,GAAKA,EAAE1L,MAAQ+E,EAAWkD,aAAY,IAGzEkC,EAAYqB,GACZnB,EAAUoB,GACVb,EAAYhD,EAAU7C,EAAW8C,aAAcjD,GAAM2E,KACrDuB,EAAUlD,EAAU7C,EAAWkD,WAAYrD,GAAM2E,KApG/B,MAClB,IAAI5B,IAAkBhJ,EAAOsI,gBAAkBtI,EAAOyI,OAAOY,WAAajD,EAAW8C,aACjFU,IAAgB5J,EAAOsI,gBAAkBtI,EAAOyI,OAAOY,WAAajD,EAAWkD,WAKnFiD,EAJU,CACRvD,gBAAiBA,EACjBY,cAAeA,KAgGjBtB,KAEC,CAAClC,EAAYpG,EAAOyI,SAOrB,qBAAKzJ,UAAU,iBAAf,SACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,QAAf,SACGiH,EAAI,SAEP,qBAAKjH,UAAU,aAAf,SACGiH,EAAK,mBAGV,sBAAKjH,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,uBAAf,SACGiH,EAAK,qBAER,sBAAKjH,UAAU,yBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SACGiH,EAAI,OAEP,sBAAKjH,UAAU,qBAAf,UACE,sBAAKA,UAAWuH,EAAU,qBAAuB,OAAQ4D,QAAS,KAxH5E5D,GAGJsF,GAAsBD,IAqHR,UACE,sBAAK5M,UAAU,yBAAf,UACE,qBAAKqL,IAAK2B,EAAU5B,IAAI,KACxB,+BAAOhE,EAAWoE,eAClB,qBAAKxL,UAAWqH,EAAU,iBAAoBK,EAAkBsC,gBAAmC,YAAjB,eAAlF,UACK3C,GAAWK,EAAkBsC,gBAAmB/C,EAAI,UAAgBA,EAAI,iBAG/E,qBAAKjH,UAAU,YAAYqL,IAAK9D,EAAUyG,EAAepB,EAAoBqB,UAAKC,UAAM9C,IAAI,QAE9F,oBAAIpL,UAAWoN,EAAf,SACGb,EAAS4B,KAAI,CAACC,EAAMC,IAEjB,mCACGjH,EAAWoE,eAAiB4C,EAAKhM,KAAO,oBAAgBpC,UAAU,YAAYmL,QAAS,IAzF5FQ,KAClB,IAAI2C,EAAOC,KAAKC,MAAMD,KAAKE,UAAUrH,IACjCkH,EAAKhE,aAAeqB,EAAItJ,IAC1BiM,EAAKpE,aAAe9C,EAAWkD,WAC/BgE,EAAK9C,aAAepE,EAAWqE,WAC/B6C,EAAKhE,WAAalD,EAAW8C,aAC7BoE,EAAK7C,WAAarE,EAAWoE,eAE7B8C,EAAKpE,aAAeyB,EAAItJ,GACxBiM,EAAK9C,aAAeG,EAAIvJ,MAE1BuK,EAAc2B,GACdzB,GAAsBD,IA6E8F8B,CAAYN,GAAjE,SACvC,sBAAKpO,UAAU,kBAAf,UACE,qBAAKoL,IAAI,GAAGC,IAAK+C,EAAKxC,MADxB,IACgC,qCAAQwC,EAAKhM,KAAb,WAFgBiM,GAI1C,eAOpB,qBAAKrO,UAAU,QAAf,SACE,qBAAKqL,IAAKsD,EAAOvD,IAAI,OAEvB,sBAAKpL,UAAU,aAAf,UACE,qBAAKA,UAAU,WAAf,SACGiH,EAAI,KAEP,sBAAKjH,UAAU,mBAAf,UACE,sBAAKA,UAAWuH,EAAU,qBAAuB,OAAQ4D,QAAS,KAnJ5E5D,GAGJwF,GAAoBD,IAgJN,UACE,sBAAK9M,UAAU,yBAAf,UACE,qBAAKqL,IAAK6B,EAAQ9B,IAAI,KACtB,+BAAOhE,EAAWqE,aAClB,qBAAKzL,UAAYqH,EAA8BK,EAAkBkD,cAAiC,YAAjB,eAAtD,iBAA3B,SACIvD,GAAWK,EAAkBkD,cAAiB3D,EAAI,UAAgBA,EAAI,iBAG5E,qBAAKjH,UAAU,YAAYqL,IAAK9D,EAAUyG,EAAelB,EAAkBmB,UAAKC,UAAM9C,IAAI,QAE5F,oBAAIpL,UAAWsN,EAAf,SACGb,EAAO0B,KAAI,CAACC,EAAMC,IAEf,mCACGjH,EAAWqE,aAAe2C,EAAKhM,KAAO,oBAAgBpC,UAAU,YAAYmL,QAAS,IA5G5FQ,KAChB,IAAI2C,EAAOC,KAAKC,MAAMD,KAAKE,UAAUrH,IACjCkH,EAAKpE,eAAiByB,EAAItJ,IAC5BiM,EAAKpE,aAAe9C,EAAWkD,WAC/BgE,EAAK9C,aAAepE,EAAWqE,WAC/B6C,EAAKhE,WAAalD,EAAW8C,aAC7BoE,EAAK7C,WAAarE,EAAWoE,eAE7B8C,EAAKhE,WAAaqB,EAAItJ,GACtBiM,EAAK7C,WAAaE,EAAIvJ,MAExBuK,EAAc2B,GACdvB,GAAoBD,IAgG8F8B,CAAUR,GAA/D,SACrC,sBAAKpO,UAAU,kBAAf,UACE,qBAAKoL,IAAI,GAAGC,IAAK+C,EAAKxC,MADxB,IACgC,qCAAQwC,EAAKhM,KAAb,WAFciM,GAIxC,qBASxB,sBAAKrO,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,SACGiH,EAAK,gBAER,sBAAKjH,UAAU,iBAAf,UACE,sBAAKA,UAAU,aAAf,UACE,cAAC6E,EAAA,EAAD,CAAOS,YAAY,IAAI/E,MAAO2G,EAAQhC,SA5FjC3E,IACjBiH,EAAUjH,IA2F6DmF,SAAU6B,EAASvH,UAAU,cACxF,iCAAM,qBAAKoL,IAAI,GAAGC,IAAKwD,UAAU7O,UAAU,eAA3C,cAEF,sBAAKA,UAAU,aAAf,UACGiH,EAAK,gBADR,IACyB,cAACnH,EAAA,EAAD,CAAkBS,MAAO4G,EAAShG,aAAc,EAAGO,mBAAmB,IAD/F,iBAKJ,qBAAK1B,UAAU,sBAAf,SACE,cAACgH,EAAD,CAASC,KAAMA,EAAMM,QAASA,EAASvG,OAAQA,EAAQmG,QAASA,EAASO,kBAAmBA,EAAmBR,OAAQA,EAAQG,QAASA,EAASD,WAAYA,EAAYK,WAAYA,EAAYH,WAAYA,EAAYE,UAAWA,MAEtO,qBAAKxH,UAAU,oBAAf,SACE,gCACE,sBAAKA,UAAU,0BAAf,UACGiH,EAAK,qBACN,sBAAMjH,UAAU,gBAAhB,SACE,mBAAG8O,IAAI,aAAavI,OAAO,SAASwI,KAAK,8BAAzC,yBAHJ,MAKE,sBAAM/O,UAAU,gBAAhB,SACE,mBAAG8O,IAAI,aAAavI,OAAO,SAASwI,KAAK,sCAAzC,2BAIJ,qBAAK/O,UAAU,wBAAf,SACGiH,EAAK","file":"static/js/23.9d7d9b2d.chunk.js","sourcesContent":["import React,{useState,useEffect,useRef} from 'react'\nimport ReactDOM from 'react-dom'\nimport NumberFormat from 'react-number-format'\nimport { inject, observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport { toNonExponential,countDecimal } from './utils';\nimport { bg } from '../lib/web3js';\nconst Wrapper = styled(NumberFormat)`\n  width : ${props => props.width}px;\n`\nconst LoadLine = styled.span`\n  width : ${props => /px$/.test(props.width) ? props.width : `${props.width}px`};\n  height : ${props => /px$/.test(props.height) ? props.height : `${props.height}px`};\n`\nfunction DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\n  const [firstTime, setFirstTime] = useState(true)\n  const isValidate = () => {\n    const {allowZero} = props \n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== ''  && !isNaN(props.value) && props.value !== 'NaN') \n          || ((Math.abs(props.value)) === 0 && allowZero === true )\n  }\n  const renderText = value => value && value.replace(/\\.$/,'')\n\n  useEffect(() => {\n    const {allowZero,wallet,closeShowLoadingEffectAfterLoaded,defaultValue = '--',...others} = props \n\n    if(isValidate()) {\n      //如果精度截取之后为0，则动态获取精度，取到不为0为止\n      if(others.decimalScale > 0 && others.value && /\\d+\\.0*[1-9]+/.test(others.value) && !allowZero && (+bg(others.value).toFixed((+others.decimalScale || 2))) === 0){\n        others.decimalScale = countDecimal(Math.abs(others.value)) + 2\n      } \n\n      if(others.decimalScale === -1 || ((+others.value) === 0 && allowZero)){\n        delete others.decimalScale\n      }\n\n      others.value = /e(\\+|=)?/.test(others.value) ? toNonExponential(others.value) : ''+others.value\n      if(others.value && /\\d+.9{6}/.test(others.value)){\n        others.value = (+others.value).toFixed(5)\n      }\n      setRenderablity(<Wrapper {...others}  renderText={renderText}\n      displayType = 'text'  fixedDecimalScale={true} thousandSeparator={true}/>)\n    } else if(firstTime){\n      const {width,height} = props\n      setRenderablity(<LoadLine className='loading-line' width={width} height={height}></LoadLine>)\n      if(closeShowLoadingEffectAfterLoaded){\n        setFirstTime(false)\n      }\n    } \n    const timeout = window.setTimeout(() => {\n      // && wallet && (!wallet.isConnected() || !wallet.supportChain)\n      if(!isValidate()){\n        setRenderablity(defaultValue)\n      }\n    },60000)\n    return () => {\n      clearTimeout(timeout)\n    };\n  }, [props.value,props.decimalScale,props.suffix]);\n\n  return renderablity;\n}\nexport default DeriNumberFormat\n// export default inject('wallet')(observer(DeriNumberFormat))","/* eslint-disable react/no-danger-with-children */\nimport styled from 'styled-components';\nimport ReactDOMServer from 'react-dom/server';\nimport Tooltip from '../Tooltip/Tooltip';\nimport {isMobile} from '../../utils/utils';\nimport {isWindows} from 'react-device-detect'\n\nconst Wrapper = styled.div`\n  display:${props => props.block};\n  .text {\n    border-bottom : 1px dashed #93A1B8;\n    width : max-content;\n    cursor : pointer;\n    display:${props => props.block}\n  }\n  \n  .__react_component_tooltip.tooltip.show {\n    font-weight : ${props => props.isWin ? 400 : 600} \n  }\n`\n\n\nexport default function UnderlineText({ text, id = String(new Date().getTime()) + Math.random(), tip, multiline, html, className, element = '', block = 'block', width = 'auto', children, tiggerEvent }) {\n  const calculatePosition = (position, currentEvent, currentTarget, refNode, place, desiredPlace, effect, offset) => {\n    const rect = currentTarget.getBoundingClientRect();\n    const tooltipNodeRect = refNode.getBoundingClientRect();\n    //位置被遮盖\n    let { x: left, y: top, height, width } = rect\n    const { left: originLeft, top: originTop } = position\n    // top = top + height\n    if (left + tooltipNodeRect.width / 2 > document.documentElement.clientWidth) {\n      left = left - Math.abs(width - tooltipNodeRect.width);\n    } else if (left - (tooltipNodeRect.width - width) / 2 < 0) {\n      left = left - width\n    } else {\n      left = left - (tooltipNodeRect.width - width) / 2\n    }\n    if (top + height + tooltipNodeRect.height >= document.documentElement.clientHeight) {\n      top = top + height - tooltipNodeRect.height\n    } else {\n      top = top + height\n    }\n    if (left < 0) {\n      left = 0\n    }\n    if (top < 0) {\n      top = 0\n    }\n    return { top: top, left: left }\n  }\n\n  return (\n    <Wrapper className={className} block={block} isWin={isWindows}>\n      <div className='text' data-for={id} data-tip={ html ? ReactDOMServer.renderToString(element) : tip} data-event={isMobile() ? 'click' : tiggerEvent} data-html={html} >\n        {text || children}\n      </div>\n      {tip && <Tooltip id={id} width={width} padding='12' place='bottom' overridePosition={calculatePosition} html={html} borderRadius={8} multiline={multiline}>\n      </Tooltip>}\n    </Wrapper>\n  )\n}","import { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { bg } from '../../lib/web3js';\nimport UnderlineText from '../UnderlineText/UnderlineText';\n\nconst Wrapper = styled.div`\ndisplay : flex;\nfont-size : 14px;\nalign-items : center;\nbackground: rgba(85, 119, 253, 0.1);\nborder-radius: 4px;\njustify-content: space-between;\ninput {\n  background: transparent;\n  border-radius: 4px;\n  // min-width: 240px;\n  border: 0;\n  width : ${props => props.inputWidth};\n  height: ${props => props.inputHeight};\n  color : #E0ECFF;\n  font-size : 18px;\n  padding-left: 16px;\n}\ninput:focus {\n  outline: none;\n}\n.unit {\n  margin-right: ${props => props.unitPadding};\n}\n`\nexport default function Input({value,unit,unitTip,max,step,onChange,styles = {},disableNegtive = true ,focus,placeholder='',unitPadding = '24px',minTradeVolume,decimal = 2,readOnly,inputWidth = '50%',inputHeight='56px',className,disabled = false,onBlur,onFocus}){\n  const inputRef = useRef(null);\n  const change = e => {\n    const regStr = `\\\\d+\\\\.\\\\d{0,${decimal}}$`\n    const reg = new RegExp(regStr)\n    const { value } = e.target\n    if(max && bg(value).gt(max)){    \n      onChange && onChange(max)\n    } else if(disableNegtive && (value < 0 || isNaN(value))) {\n      onChange && onChange('')\n    } else if(value){\n      if(minTradeVolume >= 1) {\n        if(value / minTradeVolume >=1) {\n          onChange && onChange(bg(value).div(minTradeVolume).integerValue() * minTradeVolume) \n        } else {\n          const validValue = value * minTradeVolume\n          onChange && onChange(validValue) \n        }\n      } else if(/\\d+\\./.test(value) && !reg.test(value)){\n        const filter = value.substring(0,value.indexOf('.') + 1 + decimal)\n        onChange && onChange(filter)\n      } else {\n        onChange && onChange(value)\n      }\n    } else {\n      onChange && onChange(value)\n    }\n  }\n\n  useEffect(()=>{\n    inputRef.current.setCustomValidity('')\n    if(inputRef.current && focus){\n      inputRef.current.focus();\n    }\n  },[focus])\n\n\n  return (\n    <Wrapper  unitPadding={unitPadding} inputWidth={inputWidth} inputHeight={inputHeight} className={className} style={{...styles}}>\n      <input placeholder={placeholder} type='number'  onBlur={onBlur} onFocus={onFocus} disabled = {disabled} value={value} step = {step} ref={inputRef} onChange={change} readOnly={readOnly}/>\n      <div className='unit'>{unitTip ? <UnderlineText tip={unitTip} text={unit}/> : unit}</div>\n    </Wrapper>    \n  )\n}","import './spinner.less'\nexport default function Spinner() {\n  return (\n    <div class=\"sleepContentView\">\n      <div class=\"circle\">\n      </div>\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/stage-one.9bfaa393.svg\";","export default __webpack_public_path__ + \"static/media/stage-two.1ce521f2.svg\";","export default __webpack_public_path__ + \"static/media/stage-three.507b43c5.svg\";","export default __webpack_public_path__ + \"static/media/succeed.1057d4b2.svg\";","export default __webpack_public_path__ + \"static/media/faild.831be6f1.svg\";","import { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport Button from '../../components/Button/Button'\nimport { PRIMARY } from '../../utils/Constants';\nimport useConfig from '../../hooks/useConfig'\nimport { useAlert } from 'react-alert'\nimport Spinner from './Spinner'\nimport BSC from '../../assets/img/bsc-logo.svg';\nimport ETH from '../../assets/img/ethereum.svg'\nimport HECO from '../../assets/img/heco.svg'\nimport stageOne from './img/stage-one.svg'\nimport stageTwo from './img/stage-two.svg'\nimport stageThree from './img/stage-three.svg'\nimport apiProxy from '../../model/ApiProxy';\nimport succeed from './img/succeed.svg'\nimport FaildLogo from './img/faild.svg'\nexport default function Operate({ lang, wallet, amount, balance, initialize, isClaim, setSending, sending, setAmount, setIsClaim, isWalletConnected }) {\n  const config = useConfig();\n  const alert = useAlert();\n  const history = useHistory();\n  const [isApprove, setIsApprove] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n  const [isFaild,setIsFaild] = useState(false)\n  const [bridgeState, setBridgeState] = useState({});\n  const [claimState, setClaimState] = useState({});\n  const [isClickClaim, setIsClickClaim] = useState(false);\n  const [actionElement, setActionElement] = useState(<Button type={PRIMARY} className='button-bridge' fontSize='18' label={lang['approve']} ></Button>);\n  const connect = () => {\n    wallet.connect()\n  }\n  const valid = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\n      if (res.valid) {\n        wallet.switchNetwork(config[res.toChainId])\n        setIsClaim(true)\n\n      }\n      setIsValid(res.valid)\n    }\n  }\n  const send = async () => {\n    if (amount === '' || amount === 0) {\n      alert.error(lang['amount-must-be-greater-than-zero'])\n      return;\n    }\n    if (+amount > balance) {\n      alert.error(lang['there-is-not-enough-amount'])\n      return;\n    }\n    if (!isWalletConnected.isFromConnected) {\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.from_chainId, lang).netWork} ${lang['send-finished-two']}`)\n      return;\n    }\n    setSending(true)\n    setIsFaild(false)\n    setBridgeState({\n      stageOne: false\n    })\n    let res = await apiProxy.request('freeze', [wallet.detail.chainId, wallet.detail.account, initialize.to_chainId, amount], { includeResponse: true })\n    if (res.success) {\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\n      setBridgeState({\n        stageOne: true,\n        stageTwo: false\n      })\n      window.setInterval(() => {\n        valid()\n      }, 3000)\n    } else {\n      setIsFaild(true)\n      setSending(false)\n    }\n  }\n  const claim = async () => {\n    if (!isWalletConnected.isToConnected) {\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.to_chainId, lang).netWork} ${lang['send-finished-two']}`)\n      return;\n    }\n    setIsClickClaim(true)\n    setIsFaild(false)\n    setClaimState({\n      stageOne: false,\n    })\n    let res = await apiProxy.request('mintDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\n    if (res.success) {\n      setClaimState({\n        stageOne: true,\n        stageTwo: false,\n      })\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\n      window.setInterval(() => {\n        valid()\n      }, 3000)\n    } else {\n      setIsClickClaim(false)\n      setIsFaild(true)\n    }\n  }\n  const reset = ()=>{\n    history.push('/bridge')\n  }\n  const approve = async () => {\n    const res = await apiProxy.request('unlockDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\n    if (res.success) {\n      setIsApprove(true);\n      loadApprove();\n    } else {\n      setIsApprove(false)\n      alert.error(lang['approve-faild'])\n    }\n  }\n  const loadApprove = async () => {\n    if (wallet.isConnected()) {\n      const result = await apiProxy.request('isDeriUnlocked', [wallet.detail.chainId, wallet.detail.account])\n      setIsApprove(result);\n    }\n  }\n  useEffect(() => {\n    if (wallet.isConnected()) {\n      loadApprove();\n      valid()\n    }\n  }, [wallet.detail, initialize]);\n  useEffect(() => {\n    if (isValid) {\n      setBridgeState({\n        stageOne: true,\n        stageTwo: true,\n        stageThree: true,\n      })\n    } else if (isClickClaim) {\n      setClaimState({\n        stageOne: true,\n        stageTwo: true,\n        stageThree: true,\n      })\n      setSending(false)\n      setAmount('')\n    } else {\n    }\n  }, [isValid, initialize]);\n  useEffect(() => {\n    let element;\n    if (wallet.isConnected()) {\n      if (isValid) {\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['claim']} onClick={claim} />\n      } else if (!isApprove) {\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['approve']} onClick={approve} />\n      } else if(isClickClaim){\n        element = <button className='complete' onClick={reset}> <img alt='' src={succeed}/> {lang['complete']} </button>\n      }else {\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['send']} onClick={send} ></Button>\n      }\n    } else {\n      element = <Button type={PRIMARY} className='button-bridge' label={lang['connect-wallet']} onClick={connect} ></Button>\n    }\n    setActionElement(element)\n  }, [isValid, wallet.detail, isApprove, amount, initialize, isWalletConnected,isClickClaim])\n  return (\n    <div className='operate'>\n      <div className='from-to-title'>\n        {lang['bridge']} {amount}  DERI {lang['from'].toLowerCase()} {initialize.from_network} {lang['to'].toLowerCase()} {initialize.to_network}\n      </div>\n      <div className='btn'>\n        {actionElement}\n      </div>\n      <div className='hint'>\n        {!isClaim && <div className='sending'>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\n              <div className='stage-text'>{lang['sending-deri-to-wormhole']} </div>\n            </div>\n            <div className='ok-pending'>\n              {sending && <>\n                {bridgeState.stageOne ? <div className='succeed'>\n                  <img alt='' src={succeed} />\n                </div> : <div className='pending'>\n                    <Spinner />\n                  </div>}\n              </>}\n              {!sending && !isFaild && <div className='staic'></div>}\n              {isFaild && <div><img src={FaildLogo} alt='' /></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sign']}</div>\n            </div>\n            <div className='ok-pending'>\n              {sending && <>\n                {bridgeState.stageOne && <>\n                  {bridgeState.stageTwo ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n              </>}\n              {(!sending || !bridgeState.stageOne) && <div className='staic'></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\n              <div className='stage-text'>{lang['bridge-signed']}</div>\n            </div>\n            <div className='ok-pending'>\n              {sending && <>\n                {bridgeState.stageOne && bridgeState.stageTwo && <>\n                  {bridgeState.stageThree ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n\n              </>}\n              {(!sending || !bridgeState.stageTwo) && <div className='staic'></div>}\n            </div>\n          </div>\n        </div>}\n        {isClaim && <div className='claiming'>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\n              <div className='stage-text'>{lang['claim-deri-ing']}</div>\n            </div>\n            <div className='ok-pending'>\n              {isClickClaim && <>\n                {claimState.stageOne ? <div className='succeed'>\n                  <img alt='' src={succeed} />\n                </div> : <div className='pending'>\n                    <Spinner />\n                  </div>}\n              </>}\n              {!isClickClaim && !isFaild && <div className='staic'></div>}\n              {isFaild && <div><img src={FaildLogo} alt='' /></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sync']} </div>\n            </div>\n            <div className='ok-pending'>\n              {isClickClaim && <>\n                {claimState.stageOne && <>\n                  {claimState.stageTwo ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n              </>}\n              {(!isClickClaim || !claimState.stageOne) && <div className='staic'></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\n              <div className='stage-text'>{lang['finished']}</div>\n            </div>\n            <div className='ok-pending'>\n              {isClickClaim && <>\n                {claimState.stageOne && claimState.stageTwo && <>\n                  {claimState.stageThree ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n\n              </>}\n              {(!isClickClaim || !claimState.stageTwo) && <div className='staic'></div>}\n            </div>\n          </div>\n        </div>}\n      </div>\n    </div>\n  )\n}\nfunction isNetwork(chainId, lang) {\n  chainId = +chainId\n  let obj = {}\n  switch (chainId) {\n    case 1:\n      obj.netWork = lang[\"ethereum\"];\n      obj.chainId = 1;\n      obj.img = ETH;\n      break;\n    case 56:\n      obj.netWork = lang[\"bsc\"];\n      obj.chainId = 56;\n      obj.img = BSC;\n      break;\n    case 128:\n      obj.netWork = lang[\"heco\"];\n      obj.chainId = 128;\n      obj.img = HECO;\n      break;\n    case 97:\n      obj.netWork = lang[\"bsc-testnet\"];\n      obj.chainId = 97;\n      obj.img = BSC;\n      break;\n    case 3:\n      obj.netWork = lang[\"ropsten\"];\n      obj.chainId = 3;\n      obj.img = ETH;\n      break;\n    case 256:\n      obj.netWork = lang[\"heco-testnet\"];\n      obj.chainId = 256;\n      obj.img = HECO;\n      break;\n    default:\n      break;\n  }\n  return obj;\n}","export default __webpack_public_path__ + \"static/media/arrow-left.f14b02ac.svg\";","export default __webpack_public_path__ + \"static/media/disabled-down.e8dbb78e.svg\";","import React, { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react';\nimport { DeriEnv, bg } from \"../../lib/web3js/index\";\nimport Input from '../../components/Input/Input'\nimport Operate from './Operate'\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\nimport apiProxy from '../../model/ApiProxy'\nimport arrow from './img/arrow-left.svg'\nimport disabledDown from './img/disabled-down.svg'\nimport BSC from '../../assets/img/BNB.svg';\nimport ETH from '../../assets/img/ethereum.svg'\nimport deriLogo from '../../assets/img/logo.svg'\nimport HECO from '../../assets/img/heco.svg'\nimport down from '../../assets/img/arrow-down.svg'\nimport up from '../../assets/img/arrow-up.svg'\nimport classNames from 'classnames'\nimport './bridge.less'\nfunction Bridge({ wallet, lang }) {\n  const [amount, setAmount] = useState('');\n  const [balance, setBalance] = useState(0);\n  const isdev = DeriEnv.get() !== 'prod' ? true : false;\n  const netWork_text = isdev ?\n    [\n      {\n        text: lang['ropsten'],\n        id: 3,\n        img: ETH,\n      },\n      {\n        text: lang['bsc-testnet'],\n        id: 97,\n        img: BSC,\n      },\n      {\n        text: lang['heco-testnet'],\n        id: 256,\n        img: HECO,\n      }\n    ]\n    : [\n\n      {\n        text: lang['ethereum'],\n        id: 1,\n        img: ETH,\n      },\n      {\n        text: lang['bsc'],\n        id: 56,\n        img: BSC,\n      },\n      {\n        text: lang['heco'],\n        id: 128,\n        img: HECO,\n      }\n\n    ]\n\n  const [fromList, setFromList] = useState(netWork_text)\n  const [toList, setToList] = useState(netWork_text)\n  const [sending, setSending] = useState(false);\n  const [initialize, setInitialize] = useState(isdev ?\n    {\n      from_chainId: 97,\n      from_network: lang['bsc-testnet'],\n      to_chainId: 3,\n      to_network: lang['ropsten']\n    } : {\n      from_chainId: 1,\n      from_network: lang['ethereum'],\n      to_chainId: 56,\n      to_network: lang['bsc']\n    });\n  const [isClaim, setIsClaim] = useState(false);\n  const [dropdownList_from, setDropdownList_from] = useState(false);\n  const [dropdownList_to, setDropdownList_to] = useState(false);\n  const [From_img, setFrom_img] = useState(isNetwork(initialize.from_chainId, lang).img);\n  const [To_img, setTo_img] = useState(isNetwork(initialize.to_chainId, lang).img);\n  const selectListClassFrom = classNames('from-network-list', { 'show': dropdownList_from })\n  const selectListClassTo = classNames('to-network-list', { 'show': dropdownList_to })\n  const [isWalletConnected, setIsWalletConnected] = useState(\n    {\n      isFromConnected: false,\n      isToConnected: false\n    }\n  );\n  const isConnected = () => {\n    let isFromConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.from_chainId ? true : false) : false;\n    let isToConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.to_chainId ? true : false) : false;\n    let obj = {\n      isFromConnected: isFromConnected,\n      isToConnected: isToConnected\n    }\n    setIsWalletConnected(obj)\n  }\n\n  const showListFrom = () => {\n    if (sending) {\n      return;\n    }\n    setDropdownList_from(!dropdownList_from)\n  }\n  const showListTo = () => {\n    if (sending) {\n      return;\n    }\n    setDropdownList_to(!dropdownList_to)\n  }\n\n  const getValid = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\n      if (res.valid) {\n        setInitialize({\n          from_chainId: res.fromChainId,\n          from_network: isNetwork(res.fromChainId, lang).netWork,\n          to_chainId: res.toChainId,\n          to_network: isNetwork(res.toChainId, lang).netWork,\n        })\n        setFrom_img(isNetwork(res.fromChainId, lang).img)\n        setTo_img(isNetwork(res.toChainId, lang).img)\n        setAmount(bg(res.amount, -18).toString())\n        setSending(res.valid)\n      }\n    }\n  }\n\n  const getBalance = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getDeriBalance', [wallet.detail.chainId, wallet.detail.account])\n      setBalance(res)\n    }\n  }\n\n  useEffect(() => {\n    getBalance()\n  }, [wallet.detail, initialize]);\n\n  useEffect(() => {\n    getValid()\n  }, [wallet.detail])\n\n  const select_from = obj => {\n    let Init = JSON.parse(JSON.stringify(initialize));\n    if (Init.to_chainId === obj.id) {\n      Init.from_chainId = initialize.to_chainId;\n      Init.from_network = initialize.to_network;\n      Init.to_chainId = initialize.from_chainId;\n      Init.to_network = initialize.from_network;\n    } else {\n      Init.from_chainId = obj.id;\n      Init.from_network = obj.text;\n    }\n    setInitialize(Init)\n    setDropdownList_from(!dropdownList_from)\n  }\n  const select_to = obj => {\n    let Init = JSON.parse(JSON.stringify(initialize));\n    if (Init.from_chainId === obj.id) {\n      Init.from_chainId = initialize.to_chainId;\n      Init.from_network = initialize.to_network;\n      Init.to_chainId = initialize.from_chainId;\n      Init.to_network = initialize.from_network;\n    } else {\n      Init.to_chainId = obj.id;\n      Init.to_network = obj.text;\n    }\n    setInitialize(Init)\n    setDropdownList_to(!dropdownList_to)\n\n  }\n\n  useEffect(() => {\n    let from_arr;\n    let to_arr;\n    let from_one = netWork_text.filter(p => p.id === +initialize.from_chainId)[0]\n    let from_two = netWork_text.filter(p => p.id !== +initialize.from_chainId)[0]\n    let from_three = netWork_text.filter(p => p.id !== +initialize.from_chainId)[1]\n    let to_one = netWork_text.filter(p => p.id === +initialize.to_chainId)[0]\n    let to_two = netWork_text.filter(p => p.id !== +initialize.to_chainId)[0]\n    let to_three = netWork_text.filter(p => p.id !== +initialize.to_chainId)[1]\n    from_arr = [from_one, from_two, from_three]\n    to_arr = [to_one, to_two, to_three]\n    setFromList(from_arr)\n    setToList(to_arr)\n    setFrom_img(isNetwork(initialize.from_chainId, lang).img)\n    setTo_img(isNetwork(initialize.to_chainId, lang).img)\n    isConnected()\n\n  }, [initialize, wallet.detail])\n\n  const getAmount = (value) => {\n    setAmount(value)\n  }\n\n  return (\n    <div className='bridge-big-box'>\n      <div className='bridge-box'>\n        <div className='bridge-title'>\n          <div className='title'>\n            {lang['bridge']}\n          </div>\n          <div className='birdge-des'>\n            {lang['bridge-des']}\n          </div>\n        </div>\n        <div className='bridge-info'>\n          <div className='select-network-box'>\n            <div className='select-network-title'>\n              {lang['select-networks']}\n            </div>\n            <div className='select-network-from-to'>\n              <div className='from-network'>\n                <div className='from-title'>\n                  {lang['from']}\n                </div>\n                <div className='from-dropdown-list'>\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListFrom() }}>\n                    <div className='network-logo-connected'>\n                      <img src={From_img} alt='' />\n                      <span>{initialize.from_network}</span>\n                      <div className={isClaim ? 'connected-hide' : !isWalletConnected.isFromConnected ? 'is-connected' : 'connected'}>\n                        {(!isClaim && isWalletConnected.isFromConnected) ? lang['connected'] : lang['unconnected']}\n                      </div>\n                    </div>\n                    <img className='down-icon' src={sending ? disabledDown : dropdownList_from ? up : down} alt='' />\n                  </div>\n                  <ul className={selectListClassFrom}>\n                    {fromList.map((item, index) => {\n                      return (\n                        <>\n                          {initialize.from_network !== item.text ? <li key={index} className='wallet-li' onClick={() => select_from(item)}>\n                            <div className='li-logo-network'>\n                              <img alt='' src={item.img} /> <span> {item.text} </span>\n                            </div>\n                          </li> : ''}\n                        </>\n                      )\n                    })}\n                  </ul>\n                </div>\n              </div>\n              <div className='arrow'>\n                <img src={arrow} alt='' />\n              </div>\n              <div className='to-network'>\n                <div className='to-title'>\n                  {lang['to']}\n                </div>\n                <div className='to-dropdown-list'>\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListTo() }}>\n                    <div className='network-logo-connected'>\n                      <img src={To_img} alt='' />\n                      <span>{initialize.to_network}</span>\n                      <div className={!isClaim ? 'connected-hide' : !isWalletConnected.isToConnected ? 'is-connected' : 'connected'}>\n                        {(isClaim && isWalletConnected.isToConnected) ? lang['connected'] : lang['unconnected']}\n                      </div>\n                    </div>\n                    <img className='down-icon' src={sending ? disabledDown : dropdownList_to ? up : down} alt='' />\n                  </div>\n                  <ul className={selectListClassTo}>\n                    {toList.map((item, index) => {\n                      return (\n                        <>\n                          {initialize.to_network !== item.text ? <li key={index} className='wallet-li' onClick={() => select_to(item)}>\n                            <div className='li-logo-network'>\n                              <img alt='' src={item.img} /> <span> {item.text} </span>\n                            </div>\n                          </li> : ''}\n                        </>\n                      )\n                    })}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='set-amount'>\n            <div className='set-amount-title'>\n              {lang['set-amount']}\n            </div>\n            <div className='set-amount-box'>\n              <div className='input-deri'>\n                <Input placeholder='0' value={amount} onChange={getAmount} disabled={sending} className='input-box' />\n                <span><img alt='' src={deriLogo} className='amount-img' /> DERI</span>\n              </div>\n              <div className='total-deri'>\n                {lang['total-amount']} <DeriNumberFormat value={balance} decimalScale={4} thousandSeparator={true} /> DERI\n              </div>\n            </div>\n          </div>\n          <div className='bridge-operate-hint'>\n            <Operate lang={lang} sending={sending} wallet={wallet} balance={balance} isWalletConnected={isWalletConnected} amount={amount} isClaim={isClaim} initialize={initialize} setIsClaim={setIsClaim} setSending={setSending} setAmount={setAmount} />\n          </div>\n          <div className='bridge-to-polygon'>\n            <div>\n              <div className='birdge-to-polygon-title'>\n                {lang['bridge-to-polygon']}\n                <span className='polygon-title'>\n                  <a rel='noreferrer' target='_blank' href='https://bridge.arbitrum.io/'> Arbitrum</a>\n                </span> or\n                <span className='polygon-title'>\n                  <a rel='noreferrer' target='_blank' href='https://wallet.matic.network/bridge'> Polygon</a>\n                </span>\n\n              </div>\n              <div className='bridge-to-polygon-des'>\n                {lang['bridge-to-polygon-des']}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nfunction isNetwork(chainId, lang) {\n  chainId = +chainId\n  let obj = {}\n  switch (chainId) {\n    case 1:\n      obj.netWork = lang[\"ethereum\"];\n      obj.chainId = 1;\n      obj.img = ETH;\n      break;\n    case 56:\n      obj.netWork = lang[\"bsc\"];\n      obj.chainId = 56;\n      obj.img = BSC;\n      break;\n    case 128:\n      obj.netWork = lang[\"heco\"];\n      obj.chainId = 128;\n      obj.img = HECO;\n      break;\n    case 97:\n      obj.netWork = lang[\"bsc-testnet\"];\n      obj.chainId = 97;\n      obj.img = BSC;\n      break;\n    case 3:\n      obj.netWork = lang[\"ropsten\"];\n      obj.chainId = 3;\n      obj.img = ETH;\n      break;\n    case 256:\n      obj.netWork = lang[\"heco-testnet\"];\n      obj.chainId = 256;\n      obj.img = HECO;\n      break;\n    default:\n      break;\n  }\n  return obj;\n}\nexport default inject('wallet')(observer(Bridge))"],"sourceRoot":""}